<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>ExeDataHub</title>
<link>https://exeter-data-analytics.github.io/posts.html</link>
<atom:link href="https://exeter-data-analytics.github.io/posts.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.7.31</generator>
<lastBuildDate>Sun, 15 Jun 2025 23:00:00 GMT</lastBuildDate>
<item>
  <title>intRos: Introduction to OpenStack</title>
  <dc:creator>MD Sharma</dc:creator>
  <dc:creator>Stephen Lang</dc:creator>
  <link>https://exeter-data-analytics.github.io/posts/intro_to_openstack/</link>
  <description><![CDATA[ 





<section id="learning-objectives" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Learning objectives</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>By the end of this workshop you will be expected to:</strong></p>
<ul>
<li>Log into the UoE OpenStack Console and start your instance of the appropriate workshop.</li>
<li>Log in to the OpenStack instance from your own computer.</li>
<li>Be ready to start the tutorials at your own pace.</li>
</ul>
</div>
</div>
</section>
<section id="outline" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Outline</h1>
<p>This course will give you an introduction into the Openstack Cloud Environment. OpenStack allows you to set up a private computer within the University’s Advanced Research Computing ecosystem. <a href="https://www.openstack.org/software/">Click here to learn more about OpenStack.</a> Several other courses in our series will use OpenStack and you may later use it for your own research.</p>
<p>We are going to introduce a lot of new concepts. Here is an overview of the 3 steps you need to start your course.</p>
<ol type="1">
<li><p><strong>Openstack Console</strong></p>
<p>First log onto the OpenStack console: <a href="https://stack.exeter.ac.uk" class="uri">https://stack.exeter.ac.uk</a> Use the information in the OpenStack Console section of the provided document to log on. Follow the sections “Introduction” and “Tour of OpenStack Cloud” in the course material.</p></li>
<li><p><strong>Create your training Instance.</strong></p>
<p>Follow the sections “Create our Instance” in the course material. Use the information in the “OpenStack Image” section of the provided document.</p></li>
<li><p><strong>Login to your instance.</strong></p>
<p>The course notes explain 3 ways to connect to your instance (X2Go, PuTTy and MobaXterm). You only need to use one of these.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Managing your instance
</div>
</div>
<div class="callout-body-container callout-body">
<p><a href="./manage.html">Here are some instructions</a> on how to stop and start your instances at the start of end of each session.</p>
</div>
</div></li>
</ol>
</section>
<section id="introduction" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Introduction</h1>
<p>For this workshop we will provide an overview of the internal OpenStack provision, part of the University of Exeter’s Advanced Research Computing facilities and see how, as researchers, we can use this flexible resource to get work done efficiently.</p>
<p>You should be able to access OpenStack and all of the functionality below via your own account to do your research. The aim of this workshop is to give you an introduction to OpenStack and Unix so you are ready to take full advantage of its capabilities!</p>
<p>Firstly some concepts and terminology might be confusing so here is some explanation of the advantages of using OpenStack.</p>
<section id="some-terminology" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="some-terminology"><span class="header-section-number">3.1</span> Some Terminology</h2>
<p><strong><em>An Image:</em></strong> This is the starting point or template for the course. Think of it as a master copy of the computer which contains all the programs and data that are required to follow the course. We will use it as a template to start your own Instance.</p>
<p><strong><em>An Instance:</em></strong> Almost the first thing you will do is create your own copy of the image - we call this an instance or a virtual machine. It contains everything that was in the image plus any files you create during the course.</p>
<p><strong><em>A Volume</em></strong> This can be thought of as an additional hard disk which you can add or remove from an instance.</p>
<p><strong><em>Remote Desktop</em></strong> We can’t plug a monitor and keyboard into a virtual machine (instance) so we need a program on our computer which connects to the instance allows us to see and control the instance from our desktop. In the course we will use a program called X2Go.</p>
<p><strong><em>Command Line Client</em></strong> It is not really necessary to connect to an instance using remote desktop software. It is possible to connect only via a command line interfaces - you will not get any menus, icons images - you will only be able to type commands to tell the instance what you want to do.</p>
</section>
<section id="why-use-virtual-machines" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="why-use-virtual-machines"><span class="header-section-number">3.2</span> Why Use Virtual Machines?</h2>
<p>Instead of relying on dedicated physical hardware for every task, <strong>virtual machines (VMs)</strong> offer a highly flexible and efficient alternative. Imagine a scenario where you have a set number of powerful physical computers. Rather than assigning one computer to each user, VMs allow you to <strong>pool the resources</strong> of these physical machines and then divide them into multiple isolated virtual environments.</p>
<p>This approach offers significant advantages:</p>
<ul>
<li><p><strong>Optimal Resource Utilization:</strong> Physical machines often sit idle or are underutilized. VMs allow you to share resources like disk space, memory, and processors among many virtual instances. This means you can run more virtual machines than you have physical ones, making the most of your hardware. When a VM isn’t heavily used, its resources can be dynamically allocated to other, more active VMs.</p></li>
<li><p><strong>Cost and Environmental Benefits:</strong> By maximizing hardware utilization, you can reduce the number of physical servers needed. This translates to lower initial purchasing costs, reduced energy consumption for operation and cooling, and a smaller physical footprint. This makes virtual machines a <strong>greener option</strong> in many cases, contributing to sustainability efforts.</p></li>
</ul>
<section id="the-power-of-full-control" class="level3">
<h3 class="anchored" data-anchor-id="the-power-of-full-control">The Power of Full Control</h3>
<p>One of the most compelling reasons to use virtual machines is the <strong>full control you gain over your environment</strong>. Each virtual machine acts like an independent computer, allowing you to configure and customize it precisely to your needs.</p>
<p>Here’s how this translates into practical benefits:</p>
<ul>
<li><p><strong>Instant Provisioning and Customization:</strong> You can quickly launch new virtual machines with a wide variety of pre-configured <strong>machine images</strong>. These images can range from basic operating systems to specialized environments equipped with specific software for scientific modeling, data analysis, or development. This eliminates the need for lengthy manual installations and configurations.</p></li>
<li><p><strong>Share and Collaborate with Ease:</strong> If you’ve developed a specific computational environment or analysis workflow, you can create and share your own VM images. This allows collaborators to instantly access and replicate your setup, ensuring consistency and simplifying the sharing of complex projects.</p></li>
<li><p><strong>Dynamic Resource Scalability:</strong> Need more storage or processing power for a task? With VMs, you can often <strong>add storage on-the-fly</strong> by attaching virtual volumes, or <strong>increase processing power and RAM with just a few clicks</strong>. This agility means you can adapt your environment as your computational demands change, without the need for physical hardware upgrades or downtime.</p></li>
<li><p><strong>Flexible Testing and Development:</strong> VMs are invaluable for researchers. You can easily create a machine to test the inner workings of the code you are developing before deploying them to larger, more complex systems. This isolated testing environment prevents conflicts and ensures smooth transitions.</p></li>
</ul>
<p>Essentially, virtual machines empower you to create, modify, and manage your computational environment with unparalleled flexibility, giving you complete command over your digital workspace.</p>
<p>Let’s go to the next section and learn about the OpenStack Console.</p>
</section>
</section>
<section id="logging-into-the-console" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="logging-into-the-console"><span class="header-section-number">3.3</span> Logging Into the Console</h2>
<p>In addition to being extremely comprehensive, the Exeter OpenStack cloud has a relatively easy (but detailed!) interface for interacting with its offerings. All you have to do is log in via a web-browser and most of the functionality of the system is available for you and relatively easy to use.</p>
<p>To get started go to the following URL and login with your University of Exeter username (in the format of <em>user123</em>) the domain (exeter.ac.uk), and the password you use when logging onto your university resources.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>We have set up a single workshop project which we will be using for training. Please do <strong>NOT</strong> abuse this project and do <strong>NOT</strong> put any personal, confidential or important data on the machines you will set-up during the training. You will all log in to the same management console and will be able to see machines which your friends and colleagues on the course will start.</p>
</div>
</div>
<section id="httpsstack.exeter.ac.uk" class="level4">
<h4 class="anchored" data-anchor-id="httpsstack.exeter.ac.uk"><a href="https://stack.exeter.ac.uk/" class="uri">https://stack.exeter.ac.uk/</a></h4>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-login-01.png" class="img-fluid"></p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>This resource is only accessible within the University of Exeter network. So, if you are accessing this workshop from home or anywhere outside the campuses, you will need to connect to the University VPN service to be able to access the system. If using WiFi on campus, please use Eduroam or UoE_Secure only.</p>
</div>
</div>
<p>Once logged in, you will see a web-page that looks similar to this:</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-01.png" class="img-fluid"></p>
<p>As a first step - let’s associate ourselves with the correct project. This is specially important for all users who may have access to multiple “projects” associated with their research groups. In this instance, please click on the <em>Project</em> dropdown and select <em>ARC_Intro_Penryn - Workshop</em>&nbsp;as your project. If done correctly, you should see a tick mark next to the selected project, as illustrated below.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/images/clipboard-739322012.png" class="img-fluid"></p>
<p>We can now take a look at the various tabs. These include:</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Instances
</div>
</div>
<div class="callout-body-container callout-body">
<p>This is the list of virtual machines that have been created.</p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Compute
</div>
</div>
<div class="callout-body-container callout-body">
<p>The service OpenStack is known for. It enables you to create Linux and Windows Virtual machines. Best of all their computational and/or disk capacity can be increased or decreased at the click of a button! This section has most of the things we need for this course.</p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Volumes
</div>
</div>
<div class="callout-body-container callout-body">
<p>A storage unit. These can be created and attached to any compute which you have running. Ideal for moving large amounts of data between machines. Think of it as a removable hard drive which you can attach to any machine.</p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Images
</div>
</div>
<div class="callout-body-container callout-body">
<p>These are the templates from which you create instances.</p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Object store
</div>
</div>
<div class="callout-body-container callout-body">
<p>This is another type of storage, but is relatively slow. It is ideal for archive or when storing large files (i.e.&nbsp;several GB).However, it is currently disabled on the system. if you want to know more about it, please as your Research IT support team for assistance.</p>
</div>
</div>
<p>Click on “Compute” and then “Overview” at the top left.</p>
<p>On this page you’ll get a summary of the state for your account. You can see an example below.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Note that we are using a shared project where you’ll also see everyone else’s instances. If you were using your own <em>project</em> (or your research group’s project), you would only see your instances (or that of your research group).</p>
</div>
</div>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-03.png" class="img-fluid"></p>
<p>You see here that we have a certain allocation of resources (memory, disk space, CPUs). We can choose how to allocate these to accomplish our scientific goals. For instance, we may need one very large machine with lots of resource to do a single task (e.g.&nbsp;a genome assembly). Or we may want lots of smaller machines, each doing a small task (e.g.&nbsp;a webserver and a database server). We may want half the machines running Unix and the other half running Windows. The point is, <strong><em>we</em></strong> are in control of the compute and can choose what suits <strong><em>us</em></strong> best and it can all be done, by us at the touch of a button.</p>
<p>In the example above, we have been allocated up-to 32 instances and a total of 32 cores with roughly 60GB of RAM so that each of the workshop attendees can spin up a virtual machine with 1<em>vCPU and 2GB of RAM.</em></p>
<p>Click on “Compute” and then “Instances” at the top left. When this tutorial was created, there were no existing instances within the workshop project, so, those of you following this tutorial within the second workshop, will see a page with <em>No items to display</em> and anyone who sign in after a few instances have been created, would see a list of instances that pre-exist at that time.<br>
<br>
<img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-04.png" class="img-fluid"></p>
<p><em>Ok, so how do we actually do all this?</em> Well, from this page we can create our own servers on Exeter’s OpenStack using an image of a machine the Research IT team have created earlier for you. Servers which are created in this manner are called ‘<em>Instances</em>’. We can create as many servers as we like, start them, log-in to them, do some work, transfer data to/from them or destroy them altogether. We let the Research IT team worry about the hardware, power, cooling and maintenance - all we need to do is specify how powerful a computer we want (tiny, small, medium, large or extra-large).</p>
<p>The reason we are using the OpenStack here is that many of you have to analyse large datasets. But you only need to cruch those datasets occasionally. In the case of high-throughput sequencing data (e.g.&nbsp;Illumina or Oxford Nanopore) you will find that your desktop PC may not be powerful enough to cope with the data. Also installing and configuring many pieces of software (often written by other scientists), is frequently painful as they often require other programs (also often written by other scientists) to be installed as well. Factor in some obscure incompatibility and you can quickly end up in a situation where two programs that you need refuse to co-exist. With OpenStack, you can just start a server instance based on an image created by someone else who has already done all the hard work of installation and configuration. You may also want to use an existing docker- or singularity- container within such an instance to carry out your workflow.</p>
<p>So let’s get on and launch our first instance!</p>
</section>
</section>
<section id="create-your-instance" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="create-your-instance"><span class="header-section-number">3.4</span> Create your Instance</h2>
<p>In this section of the workshop we will create our <em>Instance</em> in Exeter’s OpenStack system.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you have an instance from a previous session do not create another one. Please go to the Managing Your OpenStack Instances and restart your existing instance.</p>
<p>Otherwise let’s get on and launch the instance we need for our workshop !</p>
</div>
</div>
<p>Click on the “Launch Instance” button.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-05.png" class="img-fluid"></p>
<p>Give your instance your name (e.g.&nbsp;“Jane Doe’s Instance”)</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-06.png" class="img-fluid"></p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>Remember that everyone is sharing the same project- so you will need to be identify your instance from everyone elses. The example above (“<em>my_first_VM</em>”) may be suitable for your own project, but it is not appropriate in a shared project.</p>
</div>
</div>
<p>Click ‘Next’ and proceed to choose the image of the machine you want to replicate. In this example, we will be using the Ubuntu 22.04 server image. Click on the highlighted arrow across from the <em>“ubuntu_22.04”</em> name and input a <em>Volume Size</em> of 20GB. Make sure to toggle the <em>Delete Volume on Instance Delete</em> option in this case.</p>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Caution
</div>
</div>
<div class="callout-body-container callout-body">
<p>When you are making your own VMs, within your own research project, you may choose to use different options based on your needs. Here, we have limited resources available for the workshop, so we need to make sure that everyone follows the instructions.</p>
</div>
</div>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-07.png" class="img-fluid"></p>
<p>Click Next and select the desired flavour for this instance. Here, we would like you to select the <em>ARC_Intro_Penryn - small</em> flavour that will allow you to launch an instance with 1vCPU and 2GB of RAM. When you register your own project for access to OpenStack, you will see additional options for these flavours.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-08.png" class="img-fluid"></p>
<section id="security-groups" class="level3">
<h3 class="anchored" data-anchor-id="security-groups">Security Groups</h3>
<p>Click ‘Next’ to move on through Networks and Network Ports section and arrive at the Security Groups section. Here, click on the default security group to expand it, and to have a look at what has already been allowed through the firewall.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-09.png" class="img-fluid"></p>
<p>Here, we can see that SSH (port 22) has been allowed over the <em>tcp</em> protocol from <em>anywhere (0.0.0.0/0)</em>. That is all we need to begin with, so we can go ahead and click Next.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Security Groups
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you are planning on using additional software that may need some ports to be opened up, then you can create your own security group with relevant ports allowed. For e.g.&nbsp;if you want to use VNC type software for remote desktop access to your instance, you will need to allow port 5901 etc. over tcp.</p>
<p>Our recipe for this workshop includes an installation of RStudio Server Open Source edition within the VM. We will show you how to edit the default security group to allow access to port 8787 for the RStudio Server later in the tutorial.</p>
</div>
</div>
</section>
<section id="key-pairs-and-cloud-config" class="level3">
<h3 class="anchored" data-anchor-id="key-pairs-and-cloud-config">Key Pairs and Cloud Config</h3>
<p>Setting up virtual machine (VM) instances in a cloud environment like OpenStack requires robust security measures and efficient configuration methods. This section details the critical steps involved in establishing secure access using SSH keypairs and automating initial VM setup with cloud-init, providing a foundational understanding for workshop participants.</p>
<p>Click ‘Next’ to move into the Key Pair section. OpenStack leverages SSH keypairs to secure VM instances at their launch time. When an instance is provisioned, OpenStack injects the user’s public key into the appropriate authorized_keys file on the new VM, making it ready for secure SSH access using the corresponding private key held by the user.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Private Key
</div>
</div>
<div class="callout-body-container callout-body">
<p>The private key, which is the secret component, must remain securely on the user’s local workstation and should never be uploaded to the cloud provider. This distinction is crucial for maintaining the integrity of the security model.</p>
</div>
</div>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-10.png" class="img-fluid">A key pair allows you to SSH into your newly created instance. You may select an existing key pair, import a key pair, or generate a new key pair. Click on the <em>Create Key Pair</em> button highlighted above and then enter a <em>Key Pair Name</em> and <em>Key Type</em> in the pop-up box that appears next. Key Pairs are how you login to your instance after it is launched.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-11.png" class="img-fluid"></p>
<p>Choose a key pair name you will recognize. Here we chose <em>user123_computer_name_projectX</em> to remind ourselves what the default username as and which VM this key is associated with. Names may only include alphanumeric characters, spaces, or dashes. Once the Key Pair is generated, you will need to copy the Private Key to your clipboard and save it in a safe space. Do not forget where you keep this key - you will not be able to login to the instance without this key pair if you have not enabled any other login mechanism.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-12.png" class="img-fluid"></p>
<p>Once copied, click <em>Done.</em> Open a text editor like Notepad++, Context or similar and save this SSH Key. The image below shows the successfully created <em>Key Pair.</em> On most browsers, the key pair will automatically get downloaded when you click done as well.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-13.png" class="img-fluid"></p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Key Pair vs Password
</div>
</div>
<div class="callout-body-container callout-body">
<p>The choice of authentication method for remote access significantly impacts the security and operational efficiency of cloud environments. While password-based authentication is familiar, SSH keypair authentication offers substantial advantages, making it the preferred standard in cloud platforms like OpenStack.<br>
<br>
Password authentication relies on a user remembering a secret string (the password) and providing it to the server for verification.<br>
<br>
SSH keypair authentication provides a superior level of cryptographic strength that even extremely long, complex passwords cannot match. The public keys, generated using sophisticated mathematical algorithms, are virtually impossible to guess or brute-force, offering a robust defense against common attack vectors - as long as un-authorized users do not gain access to your private key.</p>
</div>
</div>
<p>Click Next to move on to the <em>Configuration</em> section<em>.</em></p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Cloud Config
</div>
</div>
<div class="callout-body-container callout-body">
<p>Beyond establishing secure access, automating the initial configuration of virtual machines is crucial for efficiency, consistency, and scalability in cloud environments. Cloud-init serves as the industry-standard tool for this purpose.</p>
</div>
</div>
<p>When a new cloud instance is deployed, cloud-init takes initial configuration data, often referred to as “user-data” or “vendor-data,” and automatically applies these settings during the instance’s first boot process. This functions much like a dynamic to-do list that cloud-init executes, configuring the VM according to predefined instructions. The significant advantage of cloud-init lies in its ability to reuse these configuration instructions across numerous deployments, consistently producing reliable results.</p>
<p>Cloud-init is capable of handling a wide array of initial configuration tasks. These include essential activities such as setting the hostname, configuring network interfaces, creating and managing user accounts, installing necessary software packages, and executing custom scripts. This comprehensive automation streamlines the deployment process, ensuring that all cloud instances are configured uniformly, thereby minimizing the potential for human error.</p>
<p>Below are two minimal cloud-init script examples to configure essentials such as adding a local user account with ability to install research related applications (e.g.&nbsp;<code>sudo apt install package-name</code>). This will be all you really need for most use cases, but for additional configuration options, please refer to the cloud-init documentation. Amend the settings as required to look as below (changing&nbsp;the ‘user123’, ‘Your Name’ and hashed_passwd lines):</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Option 1
</div>
</div>
<div class="callout-body-container callout-body">
<p>Use this config if you only want key-pair authentication:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#cloud-config</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use this config if you only want key-pair authentication.</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change the default user to the name of my choice.</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and give it sudo rights.</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system_info</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">default_user</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> user123</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gecos</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your Name"</span></span>
<span id="cb1-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">groups</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sudo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb1-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ALL=(ALL) NOPASSWD:ALL</span></span>
<span id="cb1-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shell</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /bin/bash</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update system package database</span></span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">package_update</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Upgrade all packages to the latest versions</span></span>
<span id="cb1-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">package_upgrade</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install specified basic tools using the package manager</span></span>
<span id="cb1-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packages</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openssh-server</span></span>
<span id="cb1-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xubuntu-default-settings</span></span>
<span id="cb1-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xubuntu-desktop</span></span>
<span id="cb1-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xrdp</span></span>
<span id="cb1-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> nload</span></span>
<span id="cb1-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> htop</span></span>
<span id="cb1-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> vim</span></span>
<span id="cb1-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> multitail</span></span>
<span id="cb1-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> tmux</span></span>
<span id="cb1-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> r-base</span></span>
<span id="cb1-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gdebi-core</span></span>
<span id="cb1-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> x2goserver</span></span>
<span id="cb1-30"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> x2goserver-xsession</span></span>
<span id="cb1-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xfce4</span></span>
<span id="cb1-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xfce4-goodies</span></span>
<span id="cb1-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install Mamba using the Miniforge distribution</span></span>
<span id="cb1-34"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runcmd</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> echo "Starting Miniforge installation..."</span></span>
<span id="cb1-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> wget -O /tmp/Miniforge3.sh "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"</span></span>
<span id="cb1-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> chmod +x /tmp/Miniforge3.sh</span></span>
<span id="cb1-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /tmp/Miniforge3.sh -b -p /opt/miniforge3</span></span>
<span id="cb1-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> echo "Miniforge installation complete. Initializing conda for all users..."</span></span>
<span id="cb1-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /opt/miniforge3/bin/conda init bash --system</span></span>
<span id="cb1-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> echo "Conda initialization for all users complete. Users may need to log out and back in."</span></span>
<span id="cb1-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> echo "Installing RStudio Server Open Source v2025.05.1+513 ..."</span></span>
<span id="cb1-43"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> wget -O /tmp/RStudio_Server.deb https://download2.rstudio.org/server/jammy/amd64/rstudio-server-2025.05.1-513-amd64.deb</span></span>
<span id="cb1-44"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gdebi -n /tmp/RStudio_Server.deb</span></span>
<span id="cb1-45"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> echo "Enabling Lightdm and XRDP ..."</span></span>
<span id="cb1-46"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> systemctl enable --now lightdm</span></span>
<span id="cb1-47"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> systemctl enable --now xrdp</span></span>
<span id="cb1-48"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> systemctl set-default graphical.target</span></span>
<span id="cb1-49"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">power_state</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-50"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">delay</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-51"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> reboot</span></span>
<span id="cb1-52"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rebooting instance after cloud-init completion"</span></span>
<span id="cb1-53"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">condition</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Option 2
</div>
</div>
<div class="callout-body-container callout-body">
<p>Use this config if you want password authentication (or password authentication alongside key pair auth as an alternative shown earlier)</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#cloud-config</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change the default user to the name of my choice.</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and give it sudo rights.</span></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system_info</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">default_user</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> user123</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gecos</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your Name"</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ALL=(ALL) NOPASSWD:ALL</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shell</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /bin/bash</span></span>
<span id="cb2-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lock_passwd</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb2-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hashed_passwd</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> “$6$rTACxh6 ... &lt;snip&gt; ... xwWllho2N7nKq1nn1”</span></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You have to keep the $6$ in front of the hashed password</span></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enable password auth </span></span>
<span id="cb2-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh_pwauth</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update system package database</span></span>
<span id="cb2-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">package_update</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Upgrade all packages to the latest versions</span></span>
<span id="cb2-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">package_upgrade</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install specified basic tools using the package manager</span></span>
<span id="cb2-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packages</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openssh-server</span></span>
<span id="cb2-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xubuntu-default-settings</span></span>
<span id="cb2-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xubuntu-desktop</span></span>
<span id="cb2-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xrdp</span></span>
<span id="cb2-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> nload</span></span>
<span id="cb2-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> htop</span></span>
<span id="cb2-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> vim</span></span>
<span id="cb2-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> multitail</span></span>
<span id="cb2-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> tmux</span></span>
<span id="cb2-30"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> r-base</span></span>
<span id="cb2-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gdebi-core</span></span>
<span id="cb2-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> x2goserver</span></span>
<span id="cb2-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> x2goserver-xsession</span></span>
<span id="cb2-34"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xfce4</span></span>
<span id="cb2-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xfce4-goodies</span></span>
<span id="cb2-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install Mamba using the Miniforge distribution</span></span>
<span id="cb2-37"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runcmd</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> echo "Starting Miniforge installation..."</span></span>
<span id="cb2-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> wget -O /tmp/Miniforge3.sh "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"</span></span>
<span id="cb2-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> chmod +x /tmp/Miniforge3.sh</span></span>
<span id="cb2-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /tmp/Miniforge3.sh -b -p /opt/miniforge3</span></span>
<span id="cb2-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> echo "Miniforge installation complete. Initializing conda for all users..."</span></span>
<span id="cb2-43"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /opt/miniforge3/bin/conda init bash --system</span></span>
<span id="cb2-44"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> echo "Conda initialization for all users complete. Users may need to log out and back in."</span></span>
<span id="cb2-45"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> echo "Installing RStudio Server Open Source v2025.05.1+513 ..."</span></span>
<span id="cb2-46"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> wget -O /tmp/RStudio_Server.deb https://download2.rstudio.org/server/jammy/amd64/rstudio-server-2025.05.1-513-amd64.deb</span></span>
<span id="cb2-47"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gdebi -n /tmp/RStudio_Server.deb</span></span>
<span id="cb2-48"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> echo "Enabling Lightdm and XRDP ..."</span></span>
<span id="cb2-49"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> systemctl enable --now lightdm</span></span>
<span id="cb2-50"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> systemctl enable --now xrdp</span></span>
<span id="cb2-51"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> systemctl set-default graphical.target</span></span>
<span id="cb2-52"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">power_state</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-53"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">delay</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-54"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> reboot</span></span>
<span id="cb2-55"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rebooting instance after cloud-init completion"</span></span>
<span id="cb2-56"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">condition</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</div>
</div>
<p>Copy paste the above script into a text editor like Notepad++, Context, Sublime etc. and edit the requisite sections such as name, gecos, hashed_password etc. as needed.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>Note:</strong> The ‘<strong>hashed_passwd</strong>’ string is a <strong>crypt-sha512</strong> hash (i.e., an encrypted version) of the password you will use to log in with (we advise not using your university password). Hashed passwords can be generated using a web page such as&nbsp;<a href="https://www.mkpasswd.net/index.php">https://www.mkpasswd.net</a>. You need to replace all of the ‘hashed_passwd’ field inside the double quotes with the hashed password you have generated.<br>
<img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-14.png" class="img-fluid"></p>
</div>
</div>
<p>Once you have your template ready, paste it into the <em>Customisation Script</em> section:</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-15.png" class="img-fluid"></p>
<p>Click Next and skip over the Server Groups, Scheduler Hints and Metadata sections.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-16.png" class="img-fluid"></p>
<p>You have just configured an instance! Well done!<br>
<br>
In summary, you have given your instance a name, chosen which source machine image to base the instance on, selected the size of the instance (i.e.&nbsp;amount of memory, disk space and processor power), configured the basic apps you wanted to pre-install on it and also configured how you can access it (key-pair vs username+password).</p>
<p>We’re ready to launch it! Click ‘Launch Instance’. At this point you wait for the instance to come online. This may take a few seconds for a small instance or about 10 minutes for an xx-large one.</p>
<p>Below you can see an example of an instance starting up (or spawning). It is running in the University data centre. Note that we don’t need to worry or think about the underlying hardware the system is running on. That’s all taken care of for us by OpenStack and the Research IT team.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-17.png" class="img-fluid"></p>
<p>Once it turns <strong>white</strong> and the ‘Status’ changes to ‘Active’, you should copy the IP address to the clipboard.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-18.png" class="img-fluid"></p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>Note</strong>: above is an example where the IP address is <em>10.121.4.147</em> (yours will be different). We will need it in a moment to connect via X2Go remote desktop. Make sure you copy the whole address and nothing but the address.</p>
</div>
</div>
<p><strong>Congratulations you have ‘configured’ and ‘turned on’ a new computer to use for the rest of this workshop.</strong></p>
<p>Next, you will learn how to connect to it from your PC. However, before you proceed any further - take a 20 minute break. The cloud-init script would be working in the background to finish installing software and configuring your machine during that time.</p>
</section>
</section>
<section id="connect-to-your-instance" class="level2" data-number="3.5">
<h2 data-number="3.5" class="anchored" data-anchor-id="connect-to-your-instance"><span class="header-section-number">3.5</span> Connect to your instance</h2>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Prerequisite
</div>
</div>
<div class="callout-body-container callout-body">
<p>Download and install <a href="https://wiki.x2go.org">X2Go</a> alongside a tool like Putty, MobaXTerm or Termius on your computer.<br>
<br>
The most commonly used, but basic program is <a href="https://www.putty.org/">PuTTy</a>.<br>
<br>
The one we recommend for Windows users is MobaXTerm - it provides all the important <strong>remote network tools</strong> (SSH, X11, RDP, VNC, FTP, MOSH, …) and <strong>Unix commands</strong> (bash, ls, cat, sed, grep, awk, rsync, …) to Windows desktop, in a <strong>single portable exe file</strong> which works out of the box.<br>
<br>
<a href="https://termius.com/">Termius</a> is another recommended SSH client that works on macOS, Windows, Linux, iOS and Andriod.<br>
<br>
End-Users are responsible for ensuring that they comply with the license conditions for any of these software.</p>
</div>
</div>
<p>Check the IP address of your instance and copy it to your clipboard.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-console-18.png" class="img-fluid"></p>
<section id="command-line-connection" class="level3">
<h3 class="anchored" data-anchor-id="command-line-connection">Command Line Connection</h3>
<p>The simplest way you can connect to your instance is using SSH (secure shell). If you are happy using the command line only, there are some other software that have additional functionality, and look better. There are many choices - just Google ‘windows ssh client’ or ‘OSX SSH Client’</p>
<p>The most commonly used, but basic program is <a href="https://www.putty.org/">PuTTy</a>. The one we recommend for Windows users is MobaXTerm - it provides all the important <strong>remote network tools</strong> (SSH, X11, RDP, VNC, FTP, MOSH, …) and <strong>Unix commands</strong> (bash, ls, cat, sed, grep, awk, rsync, …) to Windows desktop, in a <strong>single portable exe file</strong> which works out of the box.</p>
<p><a href="https://termius.com/">Termius</a> is another recommended SSH client that works on macOS, Windows, Linux, iOS and Andriod. Check out these detailed instructions on how to connect via SSH with an <a href="https://termius.com/documentation/connect-via-ssh-with-a-password">SSH Password</a> or <a href="https://termius.com/documentation/connect-via-ssh-with-an-ssh-key">SSH Key</a>.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>We do not recommend using Git Bash for this. Git Bash is an application for Microsoft Windows environments which provides an emulation layer for a Git command line experience. It does not have all the functionality one would usually need when accessing servers in this manner.</p>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you are using a native terminal on MacOS or Unix, you could initiate a command line connection using:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> /path/to/your-private-key.key user123@<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>vm-ip-address<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</div>
</div>
</section>
<section id="console-connection-using-the-browser" class="level3">
<h3 class="anchored" data-anchor-id="console-connection-using-the-browser">Console connection using the browser</h3>
<p>Within your OpenStack web console, navigate to the <a href="https://stack.exeter.ac.uk/dashboard/project/instances/">instance list</a> and click on your instance in the list. In this example, we will click on the <em>keypair_only</em> instance.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-10.png" class="img-fluid"></p>
<p>In the next window click on the <em>Console</em> tab. Here, you will be able to see the main GUI of your computer. If you used the cloud-init Option 2 - then you will be able to login at this interface using the password you had used. If you used Option 1 during the cloud-init stage, then you will not be able to login using this method as you would not be aware of the correct password to use. In this case, you would need to reset the user password (covered elsewhere) to be able to use the method described here.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-11.png" class="img-fluid"></p>
</section>
<section id="graphical-connection-using-x2go" class="level3">
<h3 class="anchored" data-anchor-id="graphical-connection-using-x2go">Graphical connection using X2Go</h3>
<p>For some modules you will need a full graphical desktop connection. This is a bit more complicated to set up, but will give you a full graphical desktop environment to work on. For this we use <a href="https://wiki.x2go.org/doku.php">X2go</a></p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
How to install X2Go
</div>
</div>
<div class="callout-body-container callout-body">
<p><a href="https://wiki.x2go.org/doku.php/doc:installation:x2goclient">See here for detailed instructions</a> on how to install X2Go client for your operating system. Note that you may need privilege escalation (a.k.a admin rights) on your machine to do this. If you have a University provided Windows laptop, you may also look for X2Go within the <strong>Company Portal</strong> for easy installation.</p>
<p>If you are on a University provided Mac running OSX, look for X2Go within the UoE <strong>Self Service app</strong> that has been pre-installed on your Mac device.</p>
</div>
</div>
<p>Once X2Go is installed, start the program from your desktop shortcut.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-01.png" class="img-fluid"></p>
<p>Or look for it in your start menu</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-02.png" class="img-fluid">When the programme launches for the first time, you may get a message as below, it only affects some features you don’t need.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-03.png" class="img-fluid"></p>
<p>N.B - on some versions of windows you might get a different message - select ‘Allow Access’ if you have administrative rights or else click ‘keep blocking’ or ‘cancel’.</p>
<p>You should now see the main screen</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-04.png" class="img-fluid"></p>
<p>Now you need to tell your computer where to connect to. On a new installation the Session dialog (image below) will load automatically and you can start filling it up as shown below. On an existing installation of X2Go, you will need to Click on the ‘new session’ icon to set up a new connection.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-05.png" class="img-fluid"></p>
<p>Enter the information as highlighted above. Make sure you use the IP address you copied earlier and use an appropriate name. If you decide to use the <em>Key</em> Pair, then click the <em>Try auto login</em> checkbox as well. If not using a key Pair, you can omit those two fields.</p>
<p>Once this has been done we need to change the connection settings. If you are doing this on campus, you should select LAN here. If out of campus, please choose a connection speed based on your internet connection. Most modern fiber broadband services at home can be categorized as WAN.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-06.png" class="img-fluid"></p>
<p>Now let’s adjust the display settings so you can work comfortably at the correct screen resolution. Select the ‘Input/Output’ tab at the top and change the display to use the <em>Use whole display</em> as shown below. You may want to select <em>Fullscreen</em> instead.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-07.png" class="img-fluid"></p>
<p>In the Media tab, make sure that Enable sound support and Client side printer support are disabled (unless you need those options).</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-07b.png" class="img-fluid"></p>
<p>Once completed, click on OK. Your screen should now look like this:<br>
<img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-08.png" class="img-fluid"></p>
<p>Click anywhere in the <strong>white</strong> area. The first time you connect to your instance (or if the IP address changes after a reboot) you will see a message like:</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-09.png" class="img-fluid"></p>
<p>Click Yes. If using a key-pair authentication, you will be connected automatically. If you have opted for password based authentication, then enter the password you chose when creating the crypt-sha512 hash.</p>
</section>
</section>
<section id="managing-your-openstack-instances" class="level2" data-number="3.6">
<h2 data-number="3.6" class="anchored" data-anchor-id="managing-your-openstack-instances"><span class="header-section-number">3.6</span> Managing Your OpenStack Instances</h2>
<p>This section contains some instructions on how to manage you OpenStack instances.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>When you’re not working on the course please do be considerate and turn off your instance to avoid using unnecessary resource. If your instance is running, even if you are not doing anything on it, it will be using resource and may hinder others using the resources.</p>
</div>
</div>
<section id="find-your-instance" class="level3">
<h3 class="anchored" data-anchor-id="find-your-instance">Find your instance:</h3>
<p>Log onto the <a href="https://stack.exeter.ac.uk/dashboard/project/instances/">OpenStack console</a> and find your instance. Click on <em>Compute - Instances</em> and if you cannot find your instance easily, use the filter button.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/manage_001.jpg" class="img-fluid"></p>
</section>
<section id="stopping-your-instance" class="level3">
<h3 class="anchored" data-anchor-id="stopping-your-instance">Stopping Your Instance:</h3>
<p>If you wish to keep your data, use the <em>Shut Off instance</em> option. In this state the data written to disk will be preserved, but the instance will be ‘<em>off</em>’ (this is the equivalent of turning off a computer).</p>
<p>Use the dropdown next to your instance and select <em>Shut Off Instance</em> (near the bottom)</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-shutoff-1.png" class="img-fluid"></p>
<p>You will be asked to confirm - <strong>double check</strong> it is the instance you intend to shut down.</p>
</section>
<section id="restarting-your-instance" class="level3">
<h3 class="anchored" data-anchor-id="restarting-your-instance">Restarting Your Instance:</h3>
<p>If the status of your instance is <em>Shutoff</em> - click <em>Start</em> Instance.</p>
<p>Double check the IP address of your instance as it may change - you will need to use the new IP address to connect to you instance. In X2Go click on the drop down arrow to get the menu of options.<br>
<img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/x2go-session-prefs-1.png" class="img-fluid"></p>
</section>
<section id="deleting-an-instance." class="level3">
<h3 class="anchored" data-anchor-id="deleting-an-instance.">Deleting an instance.</h3>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Caution
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>Note:</strong> this will destroy all work done to date.</p>
</div>
</div>
<p>When you’re completely finished with the workshop, click the drop-down menu next to your instance and select <em>Delete Instance</em>. It will ask you to confirm - You can then watch the status change from <em>Shutting down</em> to <em>Deleted</em>.</p>
</section>
</section>
<section id="specific-use-cases" class="level2" data-number="3.7">
<h2 data-number="3.7" class="anchored" data-anchor-id="specific-use-cases"><span class="header-section-number">3.7</span> Specific Use Cases</h2>
<p>Here, we have configured a virtual machine that has an installation of RStudio Server (Open Source Edition) and it also has XRDP (a remote desktop for Ubuntu) installed on it. In this section, we will show you how to modify your Security Groups to allow access to these applications from your laptop.</p>
<p>Go to the <em>Network</em> tab and then to the <em>Security Groups</em> pane within it. Click on <em>Manage Rules</em> on the far right-hand side.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-12.png" class="img-fluid"></p>
<p>Click on Add Rule to create the new rules we need.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-13.png" class="img-fluid"></p>
<p>RStudio Server listens on tcp port 8787 by default and XRDP listens on tcp port 3389. First, let’s add a custom rule for RStudio as follows:</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/openstack-connect-15.png" class="img-fluid"></p>
<p>Now, we can add another rule for RDP. This is a well known service so we can select RDP from the drop down options and click <em>Add</em>.<br>
<img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/clipboard-1799424740.png" class="img-fluid"></p>
<p>Finally, the new rules should look something like this:</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/clipboard-3745716289.png" class="img-fluid"></p>
<p>Now, you can access your RStudio Server’s web interface at <a href="http://10.121.4.35:8787/" class="uri">http://10.121.4.35:8787/</a> (substitute the IP address shown here with your own VM’s IP address.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_openstack/img/clipboard-2673567999.png" class="img-fluid"></p>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Caution
</div>
</div>
<div class="callout-body-container callout-body">
<p>Note that the RStudio Server interface requires you to use a username and password combination. So, this example will only work if you chose Option 2 in the <em>Cloud Config</em> section.</p>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>HPC</category>
  <category>OpenStack</category>
  <category>Virtual Machine</category>
  <guid>https://exeter-data-analytics.github.io/posts/intro_to_openstack/</guid>
  <pubDate>Sun, 15 Jun 2025 23:00:00 GMT</pubDate>
</item>
<item>
  <title>intRos: Research Computing</title>
  <dc:creator>Dr. Stephen Lang</dc:creator>
  <dc:creator>Dr. M.D. Sharma</dc:creator>
  <dc:creator>Dr. Tom Horton</dc:creator>
  <link>https://exeter-data-analytics.github.io/posts/intro_to_research_computing/</link>
  <description><![CDATA[ 





<section id="what-is-this-about" class="level2">
<h2 class="anchored" data-anchor-id="what-is-this-about">What is this about?</h2>
<p>These workshops are a valuable opportunity for you to up-skill yourself with tools of the future — please do join us if you think these workshops might apply to you!</p>
</section>
<section id="why-should-i-learn-this" class="level2">
<h2 class="anchored" data-anchor-id="why-should-i-learn-this">Why should I learn this?</h2>
<blockquote class="blockquote">
<p>“The revolution is here. Understanding how Research Computing works and being able to apply this to your work-stream could help your work and increase your impact. If you are all at sea with Research Computing then this is where to start.”</p>
</blockquote>
<p>The key goals of these workshops are to remove barriers to people using Research Computing and up-skill our research community to be able to make better use of the facilities available.</p>
</section>
<section id="ok-how-do-i-sign-up" class="level2">
<h2 class="anchored" data-anchor-id="ok-how-do-i-sign-up">OK, how do I sign-up?</h2>
<p>The current sign-up period has closed now. However, please feel free to <a href="https://forms.office.com/e/5aZMAVGENa">fill up this form</a> to express your interest in these workshops and we will look into arranging additional sessions.</p>
<section id="day-1---an-introduction-to-research-computing" class="level3">
<h3 class="anchored" data-anchor-id="day-1---an-introduction-to-research-computing">Day 1 - An Introduction to Research Computing</h3>
<p><strong>Outline</strong>: We will deliver “An introduction to Research Computing”, which will be followed by examples of specific case studies based on the research needs of those of you who filled in the questionnaire. To aid in developing ARC skillsets there will be a worked example given to attendees to work through in preparation for the second session.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>Skill level:</strong> Foundational to intermediate</p>
<p><strong>Prerequisites</strong>: None</p>
<p><strong>When and where:</strong> 0900-1300 10th June Exchange Red</p>
<p><strong>Catering</strong>: Drinks and lunch provided.</p>
</div>
</div>
</section>
<section id="day-2---research-computing-case-studies-and-problem-solving" class="level3">
<h3 class="anchored" data-anchor-id="day-2---research-computing-case-studies-and-problem-solving">Day 2 - Research Computing Case Studies and Problem Solving</h3>
<p><strong>Outline</strong>: Firstly, attendees will discuss best practices to overcome some of the challenges they identified in the earlier workshop. Secondarily, attendees will build upon the skills acquired within the self-learning exercise and use these skills to develop basics of two key types of research computing - virtual and high-performance for their specific research needs.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>Skill level:</strong> Foundational to intermediate</p>
<p><strong>Prerequisites</strong>: 1) A laptop, and 2) Completion of the worked example provided in the first meeting.</p>
<p><strong>When and where:</strong> 0900-1300 17th June Exchange Green</p>
<p><strong>Catering</strong>: Drinks and lunch provided.</p>
</div>
</div>
</section>
<section id="additional-resources" class="level3">
<h3 class="anchored" data-anchor-id="additional-resources">Additional Resources</h3>
<p>Many respondents, especially early-career researchers, expressed a desire to improve their computing skills or learn how to use advanced reseach computing resources effectively.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><p><strong>Check out our tips <a href="./tips.html">here!</a></strong></p></li>
<li><p><strong>Take advantage of online resources</strong>: Explore platforms like <a href="https://universityofexeteruk.sharepoint.com/sites/CornwallARC">CornwallARC</a> and <a href="https://universityofexeteruk.sharepoint.com/sites/ExeterARC">ExeterARC</a> for institution specific knowledge bases. Engage with discipline specific training sessions offered by <a href="https://exeter-data-analytics.github.io/">ExeDataHub</a> or <a href="https://coding-for-reproducible-research.github.io">CfRR</a> - these are essential to gain hands-on experience with tools and techniques. Other online resources like Coursera, edX, or DataCamp can also be very useful for programming and data analysis learning.</p></li>
<li><p><strong>Ask for Help</strong>: Join the ExeDataHub <a href="https://teams.microsoft.com/l/channel/19%3Afca419ee420d452489888196bf05aae8%40thread.tacv2/Ask%20for%20Help?groupId=fc065562-31db-4628-a506-1a58dcfd1c8b&amp;tenantId=912a5d77-fb98-4eee-af32-1334d8f04a53">Ask for Help</a> channel to ask questions, share knowledge, and learn from peers. Active engagement with this resource is essential for the community to thrive.</p></li>
</ul>
</div>
</div>
</section>
<section id="acknowledgements" class="level3">
<h3 class="anchored" data-anchor-id="acknowledgements">Acknowledgements</h3>
<p>The inaugural set of workshops has been funded by a Researcher Led Initiative grant to Dr.&nbsp;Tom Horton, in collaboration with Dr.&nbsp;M.D.&nbsp;Sharma and Dr.&nbsp;Stephen Lang at the University of Exeter (Penryn Campus).</p>


</section>
</section>

 ]]></description>
  <category>ARC</category>
  <category>HPC</category>
  <category>Cloud</category>
  <guid>https://exeter-data-analytics.github.io/posts/intro_to_research_computing/</guid>
  <pubDate>Thu, 22 May 2025 23:00:00 GMT</pubDate>
</item>
<item>
  <title>intRos: Research Computing - Tips</title>
  <dc:creator>Dr. Stephen Lang</dc:creator>
  <dc:creator>Dr. M.D. Sharma</dc:creator>
  <dc:creator>Dr. Tom Horton</dc:creator>
  <link>https://exeter-data-analytics.github.io/posts/intro_to_research_computing/tips.html</link>
  <description><![CDATA[ 





<section id="what-is-this-about" class="level2">
<h2 class="anchored" data-anchor-id="what-is-this-about">What is this about?</h2>
<p>Several common themes and issues have emerged within the responses collected from researchers regarding their computing needs and challenges. Below are some valuable tips designed to address these challenges and improve the efficiency and effectiveness of research-related computing tasks. These tips are tailored to the diverse needs of the respondents, who span various career stages (e.g., postgraduates, postdocs, lecturers) and research fields (e.g., genomics, deep learning, geospatial analysis), while remaining broadly applicable to enhance their use of advanced computing resources.</p>
<section id="optimizing-code-for-performance" class="level4">
<h4 class="anchored" data-anchor-id="optimizing-code-for-performance">1. <strong>Optimizing Code for Performance</strong></h4>
<p>Many researchers are working with computationally intensive tasks, such as simulations and machine learning models, which can benefit from optimized code.</p>
<ul>
<li><strong>Profile your code</strong>: Use profiling tools (e.g., cProfile in Python or profvis in R) to identify bottlenecks and focus optimization efforts where they’ll have the most impact.</li>
<li><strong>Use efficient data structures</strong>: Opt for memory- and speed-efficient options, such as NumPy arrays instead of Python lists, to handle large datasets effectively.</li>
<li><strong>Vectorize operations</strong>: Leverage vectorized operations in Python (e.g., with NumPy or Pandas) or R (e.g., avoiding loops with apply functions) to speed up computations by minimizing iterative processing.</li>
</ul>
</section>
<section id="parallel-computing" class="level4">
<h4 class="anchored" data-anchor-id="parallel-computing">2. <strong>Parallel Computing</strong></h4>
<p>Several respondents highlighted the need for faster processing of large datasets or simulations, making parallel computing a key skill to develop.</p>
<ul>
<li><strong>Learn parallel computing basics</strong>: Understand multi-threading and multi-processing to distribute tasks across multiple cores, reducing computation time.</li>
<li><strong>Use built-in libraries</strong>: Implement libraries like multiprocessing in Python or parallel in R to parallelize tasks on your local machine efficiently.</li>
<li><strong>Scale with advanced tools</strong>: For larger-scale parallelism, explore frameworks like Dask or Apache Spark, which can distribute computations across clusters, especially when using cloud based resources.</li>
</ul>
</section>
<section id="using-high-performance-computing-hpc-resources" class="level4">
<h4 class="anchored" data-anchor-id="using-high-performance-computing-hpc-resources">3. <strong>Using High-Performance Computing (HPC) Resources</strong></h4>
<p>Researchers frequently mentioned needing significant computational power and storage, which ARC can provide if used effectively.</p>
<ul>
<li><strong>Familiarize yourself with the system</strong>: Learn the basics of your HPC platform, including how to submit jobs, monitor resource usage (e.g., CPU, memory), and manage data transfers. Bespoke, community contributed tutorials are available for the Athena HPC on the <a href="https://universityofexeteruk.sharepoint.com/sites/CornwallARC">CornwallARC</a> site. Similar tutorials are being developed for ISCA HPC by the RIT team on the <a href="https://universityofexeteruk.sharepoint.com/sites/ExeterARC">ExeterARC</a> site.</li>
<li><strong>Optimize job submissions</strong>: Use job schedulers like SLURM to request appropriate resources (e.g., number of CPUs, memory, runtime) tailored to your task, avoiding over- or under-allocation. Over- or under- allocation can be detrimental to all users on shared systems.</li>
<li><strong>Test locally first</strong>: Where possible, run smaller versions of your code on your local machine or a virtual machine to debug and optimize your code before scaling up to larger, shared resources (like Athena or ISCA HPC or the RStudio servers), minimizing trial-and-error on the server.</li>
</ul>
</section>
<section id="memory-management" class="level4">
<h4 class="anchored" data-anchor-id="memory-management">4. <strong>Memory Management</strong></h4>
<p>Memory crashes and handling large datasets were recurring challenges, especially for those working with genomics, geospatial data, or machine learning. The key here is to know your data and be aware of the basics of data-handling within the software you are using - then you can try to optimse appropriately.</p>
<ul>
<li><strong>Use memory-efficient data types</strong>: Reduce memory usage by choosing appropriate data types (e.g., float32 instead of float64 in NumPy) for your variables.</li>
<li><strong>Load data in chunks</strong>: Process large files incrementally or use streaming techniques to avoid loading entire datasets into memory at once.</li>
<li><strong>Consider specialized formats</strong>: Adopt formats like HDF5 or NetCDF for efficient storage and retrieval of large scientific datasets, which are well-suited for HPC environments.</li>
<li><strong>Consider appropriate compute platforms</strong>: When using bespoke servers or HPC systems, look for the resources available on different machines and choose the most appropriate server or queue to submit your jobs to. For e.g.&nbsp;if you have a large amount of data that needs to be read-in prior to compute - you may want to select a high-memory server (or queue) instead.</li>
</ul>
</section>
<section id="data-storage-and-management" class="level4">
<h4 class="anchored" data-anchor-id="data-storage-and-management">5. <strong>Data Storage and Management</strong></h4>
<p>Effective data organization is crucial for researchers dealing with large and dynamic datasets, such as sequencing or geospatial data.</p>
<ul>
<li><strong>Organize your data</strong>: Maintain clear directory structures and consistent file-naming conventions to easily locate and manage files. Avoid using spaces or special-characters in your file-naming conventions.</li>
<li><strong>Backup regularly</strong>: Use institutional storage solutions or cloud backups to protect critical data and code from loss. Remember that the storage on compute platforms is finite and should not be used for short- or long-term data dumping. These spaces are usually not backed-up – your data, is your responsibility.</li>
<li><strong>Use databases for large datasets</strong>: For complex or live data (e.g., vessel tracking), consider using databases like PostgreSQL to query and manage data efficiently. However, these may need a combination of computational resources for your work-flow (e.g.&nbsp;a virtual machine for the database, while the computation happens on another server).</li>
</ul>
</section>
<section id="software-and-tool-usage" class="level4">
<h4 class="anchored" data-anchor-id="software-and-tool-usage">6. <strong>Software and Tool Usage</strong></h4>
<p>Researchers use a variety of tools (e.g., Python, R, Matlab, GIS software), and maximizing their potential can streamline workflows.</p>
<ul>
<li><strong>Read documentation</strong>: Consult official documentation or user guides for your software and libraries to understand their full capabilities and best practices. This is one of the core essentials that is ignored by researchers - Read the Friendly Manual!</li>
<li><strong>Follow best practices</strong>: Seek out tutorials specific to your research area (e.g., bioinformatics pipelines in Python, geospatial analysis in R) to optimize your approach.</li>
<li><strong>Stay updated</strong>: Keep software and libraries current to benefit from performance enhancements and new features, especially on shared research computing systems.</li>
</ul>
</section>
<section id="collaboration-and-sharing" class="level4">
<h4 class="anchored" data-anchor-id="collaboration-and-sharing"><strong>7. Collaboration and Sharing</strong></h4>
<p>Collaboration and reproducibility are key in research, embrace these good-practice measures in your daily scientific computing workflows.</p>
<ul>
<li><strong>Use version control</strong>: Employ tools like Git (with platforms like GitHub or GitLab) to track code changes and collaborate with others seamlessly.</li>
<li><strong>Share data responsibly</strong>: Deposit data-sets in institutional repositories (e.g.&nbsp;ORE) or platforms like Figshare, Dryad or Open Science Framework, ensuring proper attribution and access control.</li>
<li><strong>Document your work</strong>: Add clear comments to your code and maintain documentation (e.g., README files) to make your workflows understandable and reproducible.</li>
</ul>
</section>
<section id="acknowledgements" class="level3">
<h3 class="anchored" data-anchor-id="acknowledgements">Acknowledgements</h3>
<p>The inaugural set of workshops has been funded by a Researcher Led Initiative grant to Dr.&nbsp;Tom Horton, in collaboration with Dr.&nbsp;M.D.&nbsp;Sharma and Dr.&nbsp;Stephen Lang at the University of Exeter (Penryn Campus).</p>


</section>
</section>

 ]]></description>
  <category>ARC</category>
  <category>HPC</category>
  <category>Cloud</category>
  <guid>https://exeter-data-analytics.github.io/posts/intro_to_research_computing/tips.html</guid>
  <pubDate>Thu, 22 May 2025 23:00:00 GMT</pubDate>
</item>
<item>
  <title>intRos: Geometric Morphometrics</title>
  <dc:creator>Dr. Manmohan D. Sharma</dc:creator>
  <dc:creator>Hironori Shinohara</dc:creator>
  <dc:creator>Dr. Ramakrishnan Vasudeva</dc:creator>
  <link>https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/</link>
  <description><![CDATA[ 





<section id="outline-this-tutorial-is-a-work-in-progress" class="level1">
<h1>Outline (This tutorial is a work in progress)</h1>
<p>Geometric morphometrics is a field of study that uses mathematical and statistical methods to analyze the shape and variation of biological forms. It is based on the use of landmarks, which are points that can be identified on each specimen and that correspond to homologous features. Geometric morphometrics can be applied to various biological questions, such as phylogeny, development, evolution, ecology, and function.</p>
</section>
<section id="prerequisites" class="level1">
<h1>Prerequisites</h1>
<ul>
<li>Windows 11 or similar OS (for digitisation using tpsDig)</li>
<li>Download and install the tpsUtil, tpsDig and tpsRelW tools</li>
<li>Have R installed and be familiar with use of R</li>
</ul>
</section>
<section id="learning-objectives" class="level1">
<h1>Learning objectives</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Learning objectives
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>This introduction should allow you to:</strong></p>
<ul>
<li>Understand the basic concepts and terminology of geometric morphometrics.</li>
<li>Learn how to collect, digitize, and manage landmark data using software tools such as geomorph (R) and tpsDig (Windows).</li>
<li>Learn to perform exploratory and confirmatory analyses of shape variation.</li>
<li>Learn to visualize and interpret the results of shape analyses using graphical displays such as scatterplots, deformation grids, thin-plate splines.</li>
<li>Gain the confidence to apply geometric morphometrics to appropriate examples in your field of study.</li>
</ul>
</div>
</div>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Geomorph is a package for geometric morphometric analysis of two- and three-dimensional landmark data in R. It provides functions for data manipulation, shape alignment, multivariate statistics, visualization, and more. In this tutorial, we will use the <em>Tribolium castaneum</em> dataset, which contains landmark coordinates for elytra and pronotum, to demonstrate some of the basic functionalities of geomorph. For simplicity, we will use the tpsUtil and tpsDig programs and integrate them within this workflow. Users are welcome to utilise the digitisation process within geomorph, if they wish to do this (see section 5 of the GeoMorph manual).</p>
<p>This tutorial has been developed as a companion to [manuscript in prep].</p>
</section>
<section id="data-preparation" class="level2">
<h2 class="anchored" data-anchor-id="data-preparation">Data preparation</h2>
<p>Before we can use geomorph, we need to have our landmark data in a specific format called <code>tps</code>. A <code>tps</code> file is a plain text file that contains the coordinates of landmarks for one or more specimens, along with some optional metadata. A <code>tps</code> file has the following structure:</p>
<div class="cell">
<pre class="text cell-code code-overflow-wrap"><code>LM=number of landmarks
x1 y1
x2 y2
...
xn yn
ID=FB001
IMAGE=FB001.jpg
SCALE=scale factor
...
LM=number of landmarks
x1 y1
x2 y2
...
xn yn
ID=FB050
IMAGE=FB050.jpg
SCALE=scale factor
...
</code></pre>
</div>
<p>Each specimen is separated by a blank line, and each line starts with a keyword followed by an equal sign and a value. The keywords are case insensitive and can be in any order, except for LM, which must be the first line for each specimen. The LM keyword specifies the number of landmarks, followed by the x and y coordinates of each landmark in separate lines. The ID keyword specifies a unique identifier for the specimen, which can be a number or a string. The IMAGE keyword specifies the name of the image file that contains the specimen, which can be in any format supported by R. The SCALE keyword specifies a scale factor that converts the pixel coordinates to real-world units, such as millimeters or centimeters. Other keywords, such as COMMENT, CURVE, or POINT, can also be used to store additional information, but they are not required by geomorph.</p>
<section id="using-tpsutil-and-tpsdig" class="level4">
<h4 class="anchored" data-anchor-id="using-tpsutil-and-tpsdig"><strong>Using tpsUtil and tpsDig</strong></h4>
<p>Download and install the <a href="https://sbmorphometrics.org/morphmet/tpsutilw32.exe">tpsUtil32</a>, <a href="https://sbmorphometrics.org/morphmet/tpsdig2w64.exe">tpsDig2w64</a> and <a href="https://sbmorphometrics.org/morphmet/tpsRelww64.exe">tpsRelww64</a> software from the <a href="https://sbmorphometrics.org/">Stony Brook Morphometrics</a> website. tpsUtil32 is a utility tool and tpsDig2w64 helps digitize coordinates of landmarks and capture outlines. tpsRelww64 performs a relative warp analysis.</p>
<p><a href="./img/T_castaneum_images.zip">Download this zip file</a>, and unzip it into a folder on your computer. Remember the name and location of this folder as you will need it in the next few steps. Open tpsUtil, and under the Operation box’s dropdown menu select “Build tps file from images”, select the “input” directory where all your images are stored and then select the location and name for the “output file”. In this example, we have called the tps file – <a href="./data/full_body/01_Tribolium_castaneum.tps">01_<em>Tribolium_castaneum</em>.tps</a> and saved it in the root of our data folder.</p>
<table class="caption-top table">
<colgroup>
<col style="width: 50%">
<col style="width: 50%">
</colgroup>
<tbody>
<tr class="odd">
<td><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/util_000.jpg" class="img-fluid" alt="Build tps file from images"></td>
<td><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/util_001.jpg" class="img-fluid" alt="Build tps file"></td>
</tr>
</tbody>
</table>
<p>Click on the “Setup” button to see the list of files that were found in the folder you pointed towards. Exclude any files that should not need digitisation. Press create when ready. This will create a TPS file that we can use for landmarking all our images.</p>
</section>
<section id="randomise" class="level4">
<h4 class="anchored" data-anchor-id="randomise"><strong>Randomise</strong></h4>
<p>Now, using tpsUtil, randomise the order of the files by selecting “randomly order specimens” from the Operations menu. This helps spread out any confounding factors (e.g.&nbsp;photos taken at different times of day / different lighting etc.). In this example, the <a href="./data/full_body/01_Tribolium_castaneum.tps">01_<em>Tribolium_castaneum</em>.tps</a> file you created in the earlier step is used as the input. Load that file and in the Output option choose the new file-name as <a href="./data/full_body/02_Tribolium_castaneum_randomised.tps">02_<em>Tribolium_castaneum</em>_randomised.tps</a> and press Create. This will create the randomised file. Now, you may close tpsUtil until it is needed again later. Please make sure you take a look at the file you have just created, within a text editor like <a href="https://www.contexteditor.org/">Context</a> or <a href="https://notepad-plus-plus.org/">Notepad++</a>, and then adjust any file paths that need adjusting.</p>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/util_002.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" width="334"></p>
</figure>
</div>
</section>
<section id="lets-set-some-landmarks" class="level4">
<h4 class="anchored" data-anchor-id="lets-set-some-landmarks"><strong>Let’s set some landmarks</strong></h4>
<p>Start the tpsDig program, and make some initial (one time) adjustments to the settings to make viewing and workflows easier. For e.g., first you can adjust the colour, size, and numbering of points under Options &gt; Image Tools &gt; Colors. Labels at width 35 look readable to me.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/tpsDig2_000.jpg" class="img-fluid" width="334"></p>
<p>However, you may find a completely different setting, more useful for your set-up (e.g.&nbsp;due to display screen size, resolution etc.). I would suggest initially doing this for 5-10 files and finding a setting that you are comfortable with, before proceeding with a larger batch. Similarly, under Options, select the <u><em>L</em></u><em>abel landmarks</em> and <u><em>M</em></u><em>ouse wheel zooms</em> features.<br>
<br>
Now, open the 02_<em>Tribolium_castaneum</em>_randomised.tps file image you want to landmark images in, and then use the <em>landmark tool</em> (accessed via <img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_001.jpg" class="img-fluid" alt="landmark tool" width="20"> in the top tool bar) to set landmarks on this image.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_000.jpg" class="img-fluid" alt="initial landmarking">Use the <em>landmark tool</em> (accessed via <img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_001.jpg" class="img-fluid" width="20" alt="landmark tool"> in the top tool bar), to click on the points identified in numbers 1-17 in the image above. Pay careful attention to the order of the landmarks. If you choose to use a different order, you will need to change the link and slider files accordingly. The landmarking order is particularly important if you have multiple operators who would be contributing to landmarking. In such cases, you should always take some inter-operator repeatability estimates to assess operator error within your data.</p>
<p>After the initial landmarks have been sitiuated, use the <em>background curve</em> tool (accessed via <img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_002.jpg" width="27" height="20">in the top tool bar) to draw a multipoint line between landmark 1 and landmark 2. Usually, you need to just have a few well-spaced points that follow the outline of the shape you are measuring and one must start and end with a landmark.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_003.jpg" class="img-fluid" alt="use the background curve tool">Repeat this process to follow the curves between landmark 2-3 and then 12-13. Right-click, double-click, or click on the Edit mode button on the toolbar to start a new curve. Note: This order (<em>i.e.</em> going between 1-2, then 2-3 and finally 12-13 is important - do not jumble these steps at all).</p>
<p>In edit mode, moving the cursor over the curve will select it and the number of points will be displayed on the status panel. If one right-clicks on the curve a context menu will be displayed that will allow one to: delete the entire curve, delete a selected point (if the cursor was on a curve point), resample the curve, switch back to digitize landmark mode, or just cancel the context menu.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_004.jpg" class="img-fluid">Now, while hovering your mouse pointer over one of the blue lines, right-click on the image, select “Resample Curve” and enter 12 number of points.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_006.jpg" class="img-fluid"></p>
<p>When Resample is selected, then a window will be opened that displays the current number of points on the selected curve and allows one to specify a new number. If the “By steps” option is selected then the new number must be less than the existing number. Points will be deleted to achieve the desired number of points. Usually one will wish to use the “<em>By length</em>” option. With this option the new number of points can be less than, equal to, or larger than the existing number of points. The new points will be computed by linear interpolation along the curve. They will be approximately equally spaced (it is difficult to achieve exact equal spacing because deleting points changes the length of the curve when the curve changes shape as a result of the deletion of points). In both cases the minimum number of new points is two.</p>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_005.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" width="230"></p>
</figure>
</div>
<p>Repeat this step for each of the three lines. This will convert these curve points to landmark points for further processing. <strong>Note:</strong> other software may not recognize curve points as landmark points. The tpsUtil program has an option to append curve points as landmarks in order after any existing landmarks.</p>
<p>Now, before moving on to other images, select the <em>template</em> mode (a choice on the Options menu). This will copy the landmarks from the current specimen onto the next image as long as the next image does not have any landmarks already entered. You can then drag the landmarks to their appropriate locations to make landmarking more efficient. <em>Note that the first landmark you move will translate the locations of all the landmarks. This does not necessarily need to be landmark number one, basically whichever you click on first and drag, decides the shifts associated with the other landmarks.</em> Subsequent landmarks can be moved individually. This option helps minimize the chance of making the common error of digitizing the landmarks out of order.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_007.jpg" class="img-fluid"></p>
<p>Once the landmarks and curves have been digitized for the current specimen, click on the right arrow button or press ALT+N. Similarly, you can press ALT+P or the left arrow to go to the previous specimen</p>
<p>When you are done landmarking, save the file with a unique name and then open this file within tpsUtil to restore the original “Restore original order. This step will reorder the specimens in your TPS file back into their original order using the “OrigNum” keyword in the variables field. Our landmarked and order restored example is available as <a href="./data/full_body/03_Tribolium_castaneum_landmarked_original_order.TPS">03_<em>Tribolium_castaneum</em>_landmarked_original_order.TPS</a></p>
</section>
<section id="convert-curve-to-landmarks" class="level4">
<h4 class="anchored" data-anchor-id="convert-curve-to-landmarks"><strong>Convert curve to landmarks:</strong></h4>
<p>Now, load the <a href="./data/full_body/03_Tribolium_castaneum_landmarked_original_order.TPS">03_<em>Tribolium_castaneum</em>_landmarked_original_order.TPS</a> file within the tpsUtil program and use the option to append curve points as landmarks in order after any existing landmarks. Save this file as <a href="./data/full_body/04_Tribolium_castaneum_curves_removed.TPS">04_Tribolium_castaneum_curves_removed.TPS</a></p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_008.jpg" class="img-fluid" width="282"></p>
<p>When opened in tpsDig, this file will appear like this - note that the blue lines are gone and they have been replaced by actual landmarks.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_009.jpg" class="img-fluid"></p>
</section>
<section id="delete-extra-landmarks" class="level4">
<h4 class="anchored" data-anchor-id="delete-extra-landmarks"><strong>Delete extra landmarks:</strong></h4>
<p>Now, load the <a href="./data/full_body/04_Tribolium_castaneum_curves_removed.TPS">04_Tribolium_castaneum_curves_removed.TPS</a> file within the tpsUtil program and use the option to <em>Delete/reorder landmarks</em>. In this case, landmarks <strong>1</strong>,18; <strong>2,</strong>29,30; <strong>3</strong>,41; <strong>12</strong>,42; and <strong>13</strong>,53 are overlapping with each other so we will delete the higher order landmarks in each of those sets.</p>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_010.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" width="240"></p>
</figure>
</div>
<p>This window lists the identification numbers of the landmarks in the input file. You can highlight one or more landmarks (holding down the shift or control keys while clicking with the mouse) and then using the buttons at the right to move the selected landmarks up or down in the list. Landmarks can also be excluded from the output file by unchecking them or by highlighting them with the mouse and then clicking on the “Exclude” button. You can include a landmark again by clicking on its checkbox or by selecting it and then clicking on the “Include” button. Remember to keep the <em>Plot new nums</em> option checked in this step.</p>
<p>Set the <em>Output</em> filename as <a href="./data/full_body/05_Tribolium_castaneum_overlapping_lm_removed.TPS">05_Tribolium_castaneum_overlapping_lm_removed.TPS</a> and then click on the “Create” button to actually create the file. Now, the TPS file is nearly ready to be analysed.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_011.jpg" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
</section>
<section id="set-a-scale" class="level4">
<h4 class="anchored" data-anchor-id="set-a-scale"><strong>Set a scale:</strong></h4>
<p>Open the scale image within tpsDig, and zoom-in to a size that seems easy to work with. Click on the image tools icon and go to the Measure tab. To set a scale factor, enter the known length of a structure in the edit box and then digitize the two endpoints of the scale. Enter just the numerical value, do not enter the units. Press the OK button to accept the scale factor or the cancel button to ignore any changes you may have made in the scale factor. <em>Make a note of this scale factor as we will be including it in all the .tps files that use this particular calibration image.</em></p>
<table class="caption-top table">
<tbody>
<tr class="odd">
<td><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/scale_000.jpg" class="img-fluid" width="571"></td>
<td><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/scale_002.jpg" class="img-fluid"></td>
</tr>
<tr class="even">
<td><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/scale_001.jpg" class="img-fluid" width="571"></td>
<td><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/scale_003.jpg" class="img-fluid"></td>
</tr>
</tbody>
</table>
<p>If your digital scale was included in the images you captured (e.g.&nbsp;an eyepice graticle or equivalent), then you can do the above “set scale” activity within your main .tps digitisation as well. In this case, all subsequent images you digitize will be assumed to have the same scale factor unless you explicitly give them their own scale factors. Using this feature causes the “SCALE=” keyword to be inserted in the output file.</p>
<p>Here, the value is: SCALE=0.002137. The scale factor is the entered length in user units divided by the measured length in pixels. It also scales the coordinates appropriately (by default the coordinates are in pixel units). The scale factor can also be recorded in the listing window. The scale factor is taken into account in the computation of image areas, perimeters, and linear distance measurements. It has no effect on the landmark coordinates – they remain in pixel units.</p>
</section>
<section id="split-pronotum-elytra-landmarks" class="level4">
<h4 class="anchored" data-anchor-id="split-pronotum-elytra-landmarks"><strong>Split Pronotum &amp; Elytra landmarks:</strong></h4>
<p>Now, load the <a href="./data/full_body/05_Tribolium_castaneum_overlapping_lm_removed.TPS">05_Tribolium_castaneum_overlapping_lm_removed.TPS</a> file within the tpsUtil program and use the option to <em>Delete/reorder landmarks</em>. In this case, once we will delete all the elytra landmarks and save the output as 06_Tribolium_castaneum_pronotum.TPS and then repeat this process to delete the pronotum landmarks and save the output as 07_Tribolium_castaneum_elytra.TPS. As earlier, please pay attention to the file-names within the <em>Input</em> and <em>Output</em> boxes and press Create when you are ready to create the outputs.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_013.jpg" class="img-fluid" width="282"></p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_012.jpg" class="img-fluid"></p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/land_014.jpg" class="img-fluid"></p>
</section>
<section id="make-a-link-file" class="level4">
<h4 class="anchored" data-anchor-id="make-a-link-file"><strong>Make a link file:</strong></h4>
<p>Within tpsUtil, select the “Make links file” option, select the <a href="./data/full_body/06_Tribolium_castaneum_pronotum.TPS">06_Tribolium_castaneum_pronotum.TPS</a> file as an input (if trying this with a different file, note that at-least one image should be completely landmarked) and select an output destination for the link file as <a href="./data/full_body/06_Tribolium_castaneum_pronotum_links.TPS">06_Tribolium_castaneum_pronotum_links.TPS</a>.</p>
<p>The locations of the landmarks on the first specimen in a TPS or NTS file will be displayed. With the mouse, one can draw links between any pairs of landmarks.</p>
<p>When drawing the program will display a “rubber band” line and will beep when you are sufficiently close to another landmark so that one can lift the left mouse button to end the current link. To delete the last link drawn, right-click on an unused portion of the background. To delete a specific link, right-click on it.</p>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/links_001.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" width="370"></p>
</figure>
</div>
<p>Press “Create File” when done.. keep this file safe - you will be needing it soon. Repeat this step for <a href="./data/full_body/07_Tribolium_castaneum_elytra.TPS">07_Tribolium_castaneum_elytra.TPS</a> to create <a href="./data/full_body/07_Tribolium_castaneum_elytra_links.NTS">07_Tribolium_castaneum_elytra_links.NTS</a>.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/links_000.jpg" class="img-fluid"></p>
</section>
<section id="make-a-sliders-file" class="level4">
<h4 class="anchored" data-anchor-id="make-a-sliders-file"><strong>Make a sliders file:</strong></h4>
<p>This file defines how semi landmarks can be slid so as to minimize bending energy during a generalized Procrustes analysis (GPA) superimposition. The locations of the landmarks on the first specimen in a TPS or NTS file are displayed. With the mouse, one can draw links between any triplets of landmarks. The middle landmark of a triplet is then considered a semi landmark (it will be displayed using an open circle) and it will be allowed to slide in a direction parallel to the difference between the other two landmarks. Note: this program does not do the actual sliding. It is just used as a convenience to build the file that defines which points slide between which other points.</p>
<p>Within tpsUtil, select the “Make sliders file” option, select the <a href="./data/full_body/06_Tribolium_castaneum_pronotum.TPS">06_Tribolium_castaneum_pronotum.TPS</a> file as an input and select an output destination for the link file as 06_Tribolium_castaneum_pronotum_sliders.NTS. Click setup, and then go-ahead and draw the connections as described above.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/sliders_000.jpg" class="img-fluid" width="299"></p>
<p>This image illustrates the sliders used for the pronotum (two fixed landmarks). When ready, click <em>Create</em>&nbsp;to complete this step for the pronotum.</p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/sliders_001.jpg" class="img-fluid" width="481"></p>
<p>Now, repeat these steps for <a href="./data/full_body/07_Tribolium_castaneum_elytra.TPS">07_Tribolium_castaneum_elytra.TPS</a> and create 07_Tribolium_castaneum_elytra_sliders.NTS. This image illustrates sliders used for elytra here (note the 2 fixed landmarks for the pronotum and the 7 fixed landmarks for the elytra). Have a look at our sliders files here: <a href="./data/full_body/06_Tribolium_castaneum_pronotum_links.NTS">06_Tribolium_castaneum_pronotum_sliders.NTS</a> and <a href="./data/full_body/07_Tribolium_castaneum_elytra_sliders.NTS">07_Tribolium_castaneum_elytra_sliders.NTS</a></p>
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/img/sliders_002.jpg" class="img-fluid"></p>
<p>This file has to be entered into the tpsRelw program using the “Open sliders file …” menu option.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Guess what!
</div>
</div>
<div class="callout-body-container callout-body">
<p>Phew, that’s most of the hard work done. Ideally, you would work through the rest of the tutorial within R. However, if you are having repeated Arrgh moments within R, you can…. open tpsRelw, Load the *.tps file you created with tpsDig and click through the Compute workflow: Consensus, Partial Warps, Relative Warps. The PCA plot can be found under the Display button “Relative Warps” and you can visualize shapes within the PCA morphospace, using the Camera tool and clicking on a point to visualize.</p>
</div>
</div>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Expand To Learn About this step within Geomorph
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>If you want to do this step within geomorph, please follow these steps instead:</p>
<p>To create a tps file from a directory of image files, we can use the tps.write function from geomorph. This function takes a list of image file names, a matrix of landmark coordinates, and an optional list of specimen identifiers, and writes them to a tps file. The landmark coordinates can be obtained by manually digitizing the landmarks on the images using a software such as tpsDig, or by using an automated method such as the digitize2d function from geomorph. The specimen identifiers can be extracted from the image file names, or assigned by the user. For example, suppose we have a directory called <code>data\images</code> that contains a subset of 50 image files of <em>Gnatocerus cornutus</em> specimens, named FB001.JPG .. FB150.JPG. We can create a <code>tps</code> file called <code>Gnatocerus_cornutus.tps</code> with the following code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-overflow-wrap code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(geomorph)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geomorph'</span>)</span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(stringr)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'stringr'</span>)</span>
<span id="cb2-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyverse)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This line checks if the required packages is available.</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If not, it then proceeds to install that package.</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the geomorph package</span></span>
<span id="cb2-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(geomorph, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quietly=</span>T)</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the working directory to the current folder</span></span>
<span id="cb2-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setwd</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./"</span>)</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the list of image file names from the data/images folder</span></span>
<span id="cb2-16">images <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./data/"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpg$"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">include.dirs =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">recursive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Digitize the landmarks on the images using tpsDig or digitize2d</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For this example, we assume that we have a matrix of landmark coordinates called landmarks</span></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The matrix has 50 rows (one for each specimen) and 20 columns (two for each landmark)</span></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The landmarks are in the same order and position for all specimens</span></span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the specimen identifiers from the image file names</span></span>
<span id="cb2-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We use the stringr package to remove the extension and the prefix</span></span>
<span id="cb2-25"></span>
<span id="cb2-26">ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(images, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./data/full_body/"</span>)</span>
<span id="cb2-27">ids1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(ids, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpg$"</span>)</span>
<span id="cb2-28">ids2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(ids1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PAM"</span>)</span>
<span id="cb2-29">ids3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(ids2, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PAF"</span>)</span>
<span id="cb2-30">ids3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(ids3, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MAM"</span>)</span>
<span id="cb2-31">ids4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(ids3, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MAF"</span>)</span>
<span id="cb2-32"></span>
<span id="cb2-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># digitize2d(images, nlandmarks=10, scale = 1, tpsfile="./data/Tribolium_castaneum.tps",verbose = TRUE)</span></span>
<span id="cb2-34"></span>
<span id="cb2-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write the tps file</span></span>
<span id="cb2-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># writeland.tps(ids, file = "Tribolium_castaneum.tps")</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</section>
<section id="data-analysis" class="level4">
<h4 class="anchored" data-anchor-id="data-analysis"><strong>Data analysis</strong></h4>
<p>Once we have our tps file, we can use geomorph to read, plot, and analyze our landmark data. We can use the readland.tps function to read the tps file and store it in a list of two elements: a matrix of landmark coordinates and a vector of specimen identifiers. We can also use the plotTangentSpace function to plot the landmark data in a two-dimensional space that preserves the shape variation among the specimens. For example, we can read and plot the beetles data with the following code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-overflow-wrap code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(geomorph)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geomorph'</span>)</span>
<span id="cb3-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(stringr)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'stringr'</span>)</span>
<span id="cb3-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyverse)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>)</span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(geomorph, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quietly=</span>T)</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the landmarks in</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specID - a character specifying whether to extract the specimen ID names from the ID or IMAGE lines</span></span>
<span id="cb3-8"></span>
<span id="cb3-9">tribolium <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readland.tps</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/full_body/03_Tribolium_castaneum_landmarked_original_order.TPS"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">specID=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ID"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
 36 curve points detected per specimen and are appended to fixed landmarks.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-overflow-wrap code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tribolium &lt;- readland.tps("data/full_body/pronotum_slider.nts", readcurves = TRUE)</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The readcurves argument is set to TRUE because we have semilandmarks in our example</span></span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the landmark data in tangent space</span></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot(tribolium)</span></span></code></pre></div>
</div>
<p>The plot shows the shape variation among the beetles specimens along the first two principal components of the Procrustes shape space. The Procrustes shape space is a mathematical space that represents the shapes of objects after removing the effects of translation, rotation, and scaling. The principal components are the directions of maximum variation in the shape space, and they can be interpreted as shape modes or shape factors. The plot also shows the mean shape of the specimens as a black dot, and the shape of each specimen as a blue dot connected to the mean shape by a line. The shape of each specimen can be visualized by hovering over the corresponding dot on the plot.</p>
<p>We can also use geomorph to perform various statistical analyses on our landmark data, such as testing for differences in shape among groups, testing for correlations between shape and other variables, testing for allometry or size-shape relationships, testing for phylogenetic signal or evolutionary patterns, and more. Geomorph provides a unified framework for these analyses, based on the generalized Procrustes analysis (GPA) and the Procrustes ANOVA. The GPA is a procedure that aligns the landmark coordinates of the specimens to a common orientation and scale, and calculates the Procrustes shape coordinates and the Procrustes distances. The Procrustes ANOVA is a method that partitions the shape variation among the specimens into different sources, such as group, size, or error, and tests for their significance using permutation tests.</p>
<p>For example, suppose we want to test if there is a difference in shape between male and female beetles, and if there is a correlation between shape and body length. We can use the procD.lm function from geomorph to perform these analyses. This function takes a formula that specifies the response variable (shape) and the explanatory variables (sex and length), and a data frame that contains the landmark data and the covariates. The function performs the GPA and the Procrustes ANOVA, and returns a list of results, such as the Procrustes sums of squares, the Procrustes mean squares, the F-statistics, the p-values, and the effect sizes. The function also plots the residuals of the shape variation against the covariates, and the shape changes associated with the covariates. For example, we can perform these analyses on the beetles data with the following code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-overflow-wrap code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a data frame with the landmark data and the covariates</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For this example, we assume that we have a vector of sex (M or F) and a vector of length (in mm) for each specimen</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># beetles.data &lt;- data.frame(beetles$coords, sex, length)</span></span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform the shape analysis</span></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># beetles.shape &lt;- procD.lm(coords ~ sex + length, data = beetles.data)</span></span></code></pre></div>
</div>
<p>The output of the function shows that there is a significant difference in shape between male and female beetles (p &lt; 0.001), and a significant correlation between shape and length (p &lt; 0.001). The plots show that the shape variation is mostly explained by sex (PC1) and length (PC2), and that the shape changes involve changes in the head, the body, and the tail regions. The plots also show the mean shapes of the male and female beetles, and the shape changes associated with a unit increase in length.</p>
</section>
<section id="generalized-procrustes-analysis" class="level4">
<h4 class="anchored" data-anchor-id="generalized-procrustes-analysis"><strong>Generalized Procrustes Analysis</strong></h4>
<p>Next, we need to perform a generalized Procrustes analysis (GPA) to align the landmark configurations and remove the effects of translation, rotation, and scaling. We can use the gpagen() function to do this, which returns a list containing the aligned coordinates, the consensus configuration, and the Procrustes distances.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-overflow-wrap code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Y.gpa &lt;- gpagen(plethspecies$land)</span></span></code></pre></div>
</div>
</section>
<section id="principal-component-analysis" class="level4">
<h4 class="anchored" data-anchor-id="principal-component-analysis"><strong>Principal component analysis</strong></h4>
<p>One of the most common methods to explore shape variation is principal component analysis (PCA), which reduces the dimensionality of the shape data and identifies the main axes of variation. We can use the gm.prcomp() function to perform a PCA on the aligned coordinates, which returns an object of class gm.prcomp that contains the eigenvalues, eigenvectors, and scores of the PCA.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-overflow-wrap code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PCA &lt;- gm.prcomp(Y.gpa$coords)</span></span></code></pre></div>
</div>
</section>
<section id="shape-deformation" class="level4">
<h4 class="anchored" data-anchor-id="shape-deformation"><strong>Shape deformation</strong></h4>
<p>To visualize the shape changes associated with the PCs, we can use the plotRefToTarget() function to produce deformation grids that compare the shapes corresponding to the extremes of a chosen PC axis. For example, to compare the shapes at the minimum and maximum scores of PC1, we can use the following code:</p>
</section>
</section>
</section>
<section id="summary" class="level1">
<h1>Summary</h1>
<p>This tutorial has shown some of the basic functions of geomorph for geometric morphometric analysis of landmark data. There are many more functions and options available in geomorph, which you can explore by reading the documentation and the vignettes. Geomorph is a powerful and flexible package for studying shape variation and evolution in R.</p>
<section id="additional-resources" class="level3">
<h3 class="anchored" data-anchor-id="additional-resources">Additional Resources</h3>
<ul>
<li>Zelditch et al.&nbsp;2012. Geometric Morphometrics for Biologists: A Primer, 2 nd Edition. Academic Press. This book is a thorough guide to the theory behind geometric morphometrics. It also has a <a href="https://booksite.elsevier.com/9780123869036/">companion site</a> including data, scripts, and functions for R.</li>
<li><a href="https://besjournals.onlinelibrary.wiley.com/doi/10.1111/2041-210X.12035">Adams &amp; Otárola-Castillo 2013</a>. Methods in Ecology and Evolution 4(4): 393-399.</li>
<li>Geomorph <a href="https://groups.google.com/g/geomorph-r-package">Google Group</a>.</li>
</ul>
</section>
<section id="acknowledgements" class="level3">
<h3 class="anchored" data-anchor-id="acknowledgements">Acknowledgements</h3>
<p>We did not create this content alone! Inspiration, tips, and resources have been borrowed from multiple sources.</p>


</section>
</section>

 ]]></description>
  <category>R</category>
  <category>Geomorph</category>
  <category>tpsDig</category>
  <guid>https://exeter-data-analytics.github.io/posts/intro_to_geometric_morphometrics/</guid>
  <pubDate>Tue, 29 Apr 2025 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Integrating GitHub Copilot with RStudio and VScode</title>
  <dc:creator>Stephen Lang &amp; Dan Padfield</dc:creator>
  <link>https://exeter-data-analytics.github.io/posts/github_copilot_integration/</link>
  <description><![CDATA[ 





<section id="outline" class="level1">
<h1>Outline</h1>
<p><a href="https://docs.github.com/en/copilot">GitHub Copilot</a> an AI coding assistant that can be ran directly within your coding environment (e.g.&nbsp;RStudio or VSCode). These tools should be used with care, and you still need to understand what the code does as you are ultimately responsible for your code and its output.</p>
<p>This walkthrough will provide the necessary steps to add Copilot to RStudio and VSCode.</p>
</section>
<section id="prerequisites" class="level1">
<h1>Prerequisites</h1>
<p>There are two ways of getting GitHub Copilot for free. The first is to use <a href="https://docs.github.com/en/copilot/managing-copilot/managing-copilot-as-an-individual-subscriber/about-github-copilot-free">GitHub Copilot Free</a> which gives you 2000 autocompletions a month.</p>
<p>However, the method we recommend is to get <a href="https://docs.github.com/en/copilot/managing-copilot/managing-copilot-as-an-individual-subscriber/managing-your-github-copilot-pro-subscription/getting-free-access-to-copilot-pro-as-a-student-teacher-or-maintainer">GitHub Copilot Pro free</a> as a student or teacher. This method will also allow you to use GitHub Copilot on the RStudio servers. This susbscription gives you unlimited access to GitHub Copilot while you are a student or researcher at the University.</p>
<p>To do this, you will need to request GitHub Education benefits using the following steps:</p>
<ol type="1">
<li>Sign up for a GitHub account (ideally using your university account)</li>
<li>From your new GitHub account, <a href="https://education.github.com/discount_requests/application">apply for free GitHub Education benefits</a> (i.e., upload photo of your Unicard)</li>
<li>Once GitHub Education email to say your application is approved, head to <a href="https://github.com/settings/copilot" class="uri">https://github.com/settings/copilot</a> and click the <code>Start free trial</code> button</li>
<li>The next screen will have a green button to <code>Get access to GitHub Copilot</code></li>
<li>Finally, you just have to check policies (<a href="https://docs.github.com/en/copilot/managing-copilot/managing-copilot-as-an-individual-subscriber/managing-copilot-policies-as-an-individual-subscriber#enabling-or-disabling-suggestions-matching-public-code">for additional details see here</a>) and click <code>Save and complete setup</code></li>
<li>You’re now ready to set up GitHub Copilot!</li>
</ol>
</section>
<section id="setting-up-copilot-in-rstudio" class="level1">
<h1>Setting up Copilot in RStudio</h1>
<ol type="1">
<li>To set up the GitHub Copilot for RStudio, we navigate to <code>Tools</code> &gt; <code>Global Options</code> &gt; <code>Copilot</code> (see image below)</li>
<li>From the Copilot tab, check the <code>Enable Copilot</code> box and hit <code>Apply</code></li>
<li>You should then see a <code>You are not currently signed in</code> message below the checkbox. Click the <code>Sign in</code> button.</li>
<li>Copy the 8-digit code, click the link, select <code>Continue</code> and paste the code</li>
<li>Copilot should show as activated (if not click the <code>Activate</code> button in Copilot options)</li>
<li>Copilot will now provide suggestions for code as you type (you can see status in bottom right of the code window)</li>
</ol>
<p><a href="rstudio_options.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://exeter-data-analytics.github.io/posts/github_copilot_integration/rstudio_options.png" class="img-fluid"></a></p>
</section>
<section id="setting-up-copilot-for-visual-studio-code" class="level1">
<h1>Setting up Copilot for Visual Studio Code</h1>
<ol type="1">
<li>On VSCode we just have to install the <a href="https://marketplace.visualstudio.com/items?itemName=GitHub.copilot">GitHub Copilot extension</a></li>
<li>Once installed, we open the Copilot extension and use it to sign into our GitHub account</li>
<li>Copilot will now give you suggestions as you type, and you can also use the additional <code>Copilot chat</code> feature (messages icon on left of window) to open a dialogue</li>
</ol>
<p><a href="vscode_copilot.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://exeter-data-analytics.github.io/posts/github_copilot_integration/vscode_copilot.png" class="img-fluid"></a></p>
</section>
<section id="general-copilot-usage-and-pointers" class="level1">
<h1>General Copilot usage and pointers</h1>
<p>Now we have Copilot ready to provide suggestions for our code in our chosen software!</p>
<ul>
<li>To approve Copilot suggestions that appear, press <code>Tab</code></li>
<li>To give Copilot guidance on code suggestions, provide <code>#code comments</code> that describe steps required</li>
<li>Make sure to check both the generated code itself and sense-check outputs to ensure that it is doing what is expected</li>
<li>The Copilot chat extension (installed automatically alongside Copilot) can be used for a broader range of tasks – <a href="https://docs.github.com/en/copilot/using-github-copilot/example-use-cases/example-prompts-for-copilot-chat?tool=vscode">see examples here</a></li>
<li>If you also use the <code>Tab</code> autocompletion capability of RStudio or VSCode to navigate files or autocomplete functions, sometimes Copilot’s suggestion comes up and <code>Tab</code> approves Copilot rather than the autocompletion. To stop this, you can play around with the <code>Show code suggestions after keyboard idle (ms)</code> in the Settings.</li>
</ul>
<p><a href="rstudio_options2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://exeter-data-analytics.github.io/posts/github_copilot_integration/rstudio_options2.png" class="img-fluid"></a></p>
<section id="additional-resources" class="level3">
<h3 class="anchored" data-anchor-id="additional-resources">Additional Resources</h3>
<ul>
<li><a href="https://docs.github.com/en/copilot/responsible-use-of-github-copilot-features/responsible-use-of-github-copilot-chat-in-your-ide">Responsible use of GitHub Copilot Chat in your IDE</a></li>
</ul>
</section>
<section id="acknowledgements" class="level3">
<h3 class="anchored" data-anchor-id="acknowledgements">Acknowledgements</h3>
<p>We did not create this content alone! Inspiration, tips, and resources have been borrowed from multiple sources.</p>
<ul>
<li><a href="https://docs.github.com/en/copilot">GitHub Copilot documentation</a></li>
</ul>


</section>
</section>

 ]]></description>
  <category>Coding, RStudio, R, VScode, GitHub</category>
  <guid>https://exeter-data-analytics.github.io/posts/github_copilot_integration/</guid>
  <pubDate>Thu, 18 Jul 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>intRos: Tidy data manipulation</title>
  <dc:creator>Alice Trevail</dc:creator>
  <link>https://exeter-data-analytics.github.io/posts/intro_to_tidy_data_manipulation/</link>
  <description><![CDATA[ 




<section id="outline" class="level1">
<h1>Outline</h1>
<p>The way we collect or download data can often be different to how we analyse them. For example, have you ever needed to work on a subset of your data, add new columns, or calculate summary values? There are good reasons to do this kind of data manipulation in a reproducible way: it’s less prone to errors, saves us time when repeating the process, and helps us to share our code with confidence. In this walkthrough, we’ll share some of our favourite tools for reproducible data manipulation in R and the tidyverse.</p>
</section>
<section id="prerequisites" class="level1">
<h1>Prerequisites</h1>
<ul>
<li>Have R installed</li>
<li>Be using R for your research</li>
</ul>
</section>
<section id="learning-objectives" class="level1">
<h1>Learning objectives</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Learning objectives
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>This introduction should allow you to:</strong></p>
<ul>
<li>Change the structure of your data using reproducible code</li>
<li>Know where to learn more about tidyverse data manipulation</li>
</ul>
</div>
</div>
</section>
<section id="tidy-data-manipulation" class="level1">
<h1>Tidy data manipulation</h1>
<section id="why-manipulate-data-in-r" class="level3">
<h3 class="anchored" data-anchor-id="why-manipulate-data-in-r">Why manipulate data in R?</h3>
<ul>
<li><p>Reproducible</p></li>
<li><p>Easy to update and re-use with new data</p></li>
<li><p>Less prone to human error</p></li>
<li><p>Can be quick, easy, and fun…</p></li>
</ul>
<p>Here’s an example of how we can use the tidyverse packages (&amp; janitor) to tidy, transform, and visualise the <a href="https://allisonhorst.github.io/palmerpenguins/articles/intro.html">palmer penguins data</a>:</p>
<section id="penguin-morphometrics" class="level5">
<h5 class="anchored" data-anchor-id="penguin-morphometrics">Penguin morphometrics</h5>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load the tidyverse, and other useful packages</span></span>
<span id="cb1-2">pacman<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(flextable, palmerpenguins, </span>
<span id="cb1-3">               janitor, magrittr, tidyverse) </span>
<span id="cb1-4"></span>
<span id="cb1-5">vars_measurements <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"culmen_length_mm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"culmen_depth_mm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flipper_length_mm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"body_mass_g"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use pipe operative from magrittr</span></span>
<span id="cb1-8">penguins_example <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> penguins_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># column names to snake_case using janitor package</span></span>
<span id="cb1-10">  janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename columns using dplyr</span></span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">carbon =</span> delta_13_c_o_oo,</span>
<span id="cb1-13">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nitrogen =</span> delta_15_n_o_oo) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add new columns using dplyr</span></span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb1-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract year using lubridate</span></span>
<span id="cb1-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">year</span>(date_egg), </span>
<span id="cb1-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change case in sex column using stringr</span></span>
<span id="cb1-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sex =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_lower</span>(sex), </span>
<span id="cb1-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># take first element of species column string using stringr and purrr</span></span>
<span id="cb1-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">species =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split_i</span>(species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove nas in sex column using dplyr</span></span>
<span id="cb1-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(sex))</span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot data using ggplot</span></span>
<span id="cb1-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(penguins_example, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> flipper_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g, </span>
<span id="cb1-27">                             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reorder sex using forcats</span></span>
<span id="cb1-28">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder2</span>(sex, flipper_length_mm, body_mass_g))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(species), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> lm)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_colour_viridis_d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"magma"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">begin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">end =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sex"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.border =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_tidy_data_manipulation/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Sexual dimporphism in Palmer penguins</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="penguin-isotope-signatures" class="level5">
<h5 class="anchored" data-anchor-id="penguin-isotope-signatures">Penguin isotope signatures</h5>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">penguins_summary_isotopes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> penguins_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change data format to long using tidyr</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> carbon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nitrogen, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"isotope"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># group data using dplyr</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(species, isotope) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># summarise data for each group using dplyr</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T),</span>
<span id="cb2-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change data format to wide using tidyr</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id_cols =</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> isotope, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(mean, sd))</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(penguins_example, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> carbon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> nitrogen, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> penguins_summary_isotopes, </span>
<span id="cb2-15">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> mean_carbon, </span>
<span id="cb2-16">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> mean_nitrogen<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>sd_nitrogen, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> mean_nitrogen<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sd_nitrogen, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> species),</span>
<span id="cb2-17">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> penguins_summary_isotopes, </span>
<span id="cb2-19">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> mean_nitrogen, </span>
<span id="cb2-20">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> mean_carbon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>sd_carbon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> mean_carbon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sd_carbon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> species), </span>
<span id="cb2-21">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_colour_viridis_d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mako"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">begin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">end =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.border =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_tidy_data_manipulation/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Isotope signatures among Palmer penguins</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="some-useful-functions" class="level3">
<h3 class="anchored" data-anchor-id="some-useful-functions">Some useful functions</h3>
<p>Here, we’ll dig into the functions used in the above example to see how we processed the data:</p>
<section id="janitorclean_names" class="level4">
<h4 class="anchored" data-anchor-id="janitorclean_names">janitor::clean_names()</h4>
<p>Let’s remind ourselves of the original data:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(penguins_raw)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 344
Columns: 17
$ studyName             &lt;chr&gt; "PAL0708", "PAL0708", "PAL0708", "PAL0708", "PAL…
$ `Sample Number`       &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1…
$ Species               &lt;chr&gt; "Adelie Penguin (Pygoscelis adeliae)", "Adelie P…
$ Region                &lt;chr&gt; "Anvers", "Anvers", "Anvers", "Anvers", "Anvers"…
$ Island                &lt;chr&gt; "Torgersen", "Torgersen", "Torgersen", "Torgerse…
$ Stage                 &lt;chr&gt; "Adult, 1 Egg Stage", "Adult, 1 Egg Stage", "Adu…
$ `Individual ID`       &lt;chr&gt; "N1A1", "N1A2", "N2A1", "N2A2", "N3A1", "N3A2", …
$ `Clutch Completion`   &lt;chr&gt; "Yes", "Yes", "Yes", "Yes", "Yes", "Yes", "No", …
$ `Date Egg`            &lt;date&gt; 2007-11-11, 2007-11-11, 2007-11-16, 2007-11-16,…
$ `Culmen Length (mm)`  &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34…
$ `Culmen Depth (mm)`   &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18…
$ `Flipper Length (mm)` &lt;dbl&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190,…
$ `Body Mass (g)`       &lt;dbl&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 34…
$ Sex                   &lt;chr&gt; "MALE", "FEMALE", "FEMALE", NA, "FEMALE", "MALE"…
$ `Delta 15 N (o/oo)`   &lt;dbl&gt; NA, 8.94956, 8.36821, NA, 8.76651, 8.66496, 9.18…
$ `Delta 13 C (o/oo)`   &lt;dbl&gt; NA, -24.69454, -25.33302, NA, -25.32426, -25.298…
$ Comments              &lt;chr&gt; "Not enough blood for isotopes.", NA, NA, "Adult…</code></pre>
</div>
</div>
<p>And now tidy up our column names into snake_case. (This isn’t part of the tidyverse, but it is too useful not to mention)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">penguins_example <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> penguins_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-2">  janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>() </span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(penguins_example)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 344
Columns: 17
$ study_name        &lt;chr&gt; "PAL0708", "PAL0708", "PAL0708", "PAL0708", "PAL0708…
$ sample_number     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…
$ species           &lt;chr&gt; "Adelie Penguin (Pygoscelis adeliae)", "Adelie Pengu…
$ region            &lt;chr&gt; "Anvers", "Anvers", "Anvers", "Anvers", "Anvers", "A…
$ island            &lt;chr&gt; "Torgersen", "Torgersen", "Torgersen", "Torgersen", …
$ stage             &lt;chr&gt; "Adult, 1 Egg Stage", "Adult, 1 Egg Stage", "Adult, …
$ individual_id     &lt;chr&gt; "N1A1", "N1A2", "N2A1", "N2A2", "N3A1", "N3A2", "N4A…
$ clutch_completion &lt;chr&gt; "Yes", "Yes", "Yes", "Yes", "Yes", "Yes", "No", "No"…
$ date_egg          &lt;date&gt; 2007-11-11, 2007-11-11, 2007-11-16, 2007-11-16, 200…
$ culmen_length_mm  &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …
$ culmen_depth_mm   &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …
$ flipper_length_mm &lt;dbl&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…
$ body_mass_g       &lt;dbl&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …
$ sex               &lt;chr&gt; "MALE", "FEMALE", "FEMALE", NA, "FEMALE", "MALE", "F…
$ delta_15_n_o_oo   &lt;dbl&gt; NA, 8.94956, 8.36821, NA, 8.76651, 8.66496, 9.18718,…
$ delta_13_c_o_oo   &lt;dbl&gt; NA, -24.69454, -25.33302, NA, -25.32426, -25.29805, …
$ comments          &lt;chr&gt; "Not enough blood for isotopes.", NA, NA, "Adult not…</code></pre>
</div>
</div>
</section>
<section id="dplyrrename" class="level4">
<h4 class="anchored" data-anchor-id="dplyrrename">dplyr::rename()</h4>
<p>To rename a column</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">penguins_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb7-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">carbon =</span> delta_13_c_o_oo,</span>
<span id="cb7-3">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nitrogen =</span> delta_15_n_o_oo) </span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(penguins_example)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 344
Columns: 17
$ study_name        &lt;chr&gt; "PAL0708", "PAL0708", "PAL0708", "PAL0708", "PAL0708…
$ sample_number     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…
$ species           &lt;chr&gt; "Adelie Penguin (Pygoscelis adeliae)", "Adelie Pengu…
$ region            &lt;chr&gt; "Anvers", "Anvers", "Anvers", "Anvers", "Anvers", "A…
$ island            &lt;chr&gt; "Torgersen", "Torgersen", "Torgersen", "Torgersen", …
$ stage             &lt;chr&gt; "Adult, 1 Egg Stage", "Adult, 1 Egg Stage", "Adult, …
$ individual_id     &lt;chr&gt; "N1A1", "N1A2", "N2A1", "N2A2", "N3A1", "N3A2", "N4A…
$ clutch_completion &lt;chr&gt; "Yes", "Yes", "Yes", "Yes", "Yes", "Yes", "No", "No"…
$ date_egg          &lt;date&gt; 2007-11-11, 2007-11-11, 2007-11-16, 2007-11-16, 200…
$ culmen_length_mm  &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …
$ culmen_depth_mm   &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …
$ flipper_length_mm &lt;dbl&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…
$ body_mass_g       &lt;dbl&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …
$ sex               &lt;chr&gt; "MALE", "FEMALE", "FEMALE", NA, "FEMALE", "MALE", "F…
$ nitrogen          &lt;dbl&gt; NA, 8.94956, 8.36821, NA, 8.76651, 8.66496, 9.18718,…
$ carbon            &lt;dbl&gt; NA, -24.69454, -25.33302, NA, -25.32426, -25.29805, …
$ comments          &lt;chr&gt; "Not enough blood for isotopes.", NA, NA, "Adult not…</code></pre>
</div>
</div>
</section>
<section id="dplyrmutate" class="level4">
<h4 class="anchored" data-anchor-id="dplyrmutate">dplyr::mutate()</h4>
<p>To add a column</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">penguins_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>)</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(penguins_example)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 344
Columns: 18
$ study_name        &lt;chr&gt; "PAL0708", "PAL0708", "PAL0708", "PAL0708", "PAL0708…
$ sample_number     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…
$ species           &lt;chr&gt; "Adelie Penguin (Pygoscelis adeliae)", "Adelie Pengu…
$ region            &lt;chr&gt; "Anvers", "Anvers", "Anvers", "Anvers", "Anvers", "A…
$ island            &lt;chr&gt; "Torgersen", "Torgersen", "Torgersen", "Torgersen", …
$ stage             &lt;chr&gt; "Adult, 1 Egg Stage", "Adult, 1 Egg Stage", "Adult, …
$ individual_id     &lt;chr&gt; "N1A1", "N1A2", "N2A1", "N2A2", "N3A1", "N3A2", "N4A…
$ clutch_completion &lt;chr&gt; "Yes", "Yes", "Yes", "Yes", "Yes", "Yes", "No", "No"…
$ date_egg          &lt;date&gt; 2007-11-11, 2007-11-11, 2007-11-16, 2007-11-16, 200…
$ culmen_length_mm  &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …
$ culmen_depth_mm   &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …
$ flipper_length_mm &lt;dbl&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…
$ body_mass_g       &lt;dbl&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …
$ sex               &lt;chr&gt; "MALE", "FEMALE", "FEMALE", NA, "FEMALE", "MALE", "F…
$ nitrogen          &lt;dbl&gt; NA, 8.94956, 8.36821, NA, 8.76651, 8.66496, 9.18718,…
$ carbon            &lt;dbl&gt; NA, -24.69454, -25.33302, NA, -25.32426, -25.29805, …
$ comments          &lt;chr&gt; "Not enough blood for isotopes.", NA, NA, "Adult not…
$ year              &lt;dbl&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…</code></pre>
</div>
</div>
</section>
<section id="dplyrmutate-1" class="level4">
<h4 class="anchored" data-anchor-id="dplyrmutate-1">dplyr::mutate()</h4>
<p>To add a column</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">penguins_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unknown"</span>)</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(penguins_example)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 344
Columns: 18
$ study_name        &lt;chr&gt; "PAL0708", "PAL0708", "PAL0708", "PAL0708", "PAL0708…
$ sample_number     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…
$ species           &lt;chr&gt; "Adelie Penguin (Pygoscelis adeliae)", "Adelie Pengu…
$ region            &lt;chr&gt; "Anvers", "Anvers", "Anvers", "Anvers", "Anvers", "A…
$ island            &lt;chr&gt; "Torgersen", "Torgersen", "Torgersen", "Torgersen", …
$ stage             &lt;chr&gt; "Adult, 1 Egg Stage", "Adult, 1 Egg Stage", "Adult, …
$ individual_id     &lt;chr&gt; "N1A1", "N1A2", "N2A1", "N2A2", "N3A1", "N3A2", "N4A…
$ clutch_completion &lt;chr&gt; "Yes", "Yes", "Yes", "Yes", "Yes", "Yes", "No", "No"…
$ date_egg          &lt;date&gt; 2007-11-11, 2007-11-11, 2007-11-16, 2007-11-16, 200…
$ culmen_length_mm  &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …
$ culmen_depth_mm   &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …
$ flipper_length_mm &lt;dbl&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…
$ body_mass_g       &lt;dbl&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …
$ sex               &lt;chr&gt; "MALE", "FEMALE", "FEMALE", NA, "FEMALE", "MALE", "F…
$ nitrogen          &lt;dbl&gt; NA, 8.94956, 8.36821, NA, 8.76651, 8.66496, 9.18718,…
$ carbon            &lt;dbl&gt; NA, -24.69454, -25.33302, NA, -25.32426, -25.29805, …
$ comments          &lt;chr&gt; "Not enough blood for isotopes.", NA, NA, "Adult not…
$ year              &lt;chr&gt; "unknown", "unknown", "unknown", "unknown", "unknown…</code></pre>
</div>
</div>
</section>
<section id="lubridateyear" class="level4">
<h4 class="anchored" data-anchor-id="lubridateyear">lubridate::year()</h4>
<p>Lubridate is great for working with dates and times. Here, we want to extract year from a column of date</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">penguins_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">year</span>(date_egg))</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(penguins_example)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 344
Columns: 18
$ study_name        &lt;chr&gt; "PAL0708", "PAL0708", "PAL0708", "PAL0708", "PAL0708…
$ sample_number     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…
$ species           &lt;chr&gt; "Adelie Penguin (Pygoscelis adeliae)", "Adelie Pengu…
$ region            &lt;chr&gt; "Anvers", "Anvers", "Anvers", "Anvers", "Anvers", "A…
$ island            &lt;chr&gt; "Torgersen", "Torgersen", "Torgersen", "Torgersen", …
$ stage             &lt;chr&gt; "Adult, 1 Egg Stage", "Adult, 1 Egg Stage", "Adult, …
$ individual_id     &lt;chr&gt; "N1A1", "N1A2", "N2A1", "N2A2", "N3A1", "N3A2", "N4A…
$ clutch_completion &lt;chr&gt; "Yes", "Yes", "Yes", "Yes", "Yes", "Yes", "No", "No"…
$ date_egg          &lt;date&gt; 2007-11-11, 2007-11-11, 2007-11-16, 2007-11-16, 200…
$ culmen_length_mm  &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …
$ culmen_depth_mm   &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …
$ flipper_length_mm &lt;dbl&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…
$ body_mass_g       &lt;dbl&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …
$ sex               &lt;chr&gt; "MALE", "FEMALE", "FEMALE", NA, "FEMALE", "MALE", "F…
$ nitrogen          &lt;dbl&gt; NA, 8.94956, 8.36821, NA, 8.76651, 8.66496, 9.18718,…
$ carbon            &lt;dbl&gt; NA, -24.69454, -25.33302, NA, -25.32426, -25.29805, …
$ comments          &lt;chr&gt; "Not enough blood for isotopes.", NA, NA, "Adult not…
$ year              &lt;dbl&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…</code></pre>
</div>
</div>
</section>
<section id="stringrstr_to_lower" class="level4">
<h4 class="anchored" data-anchor-id="stringrstr_to_lower">stringr::str_to_lower()</h4>
<p>Change the contents of a column to lower case</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">penguins_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sex =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_lower</span>(sex))</span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(penguins_example)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 344
Columns: 18
$ study_name        &lt;chr&gt; "PAL0708", "PAL0708", "PAL0708", "PAL0708", "PAL0708…
$ sample_number     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…
$ species           &lt;chr&gt; "Adelie Penguin (Pygoscelis adeliae)", "Adelie Pengu…
$ region            &lt;chr&gt; "Anvers", "Anvers", "Anvers", "Anvers", "Anvers", "A…
$ island            &lt;chr&gt; "Torgersen", "Torgersen", "Torgersen", "Torgersen", …
$ stage             &lt;chr&gt; "Adult, 1 Egg Stage", "Adult, 1 Egg Stage", "Adult, …
$ individual_id     &lt;chr&gt; "N1A1", "N1A2", "N2A1", "N2A2", "N3A1", "N3A2", "N4A…
$ clutch_completion &lt;chr&gt; "Yes", "Yes", "Yes", "Yes", "Yes", "Yes", "No", "No"…
$ date_egg          &lt;date&gt; 2007-11-11, 2007-11-11, 2007-11-16, 2007-11-16, 200…
$ culmen_length_mm  &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …
$ culmen_depth_mm   &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …
$ flipper_length_mm &lt;dbl&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…
$ body_mass_g       &lt;dbl&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …
$ sex               &lt;chr&gt; "male", "female", "female", NA, "female", "male", "f…
$ nitrogen          &lt;dbl&gt; NA, 8.94956, 8.36821, NA, 8.76651, 8.66496, 9.18718,…
$ carbon            &lt;dbl&gt; NA, -24.69454, -25.33302, NA, -25.32426, -25.29805, …
$ comments          &lt;chr&gt; "Not enough blood for isotopes.", NA, NA, "Adult not…
$ year              &lt;dbl&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…</code></pre>
</div>
</div>
</section>
<section id="dplyrselect" class="level4">
<h4 class="anchored" data-anchor-id="dplyrselect">dplyr::select()</h4>
<p>Keep certain columns</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">penguins_tiny <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> penguins_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(individual_id, sex, body_mass_g)</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(penguins_tiny)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 344
Columns: 3
$ individual_id &lt;chr&gt; "N1A1", "N1A2", "N2A1", "N2A2", "N3A1", "N3A2", "N4A1", …
$ sex           &lt;chr&gt; "male", "female", "female", NA, "female", "male", "femal…
$ body_mass_g   &lt;dbl&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, 4250…</code></pre>
</div>
</div>
<p>Remove certain columns</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">penguins_tiny2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> penguins_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(study_name, sample_number, region, comments))</span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(penguins_tiny2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 344
Columns: 14
$ species           &lt;chr&gt; "Adelie Penguin (Pygoscelis adeliae)", "Adelie Pengu…
$ island            &lt;chr&gt; "Torgersen", "Torgersen", "Torgersen", "Torgersen", …
$ stage             &lt;chr&gt; "Adult, 1 Egg Stage", "Adult, 1 Egg Stage", "Adult, …
$ individual_id     &lt;chr&gt; "N1A1", "N1A2", "N2A1", "N2A2", "N3A1", "N3A2", "N4A…
$ clutch_completion &lt;chr&gt; "Yes", "Yes", "Yes", "Yes", "Yes", "Yes", "No", "No"…
$ date_egg          &lt;date&gt; 2007-11-11, 2007-11-11, 2007-11-16, 2007-11-16, 200…
$ culmen_length_mm  &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …
$ culmen_depth_mm   &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …
$ flipper_length_mm &lt;dbl&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…
$ body_mass_g       &lt;dbl&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …
$ sex               &lt;chr&gt; "male", "female", "female", NA, "female", "male", "f…
$ nitrogen          &lt;dbl&gt; NA, 8.94956, 8.36821, NA, 8.76651, 8.66496, 9.18718,…
$ carbon            &lt;dbl&gt; NA, -24.69454, -25.33302, NA, -25.32426, -25.29805, …
$ year              &lt;dbl&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…</code></pre>
</div>
</div>
</section>
<section id="dplyrfilter" class="level4">
<h4 class="anchored" data-anchor-id="dplyrfilter">dplyr::filter()</h4>
<p>Filter the rows of a dataframe by different criteria</p>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">individual_id</th>
<th style="text-align: left;">sex</th>
<th style="text-align: right;">body_mass_g</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">N1A1</td>
<td style="text-align: left;">male</td>
<td style="text-align: right;">3750</td>
</tr>
<tr class="even">
<td style="text-align: left;">N1A2</td>
<td style="text-align: left;">female</td>
<td style="text-align: right;">3800</td>
</tr>
<tr class="odd">
<td style="text-align: left;">N2A1</td>
<td style="text-align: left;">female</td>
<td style="text-align: right;">3250</td>
</tr>
<tr class="even">
<td style="text-align: left;">N2A2</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: left;">N3A1</td>
<td style="text-align: left;">female</td>
<td style="text-align: right;">3450</td>
</tr>
<tr class="even">
<td style="text-align: left;">N3A2</td>
<td style="text-align: left;">male</td>
<td style="text-align: right;">3650</td>
</tr>
<tr class="odd">
<td style="text-align: left;">N4A1</td>
<td style="text-align: left;">female</td>
<td style="text-align: right;">3625</td>
</tr>
<tr class="even">
<td style="text-align: left;">N4A2</td>
<td style="text-align: left;">male</td>
<td style="text-align: right;">4675</td>
</tr>
<tr class="odd">
<td style="text-align: left;">N5A1</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">3475</td>
</tr>
<tr class="even">
<td style="text-align: left;">N5A2</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">4250</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">penguins_tiny <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(sex))</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">individual_id</th>
<th style="text-align: left;">sex</th>
<th style="text-align: right;">body_mass_g</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">N1A1</td>
<td style="text-align: left;">male</td>
<td style="text-align: right;">3750</td>
</tr>
<tr class="even">
<td style="text-align: left;">N1A2</td>
<td style="text-align: left;">female</td>
<td style="text-align: right;">3800</td>
</tr>
<tr class="odd">
<td style="text-align: left;">N2A1</td>
<td style="text-align: left;">female</td>
<td style="text-align: right;">3250</td>
</tr>
<tr class="even">
<td style="text-align: left;">N3A1</td>
<td style="text-align: left;">female</td>
<td style="text-align: right;">3450</td>
</tr>
<tr class="odd">
<td style="text-align: left;">N3A2</td>
<td style="text-align: left;">male</td>
<td style="text-align: right;">3650</td>
</tr>
<tr class="even">
<td style="text-align: left;">N4A1</td>
<td style="text-align: left;">female</td>
<td style="text-align: right;">3625</td>
</tr>
<tr class="odd">
<td style="text-align: left;">N4A2</td>
<td style="text-align: left;">male</td>
<td style="text-align: right;">4675</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="tidyrpivot_longer" class="level4">
<h4 class="anchored" data-anchor-id="tidyrpivot_longer">tidyr::pivot_longer()</h4>
<p>Transform data from wide to long (each observation in a single row)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">penguins_isotopes_tiny <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> penguins_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(species, individual_id, carbon, nitrogen)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">species</th>
<th style="text-align: left;">individual_id</th>
<th style="text-align: right;">carbon</th>
<th style="text-align: right;">nitrogen</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Adelie</td>
<td style="text-align: left;">N1A2</td>
<td style="text-align: right;">-24.69454</td>
<td style="text-align: right;">8.94956</td>
</tr>
<tr class="even">
<td style="text-align: left;">Adelie</td>
<td style="text-align: left;">N2A1</td>
<td style="text-align: right;">-25.33302</td>
<td style="text-align: right;">8.36821</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Chinstrap</td>
<td style="text-align: left;">N61A1</td>
<td style="text-align: right;">-24.30229</td>
<td style="text-align: right;">9.03935</td>
</tr>
<tr class="even">
<td style="text-align: left;">Chinstrap</td>
<td style="text-align: left;">N61A2</td>
<td style="text-align: right;">-24.23592</td>
<td style="text-align: right;">8.92069</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Gentoo</td>
<td style="text-align: left;">N31A1</td>
<td style="text-align: right;">-25.51390</td>
<td style="text-align: right;">7.99300</td>
</tr>
<tr class="even">
<td style="text-align: left;">Gentoo</td>
<td style="text-align: left;">N31A2</td>
<td style="text-align: right;">-25.39369</td>
<td style="text-align: right;">8.14756</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">penguins_isotopes_tiny <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span> </span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> carbon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nitrogen, </span>
<span id="cb23-3">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"isotope"</span>, </span>
<span id="cb23-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>) </span></code></pre></div>
</div>
</section>
<section id="dplyrgroup_by-dplyrsummarise" class="level4">
<h4 class="anchored" data-anchor-id="dplyrgroup_by-dplyrsummarise">dplyr::group_by() &amp; dplyr::summarise()</h4>
<p>Group by organises the data into groups, based on column values. This is useful for performing functions on each group, or summarising the data to calculate summary statistics</p>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">species</th>
<th style="text-align: left;">individual_id</th>
<th style="text-align: left;">isotope</th>
<th style="text-align: right;">value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Adelie</td>
<td style="text-align: left;">N1A2</td>
<td style="text-align: left;">carbon</td>
<td style="text-align: right;">-24.69454</td>
</tr>
<tr class="even">
<td style="text-align: left;">Adelie</td>
<td style="text-align: left;">N1A2</td>
<td style="text-align: left;">nitrogen</td>
<td style="text-align: right;">8.94956</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Adelie</td>
<td style="text-align: left;">N2A1</td>
<td style="text-align: left;">carbon</td>
<td style="text-align: right;">-25.33302</td>
</tr>
<tr class="even">
<td style="text-align: left;">Adelie</td>
<td style="text-align: left;">N2A1</td>
<td style="text-align: left;">nitrogen</td>
<td style="text-align: right;">8.36821</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Chinstrap</td>
<td style="text-align: left;">N61A1</td>
<td style="text-align: left;">carbon</td>
<td style="text-align: right;">-24.30229</td>
</tr>
<tr class="even">
<td style="text-align: left;">Chinstrap</td>
<td style="text-align: left;">N61A1</td>
<td style="text-align: left;">nitrogen</td>
<td style="text-align: right;">9.03935</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Chinstrap</td>
<td style="text-align: left;">N61A2</td>
<td style="text-align: left;">carbon</td>
<td style="text-align: right;">-24.23592</td>
</tr>
<tr class="even">
<td style="text-align: left;">Chinstrap</td>
<td style="text-align: left;">N61A2</td>
<td style="text-align: left;">nitrogen</td>
<td style="text-align: right;">8.92069</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Gentoo</td>
<td style="text-align: left;">N31A1</td>
<td style="text-align: left;">carbon</td>
<td style="text-align: right;">-25.51390</td>
</tr>
<tr class="even">
<td style="text-align: left;">Gentoo</td>
<td style="text-align: left;">N31A1</td>
<td style="text-align: left;">nitrogen</td>
<td style="text-align: right;">7.99300</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Gentoo</td>
<td style="text-align: left;">N31A2</td>
<td style="text-align: left;">carbon</td>
<td style="text-align: right;">-25.39369</td>
</tr>
<tr class="even">
<td style="text-align: left;">Gentoo</td>
<td style="text-align: left;">N31A2</td>
<td style="text-align: left;">nitrogen</td>
<td style="text-align: right;">8.14756</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">penguins_isotopes_tiny <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb24-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(species, isotope) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb24-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(value),</span>
<span id="cb24-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(value)) </span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">species</th>
<th style="text-align: left;">isotope</th>
<th style="text-align: right;">mean</th>
<th style="text-align: right;">sd</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Adelie</td>
<td style="text-align: left;">carbon</td>
<td style="text-align: right;">-25.013780</td>
<td style="text-align: right;">0.4514735</td>
</tr>
<tr class="even">
<td style="text-align: left;">Adelie</td>
<td style="text-align: left;">nitrogen</td>
<td style="text-align: right;">8.658885</td>
<td style="text-align: right;">0.4110765</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Chinstrap</td>
<td style="text-align: left;">carbon</td>
<td style="text-align: right;">-24.269105</td>
<td style="text-align: right;">0.0469307</td>
</tr>
<tr class="even">
<td style="text-align: left;">Chinstrap</td>
<td style="text-align: left;">nitrogen</td>
<td style="text-align: right;">8.980020</td>
<td style="text-align: right;">0.0839053</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Gentoo</td>
<td style="text-align: left;">carbon</td>
<td style="text-align: right;">-25.453795</td>
<td style="text-align: right;">0.0850013</td>
</tr>
<tr class="even">
<td style="text-align: left;">Gentoo</td>
<td style="text-align: left;">nitrogen</td>
<td style="text-align: right;">8.070280</td>
<td style="text-align: right;">0.1092904</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="tidyrpivot_wider" class="level4">
<h4 class="anchored" data-anchor-id="tidyrpivot_wider">tidyr::pivot_wider()</h4>
<p>Transform data from long to wide (observations across multiple columns)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">penguins_isotopes_tiny <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb25-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id_cols =</span> species, </span>
<span id="cb25-3">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> isotope, </span>
<span id="cb25-4">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(mean, sd)) </span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">species</th>
<th style="text-align: right;">mean_carbon</th>
<th style="text-align: right;">mean_nitrogen</th>
<th style="text-align: right;">sd_carbon</th>
<th style="text-align: right;">sd_nitrogen</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Adelie</td>
<td style="text-align: right;">-25.01378</td>
<td style="text-align: right;">8.658885</td>
<td style="text-align: right;">0.4514735</td>
<td style="text-align: right;">0.4110765</td>
</tr>
<tr class="even">
<td style="text-align: left;">Chinstrap</td>
<td style="text-align: right;">-24.26910</td>
<td style="text-align: right;">8.980020</td>
<td style="text-align: right;">0.0469307</td>
<td style="text-align: right;">0.0839053</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Gentoo</td>
<td style="text-align: right;">-25.45379</td>
<td style="text-align: right;">8.070280</td>
<td style="text-align: right;">0.0850013</td>
<td style="text-align: right;">0.1092904</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="dplyr-joins" class="level4">
<h4 class="anchored" data-anchor-id="dplyr-joins">dplyr joins</h4>
<p>There are lots of different ways to join multiple dataframes, using shared columns (e.g., an ID column). Here’s an example using left_join(), which keeps all values in the left hand dataframe - in this case penguins_example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">penguins_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb26-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(penguins_summary_isotopes,</span>
<span id="cb26-3">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(species))</span>
<span id="cb26-4"></span>
<span id="cb26-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(penguins_example)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 333
Columns: 22
$ study_name        &lt;chr&gt; "PAL0708", "PAL0708", "PAL0708", "PAL0708", "PAL0708…
$ sample_number     &lt;dbl&gt; 1, 2, 3, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20,…
$ species           &lt;chr&gt; "Adelie", "Adelie", "Adelie", "Adelie", "Adelie", "A…
$ region            &lt;chr&gt; "Anvers", "Anvers", "Anvers", "Anvers", "Anvers", "A…
$ island            &lt;chr&gt; "Torgersen", "Torgersen", "Torgersen", "Torgersen", …
$ stage             &lt;chr&gt; "Adult, 1 Egg Stage", "Adult, 1 Egg Stage", "Adult, …
$ individual_id     &lt;chr&gt; "N1A1", "N1A2", "N2A1", "N3A1", "N3A2", "N4A1", "N4A…
$ clutch_completion &lt;chr&gt; "Yes", "Yes", "Yes", "Yes", "Yes", "No", "No", "Yes"…
$ date_egg          &lt;date&gt; 2007-11-11, 2007-11-11, 2007-11-16, 2007-11-16, 200…
$ culmen_length_mm  &lt;dbl&gt; 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 41.1, 38.6…
$ culmen_depth_mm   &lt;dbl&gt; 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 17.6, 21.2…
$ flipper_length_mm &lt;dbl&gt; 181, 186, 195, 193, 190, 181, 195, 182, 191, 198, 18…
$ body_mass_g       &lt;dbl&gt; 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3200, 3800…
$ sex               &lt;chr&gt; "male", "female", "female", "female", "male", "femal…
$ nitrogen          &lt;dbl&gt; NA, 8.94956, 8.36821, 8.76651, 8.66496, 9.18718, 9.4…
$ carbon            &lt;dbl&gt; NA, -24.69454, -25.33302, -25.32426, -25.29805, -25.…
$ comments          &lt;chr&gt; "Not enough blood for isotopes.", NA, NA, NA, NA, "N…
$ year              &lt;dbl&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…
$ mean_carbon       &lt;dbl&gt; -25.81356, -25.81356, -25.81356, -25.81356, -25.8135…
$ mean_nitrogen     &lt;dbl&gt; 8.859398, 8.859398, 8.859398, 8.859398, 8.859398, 8.…
$ sd_carbon         &lt;dbl&gt; 0.5871106, 0.5871106, 0.5871106, 0.5871106, 0.587110…
$ sd_nitrogen       &lt;dbl&gt; 0.4282233, 0.4282233, 0.4282233, 0.4282233, 0.428223…</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="summary" class="level1">
<h1>Summary</h1>
<p>We have shown a range of functions in R for changing the structure of your data. Hopefully, this has given an insight of how powerful the tidyverse is for efficient data manipulation. Importantly all of these processes are reproducible and limit the chances of us making errors in our workflow.</p>
<p>If we’ve missed a function that you find useful, we’d love to hear what it is. Leave us a comment below!</p>
<section id="additional-resources" class="level3">
<h3 class="anchored" data-anchor-id="additional-resources">Additional Resources</h3>
<ul>
<li>Each tidyverse package has great documentation and useful cheatsheets, available via <a href="https://www.tidyverse.org/">the tidyverse website</a></li>
<li>The book <a href="https://r4ds.hadley.nz/">R for Data Science</a>, which is available online for free, explains how to get your data into R, get it into the most useful structure, transform and visualize it.</li>
<li>For helpful visualisations of how tidyverse functions transform data structures, check out <a href="https://www.garrickadenbuie.com/project/tidyexplain/">Garrick Aden-Buie’s tidyexplain</a></li>
<li>Liza Wood, now part of the Exeter Data Analytics Hub, has a great tutorial on the tidyverse <a href="https://liza-wood.github.io/tidyverse_intro/index.html">on her website</a></li>
</ul>
</section>
<section id="acknowledgements" class="level3">
<h3 class="anchored" data-anchor-id="acknowledgements">Acknowledgements</h3>
<p>We did not create this content alone! Inspiration, tips, and resources have been borrowed from multiple sources.</p>


</section>
</section>

 ]]></description>
  <category>tidyverse</category>
  <category>R</category>
  <guid>https://exeter-data-analytics.github.io/posts/intro_to_tidy_data_manipulation/</guid>
  <pubDate>Mon, 20 Nov 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>intRos: Installing, R, RStudio, and Git</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://exeter-data-analytics.github.io/posts/install_rstudio_git/</link>
  <description><![CDATA[ 




<section id="outline" class="level1">
<h1>Outline</h1>
<p>R is one of the most popular programming language for statistical programming in ecology, evolution, and conservation. It is also the language taught in the University of Exeter’s undergraduate and masters courses within the Centre for Ecology and Conservation.</p>
<p>RStudio is probably the most popular IDE for people using R. An IDE is an integrated development environment, which allows users to combine multiple aspects of software development in one place to make it easier to use. For RStudio, that means you have different panes that contain the R Console, your script, a file explorer, a pane where plots appear, and much more.</p>
<p>Git is a version control system that allows you to track versions of your files. It is popular when programming to be able to keep a history of all the changes you have made to your work, and be able to retrieve old instances of your work if you have made a mistake later down the line. GitHub is an online hosting service that allows you to share your code and data for free, which is super important in science for being open and reproducible and transparent.</p>
<p>This post gives some details on how to install R, RStudio, and git. This information is mainly aggregated from other sources (see acknowledgements below), but there is some specific advice for Windows users for University of Exeter staff and students.</p>
</section>
<section id="prerequisites" class="level1">
<h1>Prerequisites</h1>
<ul>
<li>Be willing to endure some pain when installing things.</li>
</ul>
</section>
<section id="learning-objectives" class="level1">
<h1>Learning objectives</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Learning objectives
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>This introduction should allow you to:</strong></p>
<ul>
<li>install R</li>
<li>install RStudio</li>
<li>manage your R, RStudio, and package installation</li>
<li>install git</li>
</ul>
</div>
</div>
</section>
<section id="installing-r" class="level1">
<h1>Installing R</h1>
<p>R can be installed from the Comprehensive R Archive Network (CRAN) <a href="https://www.stats.bris.ac.uk/R/">here</a>.</p>
<section id="for-mac-users" class="level2">
<h2 class="anchored" data-anchor-id="for-mac-users">For Mac Users</h2>
<p>Mac users should click the “Download R for macOS” link in the “Download and Install R” section. Click on the link for the latest version of R and click on the “Download R-[version].pkg” link to download the installer package. Open the downloaded file and follow the installation instructions. You can launch R by clicking the R icon on your Launchpad or in your Applications folder of your Finder, but we recommend using RStudio to code in R because it makes programming in R a much easier and more pleasant experience.</p>
</section>
<section id="for-windows-users" class="level2">
<h2 class="anchored" data-anchor-id="for-windows-users">For Windows Users</h2>
<p>Windows users should click the “Download R for Windows” link in the “Download and Install R” section. Click on the “base” directory and click on the link for the latest version of R. Then click on the “Download R[version] for Windows” link, open the downloaded file and follow the installation instructions. You can launch R by double-clicking the R icon on your Desktop or in your start menu, but we recommend using RStudio to code in R because it makes programming in R a much easier and more pleasant experience.</p>
</section>
</section>
<section id="installing-rstudio" class="level1">
<h1>Installing RStudio</h1>
<p>RStudio can be installed for free from the Posit (the company that was formerly known called RStudio) website <a href="https://posit.co/download/rstudio-desktop/">here</a>. RStudio is available for Windows, MacOS, and Linux. Just click the “Download RStudio” button and follow the simple instructions. Once you’ve installed RStudio, you can open it like any other program on your computer. <strong>Before you install RStudio, make sure you have installed R.</strong></p>
<section id="some-general-tips-for-global-options-of-rstudio" class="level2">
<h2 class="anchored" data-anchor-id="some-general-tips-for-global-options-of-rstudio">Some general tips for Global Options of RStudio</h2>
<p>When setting up RStudio, there are a bunch of things you can change to configure your RStudio to how you like it. Some of these are likely personal, but we have some settings we like to use. These are settings you can change by clicking Tools -&gt; Global Options.</p>
<ol type="1">
<li>Unclick “Restore .RData into workspace at startup”. This means that each time you start a new RStudio instance, your environment starts clean and you can be confident that any results you have, or weird R behaviour, is not due to any previous code or session.</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/install_rstudio_git/restore_rdata.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">Do not restore Rdata</figcaption>
</figure>
</div>
<ol start="2" type="1">
<li>Unclick “Restore most recently opened project at startup”. This means that when you start a new RStudio, it will open an RStudio not associated with a project. This is more of a personal preference of mine as more often than not I have multiple RStudio instances open not associated with the same work, and I got tired of closing the project of new RStudio instances.</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/install_rstudio_git/restore_project.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">Do not restore most recent project</figcaption>
</figure>
</div>
<ol start="3" type="1">
<li>In the “Code” tab, tick “Soft-wrap R source files”. This means that instead of having long lines of code that go off of your source pane and require you to move from left-to-right to view them, the source pane instead “soft-wraps” them into a new line, while preserving the fact that they are, in fact, a single line of code.</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/install_rstudio_git/soft_wrap.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">Turn on Soft wrap</figcaption>
</figure>
</div>
<ol start="4" type="1">
<li>In the “Code -&gt; Display” tab, unclick “Show Margin” which will get rid of the annoying line that can be present in the Source pane sometimes.</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/install_rstudio_git/show_margin.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">Turn off Show margin</figcaption>
</figure>
</div>
<ol start="5" type="1">
<li>I leave the default colours on for RStudio, but you can change to black background (and loads of other alternatives) in the “Appearance” tab.</li>
</ol>
</section>
<section id="managing-where-your-r-packages-install" class="level2">
<h2 class="anchored" data-anchor-id="managing-where-your-r-packages-install">Managing where your R packages install</h2>
<p>Over many years, I have helped a fair few people at the University try and work out how to install R packages on their University computers. This has mainly been on Windows machines, and is most likely due to the lack of read/write access wherever R by default chooses to install packages.</p>
<p>Consequently, it might be good for you to choose a new location on your computer where your R packages will install. And if you cannot install R packages at the moment then we are here to help! You can learn how to do change the default location your R packages install into by watching <a href="https://rfortherestofus.com/2021/09/how-to-set-your-default-package-install-location-in-r/">this video</a>, but we will whizz through the process here too.</p>
<ol type="1">
<li><p>Check where R is installing packages by typing <strong>.libPaths()</strong> into your R console.</p></li>
<li><p>Create a new folder which you would like to install packages, somewhere where you <strong>DEFINITELY</strong> have read/write access (e.g.&nbsp;“~/Desktop/r_packages”)</p></li>
<li><p>We can then change <strong>.libPaths()</strong> for this R session.</p></li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/install_rstudio_git/change_libpaths.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">Change where you R packages install in an individual session</figcaption>
</figure>
</div>
<ol start="4" type="1">
<li><p>However, when we start a new R session, this change will be lost. To change it by default for R, we need to change our .Renviron file, which allows us to change variables that R looks for every time it starts. To easily manipulate this file, we will first install the R package <strong>usethis</strong> using <strong>install.packages(usethis)</strong>. It should install into the new directory you have just created, for me it installed into “~/Desktop/r_packages”.</p></li>
<li><p>Run <strong>usethis::edit_r_environ()</strong> in your Console and it should open your .Renviron file in your source pane. From here, add <strong>R_LIBS_USER=“~/Desktop/r_packages”</strong> to it (obviously change the folder name to the folder you have created), click Save, and close the file.</p></li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/install_rstudio_git/edit_r_environ.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">Run usethis::edit_r_environ</figcaption>
</figure>
</div>
<ol start="6" type="1">
<li>Now when you start a new R instance, your chosen folder should be present when you run <strong>.libPaths()</strong> and you should not have problems installing R packages anymore!</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/install_rstudio_git/libpaths2.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">.libPaths() changes by default</figcaption>
</figure>
</div>
</section>
</section>
<section id="installing-git" class="level1">
<h1>Installing git</h1>
<p>To check if Git is installed on a Windows or Mac machine, follow these steps:</p>
<p>For Windows:</p>
<ol type="1">
<li>Open the Command Prompt by pressing the “Windows Key + R” and typing “cmd” in the “Run” dialog box, or open “Git Bash” (or use the Terminal tab of your RStudio).</li>
<li>Type <code>git --version</code> and press Enter.</li>
<li>If git is installed, the version number of git will be displayed in the Command Prompt.</li>
</ol>
<p>For Mac:</p>
<ol type="1">
<li>Open the Terminal application by finding it on your Launchpad or Applications folder in your Finder (or in the Terminal tab of your RStudio).</li>
<li>Type <code>git --version</code> and press Enter.</li>
<li>If git is installed, the version number of git will be displayed in the Terminal window.</li>
</ol>
<p>Even if git is installed, it is probably a good idea to update to the latest version. git has very good backwards compatibility so it is very unlikely that updating will break anything.</p>
<section id="for-mac-users-1" class="level2">
<h2 class="anchored" data-anchor-id="for-mac-users-1">For Mac Users</h2>
<p>Git can be installed on Mac from some of the options on the git <a href="https://git-scm.com/download/mac">website</a>. Another alternative is <a href="https://desktop.github.com/">GitHub Desktop</a>, which will install the latest version of Git with itself if you do not already have it.</p>
</section>
<section id="for-windows-users-1" class="level2">
<h2 class="anchored" data-anchor-id="for-windows-users-1">For Windows Users</h2>
<p>Git can be installed from <a href="https://gitforwindows.org/">gitforwindows</a>, but if you install <a href="https://desktop.github.com/">GitHub Desktop</a>, the latest version of Git will be installed if you do not already have it. With GitHub Desktop, you get a command line version of Git with a robust GUI.</p>
</section>
<section id="make-a-github-profile" class="level2">
<h2 class="anchored" data-anchor-id="make-a-github-profile">Make a GitHub profile</h2>
<p>Git is version control on your local machine, to share code with other you should create a GitHub (or GitLab) profile. Information on setting up a GitHub account can be found <a href="https://docs.github.com/en/get-started/onboarding/getting-started-with-your-github-account">here</a>.</p>
</section>
<section id="configure-github-with-local-git-and-rstudio" class="level2">
<h2 class="anchored" data-anchor-id="configure-github-with-local-git-and-rstudio">Configure GitHub with local git and RStudio</h2>
<p>Now we have git, R, and RStudio installed, and an RStudio profile, we need to make sure they can all talk each other, and that you can communicate with your GitHub profile from your local machine. An extensive walkthrough is available <a href="https://happygitwithr.com/connect-intro.html">here</a>, but we will cover the main steps.</p>
<p>First, we need to create an access token so that GitHub can securely link your local computer to GitHub. To do this go to <a href="https://github.com/settings/tokens">Settings -&gt; Developer Settings -&gt; Tokens</a> and create an access token.</p>
<p>For the scopes, I ticked most that I thought would be useful and understood, which were <strong>gist</strong>, <strong>repo</strong>, <strong>user</strong>, <strong>workflow</strong>. Make sure you name it something useful like “R:GitHubPAT” so that is makes sense if you ever need to make a new token.</p>
<p>Once this code is created, save it to your clipboard or in a text editor while we are storing it in your RStudio. Once you close the webpage you will never see this token again, so make sure you make a note of it! Then going forwards, treat this access token as you would a password. For some of you that might mean using a password manager, and for some of you that might mean a book, your hand, or post it notes on your computer screen.</p>
<p>We will use the R package <strong>gitcreds</strong> to associate your GitHub PAT with RStudio. First install <strong>gitcreds</strong> using <strong>install.packages(‘gitcreds’)</strong>. If you want a way to be able to install and load R packages from CRAN, GitHub, and Bioconductor in a simpler way without calls to both <strong>install.packages()</strong> and <strong>library()</strong>, then I recommend looking at <a href="https://github.com/DesiQuintans/librarian"><strong>librarian</strong></a>!</p>
<p>Next run <strong>gitcreds::gitcreds_set()</strong> and follow the prompts. Specifically make sure you copy in your GitHub PAT!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/install_rstudio_git/gitcreds_set.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">gitcreds_set()</figcaption>
</figure>
</div>
<p>Once you have set this, you can check it has stored properly using <strong>gitcreds::gitcreds_get()</strong>.</p>
<p>This should mean you are ready to roll (i.e.&nbsp;Git and GitHub like a boss), but if you are getting stuck some common troubleshoots can be found <a href="https://happygitwithr.com/https-pat.html#pat-troubleshooting">here</a>.</p>
<p>One thing you can check is that RStudio knows where your git executable is. In Tools -&gt; Global Options, you can check where git is stored and being accessed from.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/install_rstudio_git/check_git_rstudio.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">Check where RStudio is looking for git</figcaption>
</figure>
</div>
</section>
</section>
<section id="summary" class="level1">
<h1>Summary</h1>
<p>After this guide, you should have installed R, RStudio, and git on your machine, and also know a little more about how to check where your R packages are installing and some handy RStudio options.</p>
<section id="additional-resources" class="level3">
<h3 class="anchored" data-anchor-id="additional-resources">Additional Resources</h3>
<ul>
<li>This <a href="https://happygitwithr.com/">online book</a> about using R and RStudio and git is incredible.</li>
</ul>
</section>
<section id="acknowledgements" class="level3">
<h3 class="anchored" data-anchor-id="acknowledgements">Acknowledgements</h3>
<p>We did not create this content alone! Inspiration, tips, and resources have been borrowed from multiple sources.</p>
<ul>
<li>We took inspiration from this <a href="https://www.r-bloggers.com/2019/05/my-rstudio-configuration/">blog post</a> about someone’s RStudio configuration.</li>
<li>We watched <a href="https://rfortherestofus.com/2021/09/how-to-set-your-default-package-install-location-in-r/">this video</a> on how to change the location for installing R packages.</li>
<li>We enjoyed <a href="https://community.rstudio.com/t/should-i-update-all-my-r-packages-frequently-yes-no-why/5856/6">this thread</a> on whether we should update R and our R packages regularly. In conclusion, yes probably.</li>
<li>Some of the content was created using ChatGPT.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>R</category>
  <category>RStudio</category>
  <category>git</category>
  <guid>https://exeter-data-analytics.github.io/posts/install_rstudio_git/</guid>
  <pubDate>Thu, 20 Apr 2023 23:00:00 GMT</pubDate>
</item>
<item>
  <title>intRos: Publication ready plots using ggplot2</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/</link>
  <description><![CDATA[ 




<section id="outline" class="level1">
<h1>Outline</h1>
<p>I love making graphs! To explore data, to plot model results, just for the fun of making plots. I imagine we have all spent a huge amount of time making our plots ready for publication. Here we have a quick walkthrough of using <strong>ggplot2</strong> to create graphs for publication, and a few tips and tricks we have learned along the way. <em>If you have a favourite ggplot2 trick or tip then we would love for you to get in contact with us and for you add it to this walkthrough. Or if you’re feeling adventurous, clone the <a href="https://github.com/exeter-data-analytics/intRos">GitHub repo</a>, add in your tip, re-render this quarto post, commit and push the changes, and start a Pull Request!</em></p>
<p><strong>ggplot2</strong> is a popular data visualisation package in R that allows users to create high-quality and customisable graphics for data exploration, scientific publications, and presentations. Developed by Hadley Wickham, <strong>ggplot2</strong> is built on the principles of the Grammar of Graphics, which defines a set of rules for constructing and interpreting visualisations. With <strong>ggplot2</strong>, users can easily create a wide range of plots with advanced features such as facets, themes, and labels. Whether you are at the beginning of your science journey, or an old and grumpy PI, <strong>ggplot2</strong> provides a powerful and flexible tool for visualising data and gaining insights from it.</p>
<p>Making a <strong>ggplot2</strong> is like writing and following a recipe. You start with the first instructions (a call to <strong>ggplot()</strong>), the next instruction (like the next item of the recipe) is signalled using a <code>+</code>, a new line, and new instructions are added sequentially. <strong>ggplot2</strong> works in a sequential fashion, later instructions add to what is already there, and sometimes counteract or override what previous instructions.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/Slide1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Making a plot using <strong>ggplot2</strong> works much like a recipe</figcaption>
</figure>
</div>
</section>
<section id="prerequisites" class="level1">
<h1>Prerequisites</h1>
<ul>
<li>Have R installed</li>
<li>Have the <strong>tidyverse</strong> package installed</li>
<li>Hopefully have a plot you want to make using <strong>ggplot2</strong> or have some aesthetics you would like to change on a current plot.</li>
</ul>
</section>
<section id="learning-objectives" class="level1">
<h1>Learning objectives</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Learning objectives
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>This introduction should allow you to:</strong></p>
<ul>
<li>Have a basic understanding of the way in which <strong>ggplot2</strong> “works” (i.e.&nbsp;the grammar of graphics)</li>
<li>Understand the format data needs to be in to be used in <strong>ggplot2</strong></li>
<li>Make pubication-ready plots using <strong>ggplot2</strong></li>
<li>Know where to learn more about <strong>ggplot2</strong></li>
</ul>
</div>
</div>
</section>
<section id="making-plots-with-ggplot2" class="level1">
<h1>Making plots with ggplot2</h1>
<p>This walkthrough will lean heavy on tools from the <strong>tidyverse</strong> for data wrangling, and the <strong>palmerpenguins</strong> package for the example data. The first thing we will do is load in the necessary packages and load in the dataset we will use to create our tables.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load in required packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(palmerpenguins)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(MetBrewer)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load in data</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguins"</span>)</span>
<span id="cb1-9">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> penguins</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># have a look at the data</span></span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 344
Columns: 8
$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…
$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…
$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …
$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …
$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…
$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …
$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…
$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…</code></pre>
</div>
</div>
<p>This dataset contain data for 344 penguins, consisting of three species of penguins, collected from 3 islands in the Palmer Archipelago, Antarctica.</p>
<section id="preparing-your-dataset-for-ggplot2" class="level2">
<h2 class="anchored" data-anchor-id="preparing-your-dataset-for-ggplot2">Preparing your dataset for ggplot2</h2>
<p>For <strong>ggplot2</strong>, your data wants to be organised in long format, as opposed to wide.</p>
</section>
<section id="make-a-first-plot-using-ggplot2" class="level2">
<h2 class="anchored" data-anchor-id="make-a-first-plot-using-ggplot2">Make a first plot using ggplot2</h2>
<p>We will make a boxplot of how bill length changes between different species of penguin and add the raw points over the top. After making an initial plot call using <strong>ggplot()</strong>, different types of plot are specified using a <strong>geom_</strong> function (e.g.&nbsp;<strong>geom_boxplot()</strong> for boxplots, <strong>geom_point()</strong> for points, <strong>geom_line()</strong> for a line graph). In each layer, the <strong>aes()</strong> function is used to tell <strong>ggplot2</strong> which arguments depend on aspects of the dataset (e.g.&nbsp;col = species). Arguments set outside of <strong>aes()</strong> do not rely on the dataset (e.g.&nbsp;size = 3, col = ‘black’).</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make first box plot with raw points</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(species, bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add first empty plot layer</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add boxplot, do not plot the outliers</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add jittered raw points</span></span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/index_files/figure-html/first_plot-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Ok this looks nice. Here I put the <strong>aes()</strong> commands inside the original call to <strong>ggplot()</strong> as then those arguments are passed to all other layers (unless overridden by another <strong>aes()</strong>). This looks quite nice, but we can change a bunch of other things to make it look nicer.</p>
</section>
<section id="adding-extra-layers-to-ggplot2" class="level2">
<h2 class="anchored" data-anchor-id="adding-extra-layers-to-ggplot2">Adding extra layers to ggplot2</h2>
<p>There are a bunch of things I do as standard when I am making a plot (and a boxplot in particular):</p>
<ul>
<li>Change the axis labels</li>
<li>Remove the legend if not needed</li>
<li>Change the axis limits</li>
<li>Change the theme and the text size</li>
<li>I dislike the default box plot so I colour the whole thing and then add a median bar in white (see below)</li>
</ul>
<p>The important thing is to create your own style. To do what you think looks best, but all the options are documented nicely on their <a href="https://ggplot2.tidyverse.org/">website</a>. There are many more detailed resources around, so instead here we will document common things we do.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make next box plot with raw points</span></span>
<span id="cb4-2">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(species, bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add first empty plot layer</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add boxplot, do not plot the outliers</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"crossbar"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fatten =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, </span>
<span id="cb4-5">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(x)))}) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add median line to the boxplots</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add jittered raw points</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change theme to the one I like (others are available)</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>,</span>
<span id="cb4-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Bill length (mm)'</span>,</span>
<span id="cb4-10">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Do different penguin species have different bill lengths?'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change labels</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change y limits</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>,</span>
<span id="cb4-13">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># turn off legend</span></span>
<span id="cb4-14"></span>
<span id="cb4-15">p1</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/index_files/figure-html/second_plot-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>And there - with relatively few lines of code - we have a plot that is ready for inserting into a publication. This can be easily saved out using <strong>ggsave()</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save out plot using ggsave</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plot_one.png'</span>, p1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span></code></pre></div>
</div>
</section>
<section id="our-favourite-tips-and-tricks-when-making-plots" class="level2">
<h2 class="anchored" data-anchor-id="our-favourite-tips-and-tricks-when-making-plots">Our favourite tips and tricks when making plots</h2>
<p>I have a set of rules I follow when making plots with <strong>ggplot2</strong>. Some may be different to yours but they might have some use:</p>
<ul>
<li>Generally I make my datasets <strong>BEFORE</strong> they go into <strong>ggplot2</strong>. This includes checking for <code>NA</code> and <code>Inf</code> values as these are super important to know about when visualising and analysing your data!</li>
<li><ul>
<li>Plot the raw data whenever possible.</li>
</ul></li>
<li>Layers work iteratively (later layers go on top of earlier layers) so make sure layers you want to be in the background (e.g.&nbsp;boxplot) are before layers you want to overlay (e.g.&nbsp;the raw data)</li>
<li>Only use <strong>stat_smooth()</strong> for exploring datasets. When plotting model predictions and confidence intervals, create a dataframe for them and then feed that into <strong>ggplot2</strong>.</li>
</ul>
<section id="convert-text-size-in-geom_label-or-geom_text-to-pts-used-for-labels" class="level3">
<h3 class="anchored" data-anchor-id="convert-text-size-in-geom_label-or-geom_text-to-pts-used-for-labels">Convert text size in geom_label() or geom_text() to pts used for labels</h3>
<p>Lets say we wanted to add text to the plot. For example, in the plot above maybe we want to add the total number of penguins sampled for each species. By default <strong>geom_text()</strong> and <strong>geom_label()</strong> use a size guide that is different to the font size set for the axis and tick labels. However, Andrew Heiss has written a function to convert between those so we can easily define the font size in the regular way.</p>
<p>We will use functions from the <strong>tidyverse</strong> to create a data frame with the total number of penguins sampled and the max bill length for each penguin. Creating a data frame with the x and y coordinates of where I want the text to go on the plot, and a column for the label, is how I approach adding text labels to an existing <strong>ggplot</strong>.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define function for pts</span></span>
<span id="cb6-2">pts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x){</span>
<span id="cb6-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(grid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">convertX</span>(grid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(x, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"points"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mm"</span>))</span>
<span id="cb6-4">  }</span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate n for putting each species</span></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove NAs because they are not in the plot</span></span>
<span id="cb6-8">d_n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(d, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(bill_length_mm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(species) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb6-11">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_bill_length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(bill_length_mm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb6-13"></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make plot with text</span></span>
<span id="cb6-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make next box plot with raw points</span></span>
<span id="cb6-16">p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> max_bill_length <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n = '</span>, n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)), d_n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pts</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add text label</span></span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/index_files/figure-html/example_geom_text-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="soft-wrap-or-stagger-text-labels-to-stop-them-overlapping" class="level3">
<h3 class="anchored" data-anchor-id="soft-wrap-or-stagger-text-labels-to-stop-them-overlapping">Soft wrap or stagger text labels to stop them overlapping</h3>
<p>Ok these two are quite recent finds for me, and I absolutely love them. Sometimes your x labels might be really long, and the text can overlap with each other. I used to manually add new lines into my text by inserting <code>\n</code> where I wanted new text to me. But now two approaches exist that can automatically improve spacing between labels on the x axis. These are <strong>scales::label_wrap</strong> which can automatically create new lines for long axis labels and <strong>guide_axis()</strong> which can stagger axis labels to prevent overlapping.</p>
<p>We will demonstrate them both below, by adding the Latin names for each penguin species to the dataset. We will add them in using <strong>case_when()</strong> and then show both plots next to each other using <strong>patchwork</strong> which makes it really easy to combine individual plots. For free you also get code to italicise the axis labels as they are latin names!</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latin_name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gentoo"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pygoscelis papua"</span>,</span>
<span id="cb7-2">                                      species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chinstrap"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pygoscelis antarcticus"</span>,</span>
<span id="cb7-3">                                      species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Adelie"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pygoscelis adeliae"</span>))</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># first to softwrap the text</span></span>
<span id="cb7-6">p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(latin_name, bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add first empty plot layer</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add boxplot, do not plot the outliers</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"crossbar"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fatten =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, </span>
<span id="cb7-9">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(x)))}) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add median line to the boxplots</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add jittered raw points</span></span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change theme to the one I like (others are available)</span></span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>,</span>
<span id="cb7-13">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Bill length (mm)'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change labels</span></span>
<span id="cb7-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change y limits</span></span>
<span id="cb7-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>,</span>
<span id="cb7-16">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># turn off legend</span></span>
<span id="cb7-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"italic"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># italicise x axis labels</span></span>
<span id="cb7-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_wrap</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># soft wrap labels</span></span>
<span id="cb7-19"></span>
<span id="cb7-20">p3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_axis</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.dodge =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stagger axis labels</span></span>
<span id="cb7-22"></span>
<span id="cb7-23">p2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p3</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/index_files/figure-html/plot_softwrap-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
<p>Either of these look great, but I think <strong>scales::label_wrap()</strong> is my favourite. So simple and so effective!</p>
</section>
<section id="automatically-label-facets-with-letters" class="level3">
<h3 class="anchored" data-anchor-id="automatically-label-facets-with-letters">Automatically label facets with letters</h3>
<p>One thing I often do is create faceted plots where each plot represents a different treatment or subset of the data. This is really easy to do with <strong>ggplot2</strong> using <strong>facet_wrap()</strong>. However, the default facets are poorly labelled, are not numbered (generally with a, b, c for publications), and have a grey fill colour.</p>
<p>However, these are all issues we can solve to create publication-ready facet labels. We will demonstrate this by plotting a different trait on each facet (bill length, bill depth, flipper length, body mass). We will create the long data using <a href="https://tidyr.tidyverse.org/reference/pivot_longer.html"><strong>pivot_longer()</strong></a> and use <strong>case_when()</strong> to make sure the labels on each facet are formatted correctly (i.e.&nbsp;spaces instead of underscores.</p>
<p>We can write a function to automatically label each facet, and change theme elements to align text and change the strip background colour.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">long_format <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create column to id each individual penguin</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(bill_length_mm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>body_mass_g), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trait'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># go from wide to long format for the traits</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facet_label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(trait <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bill_length_mm'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill Length (mm)"</span>,</span>
<span id="cb8-5">                                 trait <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill Depth (mm)"</span>,</span>
<span id="cb8-6">                                 trait <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"body_mass_g"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Body Mass (g)"</span>,</span>
<span id="cb8-7">                                 trait <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flipper_length_mm"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flipper Length (mm)"</span>))</span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create function to add letter to facet labels</span></span>
<span id="cb8-10">letter_facets <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> (string){</span>
<span id="cb8-11">    len <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(string)</span>
<span id="cb8-12">    string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"("</span>, letters[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>len], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">") "</span>, string, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb8-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(string)</span>
<span id="cb8-14">}</span>
<span id="cb8-15"></span>
<span id="cb8-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create plot</span></span>
<span id="cb8-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(long_format, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(species, value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add first empty plot layer</span></span>
<span id="cb8-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add boxplot, do not plot the outliers</span></span>
<span id="cb8-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"crossbar"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fatten =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, </span>
<span id="cb8-20">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(x)))}) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add median line to the boxplots</span></span>
<span id="cb8-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add jittered raw points</span></span>
<span id="cb8-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change theme to the one I like (others are available)</span></span>
<span id="cb8-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>,</span>
<span id="cb8-24">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Trait measurement'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change labels</span></span>
<span id="cb8-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>,</span>
<span id="cb8-26">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>facet_label, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'free_y'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labeller =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labeller</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facet_label =</span> letter_facets)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># facet by the label column so the text is correct </span></span>
<span id="cb8-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb8-29">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/index_files/figure-html/plot_facets-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
<p>BINGO THIS LOOKS SHAMAZING.</p>
</section>
<section id="beautiful-colour-schemes-with-metbrewer" class="level3">
<h3 class="anchored" data-anchor-id="beautiful-colour-schemes-with-metbrewer">Beautiful colour schemes with MetBrewer</h3>
<p>I take a lot of time looking at colours to use in my plots. I have used <a href="https://ggplot2.tidyverse.org/reference/scale_viridis.html">viridis</a> before, the colour schemes from <a href="https://colorbrewer2.org/#type=sequential&amp;scheme=BuGn&amp;n=3">colorbrewer</a>, and Pokémon inspired colour schemes using <a href="https://github.com/timcdlucas/palettetown"><strong>palettetown</strong></a>. If you are so inclined, I have also started writing a small package (<a href="https://github.com/padpadpadpad/BrewerUoE">BrewerUoE</a>) to access the new University of Exeter colours in R.</p>
<p>However, the most beautiful colour schemes I have ever seen are those provided by <a href="https://github.com/BlakeRMills/MetBrewer"><strong>MetBrewer</strong></a>, which are palettes inspired by works at the Metropolitan Museum of Art in New York. They are just sensational, and easy to add directly to your plots! We show an example how to below, but there are more examples on MetBrewer’s GitHub.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">met.brewer</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Klimt"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">met.brewer</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Klimt"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/index_files/figure-html/plot_metbrewer-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="add-a-final-null-layer-to-allow-you-to-comment-out-layers" class="level3">
<h3 class="anchored" data-anchor-id="add-a-final-null-layer-to-allow-you-to-comment-out-layers">Add a final NULL layer to allow you to comment out layers</h3>
<p>It is common for me to play around with different layers and switch some on and off with a hashtag. If you hash out the final layer then the layer before it with a <code>+</code> carries on to the next set of code. If you add a final <code>+ NULL</code> to the plot then this behaviour doesn’t happen.</p>
<p>Lets say we wanted to see the plot without the text labels. We can turn them off by hashtagging them out (in case we want to add them back in later), and the final <code>NULL</code> means the plot still works.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#geom_text(aes(x = species, y = max_bill_length + 5, label = paste('n = ', n, sep = '')), d_n, size = pts(12), col = 'black') + # add text label</span></span>
<span id="cb10-3">  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add NULL layer to allow easy commenting out of layers</span></span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/index_files/figure-html/plot_null-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="control-legend-shapes-and-override-legend-appearance" class="level3">
<h3 class="anchored" data-anchor-id="control-legend-shapes-and-override-legend-appearance">Control legend shapes and override legend appearance</h3>
<p>Sometimes you colour text, lines, points with the same colours. When you do this, each of the legends for them get displayed in the legend overlaid with each other. To show this we will create a line plot of the relationship between</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(body_mass_g, bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/index_files/figure-html/plot_legend-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I do not like the legend with multiple geoms, to me it looks like a tram stop sign. Luckily there are easy ways to manually edit the legend.</p>
<p>First we can switch off the legend of any of the elements using the argument <code>show.legend</code>.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(body_mass_g, bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/index_files/figure-html/plot_legend2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This looks nicer. An alternative to this is to use <code>key_glyph</code> which allows you to control the shape of the legend.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(body_mass_g, bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key_glyph =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'point'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/index_files/figure-html/plot_legend3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>We can also control the size of the shape in the legend by altering the legend defaults using the <strong>guides()</strong> function.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(body_mass_g, bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/index_files/figure-html/plot_legend4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Ok that last size is a bit much. But you get the idea and now have the tools to manually edit your legend.</p>
</section>
</section>
<section id="awesome-ggplot2-extensions" class="level2">
<h2 class="anchored" data-anchor-id="awesome-ggplot2-extensions">Awesome ggplot2 extensions</h2>
<p><strong>gpgplot2</strong> is so popular as a plotting system that it has become its own ecosystem, with people developing tools and extensions to complement and build extra functionality to <strong>ggplot2</strong>. All of the extensions can be found <a href="https://exts.ggplot2.tidyverse.org/gallery/">here</a>, but below are some of our favourites:</p>
<ul>
<li><a href="https://mjskay.github.io/ggdist/"><strong>ggdist</strong></a> which provides geoms and stats for visualising distributions and uncertainty.</li>
<li><a href="https://guangchuangyu.github.io/ggtree-book/chapter-ggtree.html"><strong>ggtree</strong></a> to make phylogenetic trees using <strong>ggplot2</strong>.</li>
<li><a href="https://patchwork.data-imaginist.com/"><strong>patchwork</strong></a> for combining separate plots.</li>
<li><a href="https://github.com/timcdlucas/palettetown"><strong>palettetown</strong></a> for Pokémon themed colour schemes. Whats better than Charizard colours!</li>
</ul>
</section>
</section>
<section id="summary" class="level1">
<h1>Summary</h1>
<p>We have shown how publication-ready plots can quickly be made using <strong>ggplot2</strong>, and also highlighted some functions and tips we have found super useful when we make plots. I have found that making plots in <strong>ggplot2</strong> follows the 80/20 rule. You get 80% of the way there in 20% of the time, but then the finishing touches can take very, very long. Hopefully some of the code, approaches, tips, and links provided here help you get started!</p>
<p>All of the code here can be used to create your own plots Have fun!</p>
<section id="additional-resources" class="level3">
<h3 class="anchored" data-anchor-id="additional-resources">Additional Resources</h3>
<ul>
<li><strong>ggplot2</strong> <a href="https://ggplot2.tidyverse.org/">website</a></li>
<li><strong>ggplot2</strong> <a href="https://ggplot2-book.org/index.html">book</a></li>
<li><strong>ggplot2</strong> <a href="../../posts/intro_to_ggplot2/ggplot2_cheatsheet.pdf">cheatsheet</a></li>
<li>Cedric Scherer’s whole <a href="https://www.cedricscherer.com/">website</a> (I LOVE HIS VISUALISATIONS), but his <a href="https://www.cedricscherer.com/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/#legends">tutorial</a> for creating beautiful visualisations in <strong>ggplot2</strong> is amazing.</li>
</ul>
</section>
<section id="acknowledgements" class="level3">
<h3 class="anchored" data-anchor-id="acknowledgements">Acknowledgements</h3>
<p>We did not create this content alone! Inspiration, tips, and resources have been borrowed from multiple sources.</p>
<ul>
<li>We are indebted to the <strong>tidyverse</strong> team of developers, and especially Hadley Wickham for creating and maintaining <strong>ggplot2</strong>.</li>
<li>Tips for creating the post, website, and format for the walkthroughs were taken from Stephanie Hicks’ Course <a href="https://www.stephaniehicks.com/jhustatcomputing2022/">website</a> and <a href="https://github.com/stephaniehicks/jhustatcomputing2022">source code</a>. She has a great post introducing <a href="https://www.stephaniehicks.com/jhustatcomputing2022/posts/2022-09-15-ggplot2-plotting-system-part-2/"><strong>ggplot2</strong></a> that goes into more depth than we do here.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>R</category>
  <category>ggplot2</category>
  <category>tidyverse</category>
  <guid>https://exeter-data-analytics.github.io/posts/intro_to_ggplot2/</guid>
  <pubDate>Fri, 24 Feb 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>intRos: Reproducible tables with flextable</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://exeter-data-analytics.github.io/posts/intro_to_flextable/</link>
  <description><![CDATA[ 




<section id="outline" class="level1">
<h1>Outline</h1>
<p>As scientists we make A LOT of tables, be it of summary statistics, model parameter values, contrast tables, or anything else. It used to be common practice to copy these individually into Excel or Word and then create a table to insert into your work, but this is prone to errors. No one is perfect after all.</p>
<p>This problem has now been solved by a bunch of different packages that allow for tables to be created in R and exported to a variety of formats. This means that fewer mistakes are made, that tables can easily be remade if the data or stats change, and that the process of making your tables is completely reproducible. The R package we will introduce to do this today is <strong>flextable</strong>, but there are other options available we won’t cover here such as <a href="https://gt.rstudio.com/articles/intro-creating-gt-tables.html"><strong>gt</strong></a> and <a href="https://hughjonesd.github.io/huxtable/huxtable.html"><strong>huxtable</strong></a>. I love <strong>flextable</strong> because it seems infinitely customisable and produces tables that are formatted beautifully to go into research articles.</p>
<p><strong>flextable</strong> provides an easy and flexible way to create tables for reporting and presentations. It allows for customization of the table appearance, including cell borders, font styles, background color, and more. The package also supports different formats such as HTML, Microsoft Word, and PowerPoint. It is well suited for creating reports and presentations with a high level of formatting, while still being simple and straightforward to use. Additionally, <strong>flextable</strong> has a number of features that make it particularly useful for data visualisation, including the ability to merge cells, add custom functions for data formatting, and control the appearance of the table based on data values (i.e.&nbsp;making p values that are &lt;0.05 <strong>bold</strong>).</p>
<p><em>Note: There are likely to be more elegant ways to do some of the code we present here. If you know of a simpler/easier way then we would love for you to help contribute to this project.</em></p>
</section>
<section id="prerequisites" class="level1">
<h1>Prerequisites</h1>
<ul>
<li>Have R installed</li>
<li>Be using R for your research (or for funsies)</li>
<li>Hopefully have a table you want to make in R</li>
</ul>
</section>
<section id="learning-objectives" class="level1">
<h1>Learning objectives</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Learning objectives
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>This introduction should allow you to:</strong></p>
<ul>
<li>make publication-ready tables in <strong>flextable</strong></li>
<li>format tables in <strong>flextable</strong></li>
<li>export tables created in <strong>flextable</strong></li>
<li>know where to learn more about <strong>flextable</strong></li>
</ul>
</div>
</div>
</section>
<section id="using-flextable" class="level1">
<h1>Using flextable</h1>
<p>This walkthrough will lean heavy on tools from the <strong>tidyverse</strong> for data wrangling, and the <strong>palmerpenguins</strong> package for the example data. The first thing we will do is load in the necessary packages and load in the dataset we will use to create our tables.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load in required packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(flextable)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(emmeans)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(palmerpenguins)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load in data</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguins"</span>)</span>
<span id="cb1-9">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> penguins</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># have a look at the data</span></span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 344
Columns: 8
$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…
$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…
$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …
$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …
$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…
$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …
$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…
$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…</code></pre>
</div>
</div>
<p>This dataset contain data for 344 penguins, consisting of three species of penguins, collected from 3 islands in the Palmer Archipelago, Antarctica.</p>
<section id="make-table-of-summary-stats" class="level2">
<h2 class="anchored" data-anchor-id="make-table-of-summary-stats">Make table of summary stats</h2>
<p>It is common to make tables summarising aspects of any given dataset. We will do that here with <strong>flextable</strong>. Lets say we want to know the averages and standard deviations of body mass, bill length and bill depth of the different penguins species split by sex.</p>
<p>We can easily do this using <strong>group_by()</strong> and <strong>summarise()</strong> in <strong>dplyr</strong>. More information on these functions can be found in our tidyverse intRo.</p>
<p>Also because I dislike the behaviour of factors in R sometimes, we will first convert all columns that are factors into characters.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert all columns that are factors into characters</span></span>
<span id="cb3-2">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">where</span>(is.factor), as.character))</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create summary data</span></span>
<span id="cb3-5">d_summary <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(d, species, sex) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb3-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate number in each group</span></span>
<span id="cb3-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_penguins =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb3-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># can use across to apply the same functions to multiple columns</span></span>
<span id="cb3-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(bill_length_mm, bill_depth_mm, body_mass_g), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))),</span>
<span id="cb3-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specify we want to drop the groups</span></span>
<span id="cb3-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'drop'</span>)</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># look at our table</span></span>
<span id="cb3-15">d_summary</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 8 × 9
  species   sex    num_penguins bill_length_mm_mean bill_length_mm_sd
  &lt;chr&gt;     &lt;chr&gt;         &lt;int&gt;               &lt;dbl&gt;             &lt;dbl&gt;
1 Adelie    female           73                37.3              2.03
2 Adelie    male             73                40.4              2.28
3 Adelie    &lt;NA&gt;              6                37.8              2.80
4 Chinstrap female           34                46.6              3.11
5 Chinstrap male             34                51.1              1.56
6 Gentoo    female           58                45.6              2.05
7 Gentoo    male             61                49.5              2.72
8 Gentoo    &lt;NA&gt;              5                45.6              1.37
# ℹ 4 more variables: bill_depth_mm_mean &lt;dbl&gt;, bill_depth_mm_sd &lt;dbl&gt;,
#   body_mass_g_mean &lt;dbl&gt;, body_mass_g_sd &lt;dbl&gt;</code></pre>
</div>
</div>
<p>We can see there are some NAs for the sex of the penguins. We can make these unknown using <strong>replace_na()</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># replace NAs in our sex column</span></span>
<span id="cb5-2">d_summary <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(d_summary, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sex =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace_na</span>(sex, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span>))</span></code></pre></div>
</div>
<p>We can immediately make this into a flextable using the <strong>flextable()</strong> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make our table into a flex table</span></span>
<span id="cb6-2">table1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">flextable</span>(d_summary)</span>
<span id="cb6-3"></span>
<span id="cb6-4">table1</span></code></pre></div>
<div class="cell-output-display">

<div class="tabwid"><style>.cl-ef557d38{}.cl-ef50ca18{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-ef5398c4{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ef5398c5{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ef53a1c0{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef53a1ca{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef53a1cb{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef53a1cc{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef53a1cd{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef53a1ce{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing="true" class="cl-ef557d38"><thead><tr style="overflow-wrap:break-word;"><th class="cl-ef53a1c0"><p class="cl-ef5398c4"><span class="cl-ef50ca18">species</span></p></th><th class="cl-ef53a1c0"><p class="cl-ef5398c4"><span class="cl-ef50ca18">sex</span></p></th><th class="cl-ef53a1ca"><p class="cl-ef5398c5"><span class="cl-ef50ca18">num_penguins</span></p></th><th class="cl-ef53a1ca"><p class="cl-ef5398c5"><span class="cl-ef50ca18">bill_length_mm_mean</span></p></th><th class="cl-ef53a1ca"><p class="cl-ef5398c5"><span class="cl-ef50ca18">bill_length_mm_sd</span></p></th><th class="cl-ef53a1ca"><p class="cl-ef5398c5"><span class="cl-ef50ca18">bill_depth_mm_mean</span></p></th><th class="cl-ef53a1ca"><p class="cl-ef5398c5"><span class="cl-ef50ca18">bill_depth_mm_sd</span></p></th><th class="cl-ef53a1ca"><p class="cl-ef5398c5"><span class="cl-ef50ca18">body_mass_g_mean</span></p></th><th class="cl-ef53a1ca"><p class="cl-ef5398c5"><span class="cl-ef50ca18">body_mass_g_sd</span></p></th></tr></thead><tbody><tr style="overflow-wrap:break-word;"><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">Adelie</span></p></td><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">female</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">73</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">37.25753</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">2.028883</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">17.62192</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">0.9429927</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">3,368.836</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">269.3801</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">Adelie</span></p></td><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">male</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">73</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">40.39041</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">2.277131</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">19.07260</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">1.0188856</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">4,043.493</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">346.8116</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">Adelie</span></p></td><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">unknown</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">6</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">37.84000</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">2.802320</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">18.32000</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">1.2696456</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">3,540.000</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">477.1661</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">Chinstrap</span></p></td><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">female</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">34</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">46.57353</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">3.108669</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">17.58824</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">0.7811277</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">3,527.206</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">285.3339</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">Chinstrap</span></p></td><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">male</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">34</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">51.09412</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">1.564558</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">19.25294</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">0.7612730</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">3,938.971</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">362.1376</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">Gentoo</span></p></td><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">female</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">58</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">45.56379</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">2.051247</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">14.23793</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">0.5402493</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">4,679.741</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">281.5783</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">Gentoo</span></p></td><td class="cl-ef53a1cb"><p class="cl-ef5398c4"><span class="cl-ef50ca18">male</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">61</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">49.47377</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">2.720594</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">15.71803</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">0.7410596</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">5,484.836</span></p></td><td class="cl-ef53a1cc"><p class="cl-ef5398c5"><span class="cl-ef50ca18">313.1586</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef53a1cd"><p class="cl-ef5398c4"><span class="cl-ef50ca18">Gentoo</span></p></td><td class="cl-ef53a1cd"><p class="cl-ef5398c4"><span class="cl-ef50ca18">unknown</span></p></td><td class="cl-ef53a1ce"><p class="cl-ef5398c5"><span class="cl-ef50ca18">5</span></p></td><td class="cl-ef53a1ce"><p class="cl-ef5398c5"><span class="cl-ef50ca18">45.62500</span></p></td><td class="cl-ef53a1ce"><p class="cl-ef5398c5"><span class="cl-ef50ca18">1.374470</span></p></td><td class="cl-ef53a1ce"><p class="cl-ef5398c5"><span class="cl-ef50ca18">14.55000</span></p></td><td class="cl-ef53a1ce"><p class="cl-ef5398c5"><span class="cl-ef50ca18">0.8103497</span></p></td><td class="cl-ef53a1ce"><p class="cl-ef5398c5"><span class="cl-ef50ca18">4,587.500</span></p></td><td class="cl-ef53a1ce"><p class="cl-ef5398c5"><span class="cl-ef50ca18">338.1937</span></p></td></tr></tbody></table></div>
</div>
</div>
<p>This already looks pretty good. But we can now add layers of formatting onto this table. The layers of formatting work much like the layers of <strong>ggplot2</strong>. You start with the base level and each new command creates new formatting of the whole table. Because of this, the order of the commands can make a big difference.</p>
<p>For this table, we will do a few different things:</p>
<ul>
<li>rename the column names</li>
<li>merge the species column vertically to only have one instance of species</li>
<li>round the numbers to 2 decimal places</li>
<li>change the font and font size</li>
<li>play around with the column names to create a tiered column name for each trait (bill length, bill depth, body mass)</li>
<li>add in some horizontal lines to split species apart</li>
</ul>
<p>We can do this by adding new layers using the <strong>%&gt;%</strong>. Many of the functions involve you specifying what <code>part</code> you want the change to apply to (‘all’, ‘body’, or ‘header’). Specific rows can be specified using the <code>i</code> argument, and columns using <code>j</code>.</p>
<p>To add a new header row, we need to create a new object which contains the text we want to add.</p>
<p>For each new thing we do, I have commented what the command is doing so that the code makes as much sense as possible.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># text to be new header label</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add same name for columns we want to merge later on</span></span>
<span id="cb7-3">pars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_paragraph</span>(</span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_chunk</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sex'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Bill Length (mm)'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Beak Length (mm)'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Body Mass (g)'</span>))</span>
<span id="cb7-5">)</span>
<span id="cb7-6"></span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># edit table1</span></span>
<span id="cb7-9">table1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">flextable</span>(d_summary) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename all column names</span></span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_header_labels</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">species =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>,</span>
<span id="cb7-12">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sex =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sex'</span>,</span>
<span id="cb7-13">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_penguins =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>,</span>
<span id="cb7-14">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bill_length_mm_mean =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>,</span>
<span id="cb7-15">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bill_length_mm_sd =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sd'</span>,</span>
<span id="cb7-16">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bill_depth_mm_mean =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>,</span>
<span id="cb7-17">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bill_depth_mm_sd =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sd'</span>,</span>
<span id="cb7-18">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">body_mass_g_mean =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>,</span>
<span id="cb7-19">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">body_mass_g_sd =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sd'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_header_row</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> pars, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colwidths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add header row</span></span>
<span id="cb7-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge_v</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'header'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge_v</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>species) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># merge multiple instances of the same species name</span></span>
<span id="cb7-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fix_border_issues</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fix random border issues after merging</span></span>
<span id="cb7-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">valign</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">valign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'top'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'body'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># align Species column</span></span>
<span id="cb7-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colformat_double</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># round numbers of specific columns to 2 decimal places</span></span>
<span id="cb7-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">align</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'header'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># align column names centrally</span></span>
<span id="cb7-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">align</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'body'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># align table output to the left</span></span>
<span id="cb7-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fp_border_default</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add in custom horizontal lines to split penguins up</span></span>
<span id="cb7-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">font</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontname =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Times'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'all'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set font name for the table</span></span>
<span id="cb7-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontsize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'all'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set font size for the table</span></span>
<span id="cb7-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autofit</span>()</span>
<span id="cb7-32">  </span>
<span id="cb7-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># view table</span></span>
<span id="cb7-34">table1</span></code></pre></div>
<div class="cell-output-display">

<div class="tabwid"><style>.cl-ef6c39ce{}.cl-ef68e0da{font-family:'Times';font-size:12pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-ef6a73e6{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ef6a73e7{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ef6a73f0{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ef6a7ba2{width:0.933in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7ba3{width:0.906in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bac{width:0.452in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bad{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bae{width:0.577in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7baf{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bb0{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bb1{width:0.933in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bb2{width:0.906in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bb3{width:0.452in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bb6{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bb7{width:0.577in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bb8{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bb9{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bba{width:0.933in;background-color:transparent;vertical-align: top;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bc0{width:0.906in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bc1{width:0.452in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bc2{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bc3{width:0.577in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bca{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bcb{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bcc{width:0.933in;background-color:transparent;vertical-align: top;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bcd{width:0.906in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bce{width:0.452in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bcf{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bd4{width:0.577in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bd5{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bd6{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bd7{width:0.933in;background-color:transparent;vertical-align: top;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bd8{width:0.906in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bde{width:0.452in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bdf{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7be0{width:0.577in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7be1{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7be2{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7be3{width:0.933in;background-color:transparent;vertical-align: top;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7be8{width:0.906in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7be9{width:0.452in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bea{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7beb{width:0.577in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bec{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bed{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bf2{width:0.933in;background-color:transparent;vertical-align: top;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bf3{width:0.906in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bf4{width:0.452in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bf5{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bf6{width:0.577in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bf7{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bfc{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bfd{width:0.933in;background-color:transparent;vertical-align: top;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bfe{width:0.906in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7bff{width:0.452in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c06{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c07{width:0.577in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c08{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c09{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c0a{width:0.933in;background-color:transparent;vertical-align: top;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c0b{width:0.906in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c0c{width:0.452in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c10{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c11{width:0.577in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c12{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c13{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c14{width:0.933in;background-color:transparent;vertical-align: top;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c15{width:0.906in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c1a{width:0.452in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c1b{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c1c{width:0.577in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c1d{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef6a7c1e{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing="true" class="cl-ef6c39ce"><thead><tr style="overflow-wrap:break-word;"><th rowspan="2" class="cl-ef6a7ba2"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">Species</span></p></th><th rowspan="2" class="cl-ef6a7ba3"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">Sex</span></p></th><th rowspan="2" class="cl-ef6a7bac"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">n</span></p></th><th colspan="2" class="cl-ef6a7bad"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">Bill Length (mm)</span></p></th><th colspan="2" class="cl-ef6a7bad"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">Beak Length (mm)</span></p></th><th colspan="2" class="cl-ef6a7baf"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">Body Mass (g)</span></p></th></tr><tr style="overflow-wrap:break-word;"><th class="cl-ef6a7bb6"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">mean</span></p></th><th class="cl-ef6a7bb7"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">sd</span></p></th><th class="cl-ef6a7bb6"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">mean</span></p></th><th class="cl-ef6a7bb7"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">sd</span></p></th><th class="cl-ef6a7bb8"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">mean</span></p></th><th class="cl-ef6a7bb9"><p class="cl-ef6a73e6"><span class="cl-ef68e0da">sd</span></p></th></tr></thead><tbody><tr style="overflow-wrap:break-word;"><td rowspan="3" class="cl-ef6a7bba"><p class="cl-ef6a73e7"><span class="cl-ef68e0da">Adelie</span></p></td><td class="cl-ef6a7bc0"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">female</span></p></td><td class="cl-ef6a7bc1"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">73</span></p></td><td class="cl-ef6a7bc2"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">37.26</span></p></td><td class="cl-ef6a7bc3"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">2.03</span></p></td><td class="cl-ef6a7bc2"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">17.62</span></p></td><td class="cl-ef6a7bc3"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">0.94</span></p></td><td class="cl-ef6a7bca"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">3,368.84</span></p></td><td class="cl-ef6a7bcb"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">269.38</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef6a7bcd"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">male</span></p></td><td class="cl-ef6a7bce"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">73</span></p></td><td class="cl-ef6a7bcf"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">40.39</span></p></td><td class="cl-ef6a7bd4"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">2.28</span></p></td><td class="cl-ef6a7bcf"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">19.07</span></p></td><td class="cl-ef6a7bd4"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">1.02</span></p></td><td class="cl-ef6a7bd5"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">4,043.49</span></p></td><td class="cl-ef6a7bd6"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">346.81</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef6a7bd8"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">unknown</span></p></td><td class="cl-ef6a7bde"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">6</span></p></td><td class="cl-ef6a7bdf"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">37.84</span></p></td><td class="cl-ef6a7be0"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">2.80</span></p></td><td class="cl-ef6a7bdf"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">18.32</span></p></td><td class="cl-ef6a7be0"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">1.27</span></p></td><td class="cl-ef6a7be1"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">3,540.00</span></p></td><td class="cl-ef6a7be2"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">477.17</span></p></td></tr><tr style="overflow-wrap:break-word;"><td rowspan="2" class="cl-ef6a7be3"><p class="cl-ef6a73e7"><span class="cl-ef68e0da">Chinstrap</span></p></td><td class="cl-ef6a7be8"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">female</span></p></td><td class="cl-ef6a7be9"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">34</span></p></td><td class="cl-ef6a7bea"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">46.57</span></p></td><td class="cl-ef6a7beb"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">3.11</span></p></td><td class="cl-ef6a7bea"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">17.59</span></p></td><td class="cl-ef6a7beb"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">0.78</span></p></td><td class="cl-ef6a7bec"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">3,527.21</span></p></td><td class="cl-ef6a7bed"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">285.33</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef6a7bf3"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">male</span></p></td><td class="cl-ef6a7bf4"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">34</span></p></td><td class="cl-ef6a7bf5"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">51.09</span></p></td><td class="cl-ef6a7bf6"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">1.56</span></p></td><td class="cl-ef6a7bf5"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">19.25</span></p></td><td class="cl-ef6a7bf6"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">0.76</span></p></td><td class="cl-ef6a7bf7"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">3,938.97</span></p></td><td class="cl-ef6a7bfc"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">362.14</span></p></td></tr><tr style="overflow-wrap:break-word;"><td rowspan="3" class="cl-ef6a7bfd"><p class="cl-ef6a73e7"><span class="cl-ef68e0da">Gentoo</span></p></td><td class="cl-ef6a7bfe"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">female</span></p></td><td class="cl-ef6a7bff"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">58</span></p></td><td class="cl-ef6a7c06"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">45.56</span></p></td><td class="cl-ef6a7c07"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">2.05</span></p></td><td class="cl-ef6a7c06"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">14.24</span></p></td><td class="cl-ef6a7c07"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">0.54</span></p></td><td class="cl-ef6a7c08"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">4,679.74</span></p></td><td class="cl-ef6a7c09"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">281.58</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef6a7c0b"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">male</span></p></td><td class="cl-ef6a7c0c"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">61</span></p></td><td class="cl-ef6a7c10"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">49.47</span></p></td><td class="cl-ef6a7c11"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">2.72</span></p></td><td class="cl-ef6a7c10"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">15.72</span></p></td><td class="cl-ef6a7c11"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">0.74</span></p></td><td class="cl-ef6a7c12"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">5,484.84</span></p></td><td class="cl-ef6a7c13"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">313.16</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef6a7c15"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">unknown</span></p></td><td class="cl-ef6a7c1a"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">5</span></p></td><td class="cl-ef6a7c1b"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">45.62</span></p></td><td class="cl-ef6a7c1c"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">1.37</span></p></td><td class="cl-ef6a7c1b"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">14.55</span></p></td><td class="cl-ef6a7c1c"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">0.81</span></p></td><td class="cl-ef6a7c1d"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">4,587.50</span></p></td><td class="cl-ef6a7c1e"><p class="cl-ef6a73f0"><span class="cl-ef68e0da">338.19</span></p></td></tr></tbody></table></div>
</div>
</div>
<p>This is looking really good now! We can now export this table in a variety of formats (suitable for word documents, as an image or for powerpoint). I will write an exhaustive list of them here, but I generally like using an image for as long as possible so that I do not have as many formatting issues when putting tables into Microsoft Word or Google Docs.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save as image</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_as_image</span>(table1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'where/to/save/table1.png'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">webshot =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'webshot2'</span>)</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save for word document</span></span>
<span id="cb8-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_as_docx</span>(table1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'where/to/save/table1.docx'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>)</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save for powerpoint</span></span>
<span id="cb8-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_as_pptx</span>(table1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'where/to/save/table1.ppt'</span>)</span></code></pre></div>
</div>
</section>
<section id="make-table-of-model-parameters" class="level2">
<h2 class="anchored" data-anchor-id="make-table-of-model-parameters">Make table of model parameters</h2>
<p>We can use very similar methods to summarise parameters from statistical models. To demonstrate this, I will fit a linear model looking at how body mass is different between species of penguins. We will then use <strong>emmeans()</strong> to extract model parameters and put them into a table.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do models</span></span>
<span id="cb9-2">mod1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(body_mass_g <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> species, d)</span>
<span id="cb9-3">mod2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(body_mass_g <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, d)</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check for significance using an anova</span></span>
<span id="cb9-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anova</span>(mod1, mod2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Analysis of Variance Table

Model 1: body_mass_g ~ species
Model 2: body_mass_g ~ 1
  Res.Df       RSS Df  Sum of Sq      F    Pr(&gt;F)    
1    339  72443483                                   
2    341 219307697 -2 -146864214 343.63 &lt; 2.2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># super different</span></span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab estimates for each species using emmeans</span></span>
<span id="cb11-4">d_params <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">emmeans</span>(mod1, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>species)</span>
<span id="cb11-5"></span>
<span id="cb11-6">d_params</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> species   emmean   SE  df lower.CL upper.CL
 Adelie      3701 37.6 339     3627     3775
 Chinstrap   3733 56.1 339     3623     3843
 Gentoo      5076 41.7 339     4994     5158

Confidence level used: 0.95 </code></pre>
</div>
</div>
<p>We can now turn this into a nice table using similar methods to those we used above.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># text to be new header label</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add same name for columns we want to merge later on</span></span>
<span id="cb13-3">pars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_paragraph</span>(</span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_chunk</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Body Mass (g)'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d.f.'</span>))</span>
<span id="cb13-5">)</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(d_params) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rejig column name orders to have degrees of freedom at the end</span></span>
<span id="cb13-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(species, emmean, SE, lower.CL, upper.CL, df) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">flextable</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_header_labels</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">species =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>,</span>
<span id="cb13-12">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">emmean =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Estimate'</span>,</span>
<span id="cb13-13">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SE =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s.e.'</span>,</span>
<span id="cb13-14">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">df =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d.f.'</span>,</span>
<span id="cb13-15">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower.CL =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2.5%CI"</span>,</span>
<span id="cb13-16">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper.CL =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"97.5%CI"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_header_row</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> pars, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colwidths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add header row</span></span>
<span id="cb13-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge_v</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'header'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># merge column names together</span></span>
<span id="cb13-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">italic</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'header'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make some column names italic</span></span>
<span id="cb13-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colformat_double</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># round numbers of specific columns to 2 decimal places</span></span>
<span id="cb13-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">align</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'header'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># align column names centrally</span></span>
<span id="cb13-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">align</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'body'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># align table output to the left</span></span>
<span id="cb13-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">font</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontname =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Times'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'all'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set font name for the table</span></span>
<span id="cb13-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontsize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'all'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set font size for the table</span></span>
<span id="cb13-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autofit</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fix any random size issues</span></span></code></pre></div>
<div class="cell-output-display">

<div class="tabwid"><style>.cl-ef9ee338{}.cl-ef9c32be{font-family:'Times';font-size:12pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-ef9c32c8{font-family:'Times';font-size:12pt;font-weight:normal;font-style:italic;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-ef9d5798{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ef9d5799{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ef9d5e82{width:0.933in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5e83{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5e84{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5e85{width:0.882in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5e8c{width:0.535in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5e8d{width:0.933in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5e8e{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5e96{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5e97{width:0.882in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5e98{width:0.535in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5e99{width:0.933in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5ea0{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5ea1{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5ea2{width:0.882in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5eaa{width:0.535in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5eab{width:0.933in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5eac{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5eb4{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5eb5{width:0.882in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5eb6{width:0.535in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5eb7{width:0.933in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5ebe{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5ebf{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5ec0{width:0.882in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ef9d5ec1{width:0.535in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing="true" class="cl-ef9ee338"><thead><tr style="overflow-wrap:break-word;"><th rowspan="2" class="cl-ef9d5e82"><p class="cl-ef9d5798"><span class="cl-ef9c32be">Species</span></p></th><th colspan="4" class="cl-ef9d5e83"><p class="cl-ef9d5798"><span class="cl-ef9c32be">Body Mass (g)</span></p></th><th rowspan="2" class="cl-ef9d5e8c"><p class="cl-ef9d5798"><span class="cl-ef9c32c8">d.f.</span></p></th></tr><tr style="overflow-wrap:break-word;"><th class="cl-ef9d5e8e"><p class="cl-ef9d5798"><span class="cl-ef9c32be">Estimate</span></p></th><th class="cl-ef9d5e96"><p class="cl-ef9d5798"><span class="cl-ef9c32c8">s.e.</span></p></th><th class="cl-ef9d5e8e"><p class="cl-ef9d5798"><span class="cl-ef9c32be">2.5%CI</span></p></th><th class="cl-ef9d5e97"><p class="cl-ef9d5798"><span class="cl-ef9c32be">97.5%CI</span></p></th></tr></thead><tbody><tr style="overflow-wrap:break-word;"><td class="cl-ef9d5e99"><p class="cl-ef9d5799"><span class="cl-ef9c32be">Adelie</span></p></td><td class="cl-ef9d5ea0"><p class="cl-ef9d5799"><span class="cl-ef9c32be">3,700.66</span></p></td><td class="cl-ef9d5ea1"><p class="cl-ef9d5799"><span class="cl-ef9c32be">37.62</span></p></td><td class="cl-ef9d5ea0"><p class="cl-ef9d5799"><span class="cl-ef9c32be">3,626.67</span></p></td><td class="cl-ef9d5ea2"><p class="cl-ef9d5799"><span class="cl-ef9c32be">3,774.66</span></p></td><td class="cl-ef9d5eaa"><p class="cl-ef9d5799"><span class="cl-ef9c32be">339</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef9d5eab"><p class="cl-ef9d5799"><span class="cl-ef9c32be">Chinstrap</span></p></td><td class="cl-ef9d5eac"><p class="cl-ef9d5799"><span class="cl-ef9c32be">3,733.09</span></p></td><td class="cl-ef9d5eb4"><p class="cl-ef9d5799"><span class="cl-ef9c32be">56.06</span></p></td><td class="cl-ef9d5eac"><p class="cl-ef9d5799"><span class="cl-ef9c32be">3,622.82</span></p></td><td class="cl-ef9d5eb5"><p class="cl-ef9d5799"><span class="cl-ef9c32be">3,843.36</span></p></td><td class="cl-ef9d5eb6"><p class="cl-ef9d5799"><span class="cl-ef9c32be">339</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-ef9d5eb7"><p class="cl-ef9d5799"><span class="cl-ef9c32be">Gentoo</span></p></td><td class="cl-ef9d5ebe"><p class="cl-ef9d5799"><span class="cl-ef9c32be">5,076.02</span></p></td><td class="cl-ef9d5ebf"><p class="cl-ef9d5799"><span class="cl-ef9c32be">41.68</span></p></td><td class="cl-ef9d5ebe"><p class="cl-ef9d5799"><span class="cl-ef9c32be">4,994.03</span></p></td><td class="cl-ef9d5ec0"><p class="cl-ef9d5799"><span class="cl-ef9c32be">5,158.00</span></p></td><td class="cl-ef9d5ec1"><p class="cl-ef9d5799"><span class="cl-ef9c32be">339</span></p></td></tr></tbody></table></div>
</div>
</div>
<p>Nice. This table can easily be extended to have other parameters in, and this approach can be reused for countless types of models.</p>
</section>
<section id="make-table-of-contrasts" class="level2">
<h2 class="anchored" data-anchor-id="make-table-of-contrasts">Make table of contrasts</h2>
<p>Another common thing we might want to do is look at which (if any) species have significantly different body mass to each other. We can do this by doing post-hoc contrasts between the different species, given we know there is a significant effect of species on body mass.</p>
<p>Again we can look at this using <strong>emmeans()</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">contrasts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">emmeans</span>(mod1, pairwise <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> species)</span>
<span id="cb14-2">contrasts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>contrasts</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> contrast           estimate   SE  df t.ratio p.value
 Adelie - Chinstrap    -32.4 67.5 339  -0.480  0.8807
 Adelie - Gentoo     -1375.4 56.1 339 -24.495  &lt;.0001
 Chinstrap - Gentoo  -1342.9 69.9 339 -19.224  &lt;.0001

P value adjustment: tukey method for comparing a family of 3 estimates </code></pre>
</div>
</div>
<p>We can easily turn this into a publication-ready table using <strong>flextable()</strong>. As the p values are so low, we will conver them to being &lt;0.0001 where appropriate, and convert that column to a character. This gives us more control over how <strong>flextable</strong> prints the output.</p>
<p>This is appropriate here but might not be the best way in other cases.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">contrasts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>contrasts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0001</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;0.0001"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(p.value, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">flextable</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_header_labels</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contrast =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Contrast'</span>,</span>
<span id="cb16-6">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">emmean =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Estimate'</span>,</span>
<span id="cb16-7">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SE =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s.e.'</span>,</span>
<span id="cb16-8">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">df =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d.f.'</span>,</span>
<span id="cb16-9">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t.ratio =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t-ratio"</span>,</span>
<span id="cb16-10">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p value"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">italic</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'header'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make some column names italic</span></span>
<span id="cb16-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colformat_double</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># round numbers of specific columns to 2 decimal places</span></span>
<span id="cb16-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">align</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'header'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># align column names centrally</span></span>
<span id="cb16-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">align</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'body'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># align table output to the left</span></span>
<span id="cb16-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">font</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontname =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Times'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'all'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set font name for the table</span></span>
<span id="cb16-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bold</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;0.0001"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p.value"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make significant p values bold</span></span>
<span id="cb16-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontsize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'all'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set font size for the table</span></span>
<span id="cb16-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autofit</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fix any random size issues</span></span></code></pre></div>
<div class="cell-output-display">

<div class="tabwid"><style>.cl-efaf2a72{}.cl-efac776e{font-family:'Times';font-size:12pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-efac7778{font-family:'Times';font-size:12pt;font-weight:normal;font-style:italic;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-efac7779{font-family:'Times';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-efad9ee6{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-efad9ef0{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-efada602{width:1.563in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada603{width:0.924in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada604{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada60c{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada60d{width:0.716in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada60e{width:0.838in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada60f{width:1.563in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada616{width:0.924in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada617{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada618{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada619{width:0.716in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada620{width:0.838in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada621{width:1.563in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada622{width:0.924in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada62a{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada62b{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada62c{width:0.716in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada62d{width:0.838in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada62e{width:1.563in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada634{width:0.924in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada635{width:0.66in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada63e{width:0.744in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada63f{width:0.716in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-efada648{width:0.838in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing="true" class="cl-efaf2a72"><thead><tr style="overflow-wrap:break-word;"><th class="cl-efada602"><p class="cl-efad9ee6"><span class="cl-efac776e">Contrast</span></p></th><th class="cl-efada603"><p class="cl-efad9ee6"><span class="cl-efac776e">estimate</span></p></th><th class="cl-efada604"><p class="cl-efad9ee6"><span class="cl-efac7778">s.e.</span></p></th><th class="cl-efada60c"><p class="cl-efad9ee6"><span class="cl-efac7778">d.f.</span></p></th><th class="cl-efada60d"><p class="cl-efad9ee6"><span class="cl-efac7778">t-ratio</span></p></th><th class="cl-efada60e"><p class="cl-efad9ee6"><span class="cl-efac7778">p value</span></p></th></tr></thead><tbody><tr style="overflow-wrap:break-word;"><td class="cl-efada60f"><p class="cl-efad9ef0"><span class="cl-efac776e">Adelie - Chinstrap</span></p></td><td class="cl-efada616"><p class="cl-efad9ef0"><span class="cl-efac776e">-32.43</span></p></td><td class="cl-efada617"><p class="cl-efad9ef0"><span class="cl-efac776e">67.51</span></p></td><td class="cl-efada618"><p class="cl-efad9ef0"><span class="cl-efac776e">339.00</span></p></td><td class="cl-efada619"><p class="cl-efad9ef0"><span class="cl-efac776e">-0.48</span></p></td><td class="cl-efada620"><p class="cl-efad9ef0"><span class="cl-efac776e">0.88</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-efada621"><p class="cl-efad9ef0"><span class="cl-efac776e">Adelie - Gentoo</span></p></td><td class="cl-efada622"><p class="cl-efad9ef0"><span class="cl-efac776e">-1,375.35</span></p></td><td class="cl-efada62a"><p class="cl-efad9ef0"><span class="cl-efac776e">56.15</span></p></td><td class="cl-efada62b"><p class="cl-efad9ef0"><span class="cl-efac776e">339.00</span></p></td><td class="cl-efada62c"><p class="cl-efad9ef0"><span class="cl-efac776e">-24.50</span></p></td><td class="cl-efada62d"><p class="cl-efad9ef0"><span class="cl-efac7779">&lt;0.0001</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-efada62e"><p class="cl-efad9ef0"><span class="cl-efac776e">Chinstrap - Gentoo</span></p></td><td class="cl-efada634"><p class="cl-efad9ef0"><span class="cl-efac776e">-1,342.93</span></p></td><td class="cl-efada635"><p class="cl-efad9ef0"><span class="cl-efac776e">69.86</span></p></td><td class="cl-efada63e"><p class="cl-efad9ef0"><span class="cl-efac776e">339.00</span></p></td><td class="cl-efada63f"><p class="cl-efad9ef0"><span class="cl-efac776e">-19.22</span></p></td><td class="cl-efada648"><p class="cl-efad9ef0"><span class="cl-efac7779">&lt;0.0001</span></p></td></tr></tbody></table></div>
</div>
</div>
</section>
</section>
<section id="summary" class="level1">
<h1>Summary</h1>
<p>We have shown how to produce a range of publication-ready tables using <strong>flextable</strong> for summarising data, presenting model parameters, and contrast tables. Importantly all of these processes are reproducible and limit the chances of us making errors in our workflow.</p>
<p>All of the code here can be used to create your own tables. Have fun!</p>
<section id="additional-resources" class="level3">
<h3 class="anchored" data-anchor-id="additional-resources">Additional Resources</h3>
<ul>
<li><strong>flextable</strong> <a href="https://github.com/davidgohel/flextable/">GitHub repository</a></li>
<li><strong>flextable</strong> <a href="https://davidgohel.github.io/flextable/index.html">website</a></li>
<li><strong>flextable</strong> <a href="https://ardata-fr.github.io/flextable-book/">manual/book</a></li>
</ul>
</section>
<section id="acknowledgements" class="level3">
<h3 class="anchored" data-anchor-id="acknowledgements">Acknowledgements</h3>
<p>We did not create this content alone! Inspiration, tips, and resources have been borrowed from multiple sources.</p>
<ul>
<li>Most of the inspiration for this was taken from David Gohel’s great work in developing <strong>flextable</strong></li>
<li>Tips for creating the post, website, and format for the walkthroughs were taken from Stephanie Hicks’ Course <a href="https://www.stephaniehicks.com/jhustatcomputing2022/">website</a> and <a href="https://github.com/stephaniehicks/jhustatcomputing2022">source code</a>.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>flextable</category>
  <category>R</category>
  <guid>https://exeter-data-analytics.github.io/posts/intro_to_flextable/</guid>
  <pubDate>Tue, 14 Feb 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>intRos: Managing research projects with R Studio</title>
  <dc:creator>Stephen Lang</dc:creator>
  <link>https://exeter-data-analytics.github.io/posts/intro_to_projects/</link>
  <description><![CDATA[ 




<section id="outline" class="level1">
<h1>Outline</h1>
<p>When we’re doing research, we often find ourselves working on more than one research project at time. Managing multiple folders of data and code can be confusing enough, but when we throw R into the mix, things can get messy very quickly. A large part of the confusion comes from how most folks manage research projects on their own system — which was been aptly summarised by the wonderful <a href="https://twitter.com/JennyBryan">Jenny Bryan</a>:</p>
<blockquote class="blockquote">
<p><em>If the first line of your R script is</em></p>
<p><code>setwd("C:\Users\jenny\path\that\only\I\have")</code></p>
<p><em>I will come into your office and SET YOUR COMPUTER ON FIRE</em> 🔥.</p>
<p><em>If the first line of your R script is</em></p>
<p><code>rm(list = ls())</code></p>
<p><em>I will come into your office and SET YOUR COMPUTER ON FIRE</em> 🔥.</p>
</blockquote>
<p>While I won’t come and set your computer on fire (especially because I have committed both of these coding crimes in the past), I do want to teach you about two really useful tools for making your life easier for managing research projects, and much nicer for sharing code with collaborators.These two tools are <strong>R Studio projects</strong> and the <strong><code>here</code></strong> package.</p>
</section>
<section id="prerequisites" class="level1">
<h1>Prerequisites</h1>
<ul>
<li>Have <a href="https://posit.co/download/rstudio-desktop/">R and R Studio</a> installed</li>
<li>Have the <code>tidyverse</code> and <code>here</code> packages installed</li>
<li>Have a small research project that you’re ready to projectify, or some test code/data to make into a practice research project</li>
</ul>
</section>
<section id="learning-objectives" class="level1">
<h1>Learning objectives</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Learning objectives
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>This introduction should allow you to:</strong></p>
<ul>
<li>Create new R Studio projects</li>
<li>Use the <code>here</code> package to create reproducible filepaths</li>
<li>Use both tools together to create research projects that are stable, shareable and easy to work with!</li>
</ul>
</div>
</div>
</section>
<section id="managing-research-projects-in-r-studio" class="level1">
<h1>Managing research projects in R Studio</h1>
<section id="whats-wrong-with-rmlist-ls-anyway" class="level3">
<h3 class="anchored" data-anchor-id="whats-wrong-with-rmlist-ls-anyway">What’s wrong with <code>rm(list = ls())</code> anyway?</h3>
<p><code>rm(list = ls())</code> is built to do one thing: wipe the slate clean by nuking your entire R environment. While this might seem like good practice each time you start coding, it actually makes life tricky if you are in the middle of analysing one dataset and want to quickly jump into another research project to do something else; clearing your environment every time means you have to start from scratch, and if you forget to run it before diving into new code, any common variables will be overwritten and madness is likely to follow.</p>
</section>
<section id="the-magic-of-rstudio-and-projects" class="level2">
<h2 class="anchored" data-anchor-id="the-magic-of-rstudio-and-projects">The Magic of RStudio and Projects</h2>
<p>R Studio is great, and if you don’t already use it I’d highly recommend starting now! R Studio is what we’d call a IDE (Integrated Development Environment) that allows us to integrate with R to do much <a href="https://posit.co/products/open-source/rstudio/">more than execute code</a>. Despite its wide use in the science community, there’s one bit of functionality that seems to regularly overlooked by many folks: “Projects”. These files — which you can start to explore from the drop-down menu in the top-right of R Studio — are designed for compartmentalising your work into separate contexts, which are great if you have multiple research projects on the go at once.</p>
<p>RStudio projects resolve the issue of <code>rm(list = ls())</code> by creating a separate R Studio instance for each new project, each with its own R session, environment, temporary files and working directory (see next section on the ‘here’ package for more on filepaths).</p>
<p>If we navigate to <code>New Project...</code> (either from <code>File</code> or the drop-down Projects toolbar in the top-right), we are given the option of creating a new R Studio project in one of three ways:</p>
<ul>
<li>New directory (i.e.&nbsp;start from an empty folder)</li>
<li>Existing directory (when you already have a folder of code and data that you want to turn into a project)</li>
<li>Version control (when you want to start version control of a project — see Next steps section for more info on this)</li>
</ul>
<p>Most of the time you’ll be starting a new project in an empty folder, so we’ll use the <code>New Directory</code> option:</p>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_projects/create_project.png" class="img-fluid figure-img" width="500"></p>
</figure>
</div>
<p>Next you’re provided with a bunch of alternate project types, but we’ll go for the <code>New Project</code> option:</p>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_projects/project_type.png" class="img-fluid figure-img" width="500"></p>
</figure>
</div>
<p>Lastly, we get to choose the directory name (this is the name the project folder will have, so make sure it identifies your project clearly) and where this directory will be saved (i.e where on your computer you want to keep your research project folders):</p>
<p><em>Note: If you tick the box to open in a new session (circled red), whatever you’re currently working on in R Studio won’t have to be saved and closed.</em></p>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_projects/create_new_project.png" class="img-fluid figure-img" width="500"></p>
</figure>
</div>
<p>And that’s it! You now have a nice folder ready to fill with data and code, and never need to use <code>rm(list = ls())</code> ever again. R Studio also did a couple of things for us in the background when we hit the <code>Create Project</code> button:</p>
<ol type="1">
<li>Created an <code>.Rproj</code> file in the top level of the folder (can be used to directly open each project in a new session, and also contains various options for project-specific settings)</li>
<li>Created a hidden directory <code>.Rproj.user</code> where project-specific temporary files are stored (useful if you have a session terminate unexpectedly)</li>
<li>Loaded the project into R Studio, with the project name displayed in the Projects toolbar (top-right) and also in front of the RStudio icon in the task bar (appearance differs between macOS and Windows)</li>
<li>While your root filepath would normally have started at the top of your disk drive, it should now start wherever the Project’s <code>.Rproj</code> file is (you’ll see this pathn when you first load <code>here</code>). So no more writing — <code>C:\extremely\long\filepath\that\only\I\have</code> every time (<strong>BUT</strong> see next section on the <code>here</code> package for making this even better).</li>
</ol>
</section>
<section id="best-practices-for-structuring-project-folders" class="level2">
<h2 class="anchored" data-anchor-id="best-practices-for-structuring-project-folders">Best practices for structuring project folders</h2>
<p>Once a project is created, it’s worth adding folders to contain each of the relevant types of data for your research. For most of us this usually means something like the following: <code>raw_data</code>, <code>code</code>, <code>outputs</code> (folders should only contain data relevant to the research project).</p>
<div class="cell" data-layout-align="left">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://exeter-data-analytics.github.io/posts/intro_to_projects/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" style="width:65.0%"></p>
<figcaption class="figure-caption">Example of what your sub-folders might look like inside your Project folder (adapted from Martin Chan’s <a href="https://martinctc.github.io/blog/rstudio-projects-and-working-directories-a-beginner's-guide/">beginner’s guide to using R Studio projects</a>)</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="building-robust-filepaths-with-the-here-package" class="level2">
<h2 class="anchored" data-anchor-id="building-robust-filepaths-with-the-here-package">Building robust filepaths with the <code>here</code> package</h2>
<p>R Studio projects go a long way to making simpler filepaths for our code by removing the need for <em>absolute</em> filepaths (which are specific to your system), and introducing <em>relative</em> filepaths (i.e.&nbsp;ones that start at the location of .Rproj file). That said, we can make things even better and more reproducible by making use of the <code>here</code> package. <code>here</code> helps make filepaths consistent between different operating systems. For example, while macOS users have filepaths separated by forward slashes (<code>/</code>), windows users have filepaths with backward slashes (<code>\</code>). This means that even with the shorter relative filepaths we get when using Projects, paths like <code>raw_data/2023.csv</code> will only work for macOS users, and if you share this fragile code with someone using Windows it will just throw errors.</p>
<p>In comes the <code>here</code> package to the rescue — we can use it to make reproducible filepaths that work for everyone! <code>here</code> works in a similar way to <code>file.path</code>, where we build a path to a folder or file by listing elements of the path as arguments. For example, if we had some data in a project sub folder of <code>raw_data</code> called <code>2023.csv</code>, we’d make a reproducible filepath to it by writing <code>here("raw_data, "2023.csv")</code>. <code>here</code> does some helpful stuff in the background by a) adding our project’s root directory (which you can look at by just running <code>here()</code>), b) starts evaluating path from the project up (which <code>file.path</code> doesn’t), and c) all while using the right <code>/</code> or <code>\</code> delimiter depending on your system!</p>
<p>When you want to actually use a filepath for say, reading some data with <code>read_csv</code>, you just have to provide the <code>here</code> function and folder arguments wherever you’d normally be putting a <code>Users/stephen's/long/winded/filepath/to/a/file</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"here"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(here) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#load</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#this will magically show the project root directory on your machine</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"raw_data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2019.csv"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#this builds a filepath for where you want to go</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"raw_data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2019.csv"</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#build this same filepath in read_csv</span></span></code></pre></div>
</div>
</section>
<section id="next-steps" class="level2">
<h2 class="anchored" data-anchor-id="next-steps">Next steps</h2>
<p>Using these two sets of tools together, you’re now primed to do some reproducible science on as many different projects as you want! But how can we go about sharing this with other researchers if we wanted to? While you can technically share the entire project folder with collaborators directly, we can also use version control software and online repositories to manage changes to our code and make it accessible. The main way folks do this is using <a href="https://git-scm.com/">git</a> and <a href="https://github.com/">GitHub</a>, and we will do a later post on how to get set up with both in due course.</p>
<p><a href="https://exeter-data-analytics.github.io/intRos/posts.html">intRo to using git, GitHub &amp; R Studio (post coming soon)</a></p>
</section>
</section>
<section id="summary" class="level1">
<h1>Summary</h1>
<p>We’ve had a full intRoduction to getting started with R Studio Projects and <code>here</code>. The next step is to try it out for yourself on a new research project! (Hopefully this knowledge will mean no more time spent crafting obnoxiously long filepaths for <code>setwd()</code> to reply with: <em><span style="color:red;">“Error: cannot change working directory”</span></em> 🤦)</p>
<section id="additional-resources" class="level3">
<h3 class="anchored" data-anchor-id="additional-resources">Additional Resources</h3>
<ul>
<li><a href="https://posit.co/">Posit</a> (previously known as RStudio) have a wealth of information on using the RStudio IDE, including <a href="https://support.posit.co/hc/en-us/articles/200526207-Using-RStudio-Projects">this great how-to guide</a></li>
<li><a href="https://github.com/krlmlr">Kirill Müller</a>, creator of the <code>here</code> package, has a great <a href="https://here.r-lib.org/">primer for getting started</a></li>
</ul>
</section>
<section id="acknowledgements" class="level3">
<h3 class="anchored" data-anchor-id="acknowledgements">Acknowledgements</h3>
<p>We did not create this content alone! Inspiration, tips, and resources have been borrowed from multiple sources.</p>
<ul>
<li>Martin Chan’s <a href="https://martinctc.github.io/blog/rstudio-projects-and-working-directories-a-beginner's-guide/">beginner’s guide to using R Studio projects</a></li>
<li>Jenny Bryan’s <a href="https://github.com/jennybc/here_here">‘Ode to the <code>here</code> package’</a></li>
<li>Malcom Barret’s <a href="https://malco.io/2018/11/05/why-should-i-use-the-here-package-when-i-m-already-using-projects/">blog post</a> on using the <code>here</code> package alongside Projects</li>
</ul>


</section>
</section>

 ]]></description>
  <category>R</category>
  <category>RStudio projects</category>
  <category>tidyverse</category>
  <category>here</category>
  <guid>https://exeter-data-analytics.github.io/posts/intro_to_projects/</guid>
  <pubDate>Tue, 03 Jan 2023 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
